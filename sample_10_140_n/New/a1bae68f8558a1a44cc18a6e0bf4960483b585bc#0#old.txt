[{"block": 0, "type": "code", "linesLength": 2, "startIndex": 0, "lines": ["from fastai import *        # Quick accesss to most common functionality\n", "from fastai.text import *   # Quick accesss to NLP functionality"]}, {"block": 1, "type": "code", "linesLength": 2, "startIndex": 2, "lines": ["path = untar_data(URLs.IMDB_SAMPLE)\n", "path"]}, {"block": 2, "type": "code", "linesLength": 4, "startIndex": 4, "lines": ["data_lm = (TextList.from_csv(path, 'texts.csv', create_func=None, col='text')#, processor=TextProcessor())\n", "                   .random_split_by_pct()\n", "                   .label_for_lm()\n", "                   .databunch())"]}, {"block": 3, "type": "code", "linesLength": 1, "startIndex": 8, "lines": ["data_lm.show_batch()"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 9, "lines": ["len(data_lm.train_ds.vocab.itos), len(data_lm.valid_ds.vocab.itos)"]}, {"block": 5, "type": "code", "linesLength": 4, "startIndex": 10, "lines": ["data_clas = (TextList.from_csv(path, 'texts.csv', create_func=None, col='text', vocab=data_lm.vocab)\n", "                     .random_split_by_pct()\n", "                     .label_from_df(cols=0)\n", "                     .databunch())"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 14, "lines": ["data_clas.show_batch()"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 15, "lines": ["learn = language_model_learner(data_lm, pretrained_model=URLs.WT103)"]}, {"block": 8, "type": "code", "linesLength": 1, "startIndex": 16, "lines": ["learn.predict('Jeremy Howard is', 4)"]}, {"block": 9, "type": "code", "linesLength": 2, "startIndex": 17, "lines": ["path = untar_data(URLs.IMDB)\n", "path.ls()"]}, {"block": 10, "type": "code", "linesLength": 5, "startIndex": 19, "lines": ["data_clas = (TextFilesList.from_folder(path)\n", "             #grap all the text files in path\n", "            .split_by_folder(valid='test')\n", "             #label them all with their folder (that only keeps 'train' and 'test' so no need to filter)\n", "            .label_from_folder(classes=['neg', 'pos']))"]}]