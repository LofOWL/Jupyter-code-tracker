[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["ThinkDSP, by Allen Downey (think-dsp.com)\n", "\n", "This notebook contains code examples from Chapter 4: Noise"]}, {"block": 1, "type": "code", "linesLength": 6, "startIndex": 3, "lines": ["from __future__ import print_function, division\n", "\n", "import thinkdsp\n", "import thinkplot\n", "import math\n", "import numpy"]}, {"block": 2, "type": "code", "linesLength": 6, "startIndex": 9, "lines": ["duration = 0.5\n", "framerate = 11025\n", "n = framerate * duration\n", "ys = numpy.random.uniform(-1, 1, n)\n", "wave = thinkdsp.Wave(ys, framerate)\n", "wave.make_audio()"]}, {"block": 3, "type": "code", "linesLength": 1, "startIndex": 15, "lines": ["wave.plot()"]}, {"block": 4, "type": "code", "linesLength": 2, "startIndex": 16, "lines": ["spectrum = wave.make_spectrum()\n", "spectrum.plot()"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 18, "lines": ["spectrum.plot_power()"]}, {"block": 6, "type": "code", "linesLength": 5, "startIndex": 19, "lines": ["integ = spectrum.make_integrated_spectrum()\n", "integ.plot_power()\n", "thinkplot.config(xlabel='frequency (Hz)',\n", "                ylabel='cumulative power',\n", "                legend=False)\n"]}, {"block": 7, "type": "code", "linesLength": 3, "startIndex": 24, "lines": ["signal = thinkdsp.BrownianNoise()\n", "wave = signal.make_wave(duration=0.5, framerate=11025)\n", "wave.make_audio()"]}, {"block": 8, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["wave.plot()"]}, {"block": 9, "type": "code", "linesLength": 4, "startIndex": 28, "lines": ["spectrum = wave.make_spectrum()\n", "spectrum.plot_power(low=1, linewidth=1, alpha=0.5)\n", "thinkplot.config(xlabel='frequency (Hz)',\n", "                ylabel='power density')"]}, {"block": 10, "type": "code", "linesLength": 6, "startIndex": 32, "lines": ["spectrum = wave.make_spectrum()\n", "spectrum.plot_power(low=1, linewidth=1, alpha=0.5)\n", "thinkplot.config(xlabel='frequency (Hz)',\n", "                ylabel='power density',\n", "                xscale='log',\n", "                yscale='log')"]}, {"block": 11, "type": "code", "linesLength": 4, "startIndex": 38, "lines": ["signal = thinkdsp.BrownianNoise()\n", "wave = signal.make_wave(duration=0.5, framerate=11025)\n", "spectrum = wave.make_spectrum()\n", "spectrum.estimate_slope()"]}, {"block": 12, "type": "code", "linesLength": 3, "startIndex": 42, "lines": ["signal = thinkdsp.PinkNoise(beta=0)\n", "wave = signal.make_wave(duration=0.5)\n", "wave.make_audio()"]}, {"block": 13, "type": "code", "linesLength": 3, "startIndex": 45, "lines": ["signal = thinkdsp.PinkNoise(beta=1)\n", "wave = signal.make_wave(duration=0.5)\n", "wave.make_audio()"]}, {"block": 14, "type": "code", "linesLength": 3, "startIndex": 48, "lines": ["signal = thinkdsp.PinkNoise(beta=2)\n", "wave = signal.make_wave(duration=0.5)\n", "wave.make_audio()"]}, {"block": 15, "type": "code", "linesLength": 10, "startIndex": 51, "lines": ["for beta in [0, 1, 2]:\n", "    signal = thinkdsp.PinkNoise(beta=beta)\n", "    wave = signal.make_wave(duration=0.5)\n", "    spectrum = wave.make_spectrum()\n", "    spectrum.plot_power()\n", "    \n", "thinkplot.config(xlabel='frequency (Hz)',\n", "                ylabel='power density',\n", "                xscale='log',\n", "                yscale='log')"]}, {"block": 16, "type": "code", "linesLength": 8, "startIndex": 61, "lines": ["PI2 = 2 * math.pi\n", "framerate = 10000\n", "amps = numpy.ones(5000)\n", "offsets = numpy.random.uniform(0, PI2, 5000)\n", "i = complex(0, 1)\n", "hs = amps * numpy.exp(i * offsets)\n", "spectrum = thinkdsp.Spectrum(hs, framerate=framerate)\n", "spectrum.plot()"]}, {"block": 17, "type": "code", "linesLength": 3, "startIndex": 69, "lines": ["wave = spectrum.make_wave()\n", "wave.normalize()\n", "wave.make_audio()"]}, {"block": 18, "type": "code", "linesLength": 4, "startIndex": 72, "lines": ["import scipy\n", "ts = numpy.linspace(0, 1, len(wave.ys))\n", "ys = scipy.integrate.cumtrapz(wave.ys, ts)\n", "wave2 = thinkdsp.Wave(ys, framerate)"]}, {"block": 19, "type": "code", "linesLength": 2, "startIndex": 76, "lines": ["wave2.normalize()\n", "wave2.make_audio()"]}, {"block": 20, "type": "code", "linesLength": 3, "startIndex": 78, "lines": ["spectrum2 = wave2.make_spectrum()\n", "spectrum2.plot_power(low=1, linewidth=1, alpha=0.5)\n", "thinkplot.config(xscale='log', yscale='log')"]}, {"block": 21, "type": "code", "linesLength": 1, "startIndex": 81, "lines": ["spectrum2.estimate_slope()"]}, {"block": 22, "type": "code", "linesLength": 0, "startIndex": 82, "lines": []}, {"block": 23, "type": "code", "linesLength": 0, "startIndex": 82, "lines": []}]