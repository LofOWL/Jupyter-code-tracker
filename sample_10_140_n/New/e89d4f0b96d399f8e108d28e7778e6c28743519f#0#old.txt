[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["# Surprise Singular Value Decomposition (SVD)\n", "\n", "TODO: INTRO HERE..."]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["## 0 Global Settings and Imports"]}, {"block": 2, "type": "code", "linesLength": 10, "startIndex": 4, "lines": ["import sys\n", "sys.path.append(\"../../\")\n", "import surprise\n", "import pandas as pd\n", "from reco_utils.dataset.url_utils import maybe_download\n", "from reco_utils.dataset.python_splitters import python_random_split\n", "from reco_utils.evaluation.python_evaluation import rmse, mae, rsquared, exp_var\n", "\n", "print(\"System version: {}\".format(sys.version))\n", "print(\"Surprise version: {}\".format(surprise.__version__))"]}, {"block": 3, "type": "code", "linesLength": 2, "startIndex": 14, "lines": ["# Parameters\n", "# Add here if we need parameters\n"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 16, "lines": ["filepath = maybe_download(\"http://files.grouplens.org/datasets/movielens/ml-100k/u.data\", \"ml-100k.data\")"]}, {"block": 5, "type": "code", "linesLength": 3, "startIndex": 17, "lines": ["data = pd.read_csv(filepath, sep=\"\\t\", names=[\"UserId\", \"MovieId\", \"Rating\", \"Timestamp\"])\n", "data = data[[\"UserId\", \"MovieId\", \"Rating\"]]\n", "data.head()"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 20, "lines": ["train, test = python_random_split(data)"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 21, "lines": ["train = surprise.Dataset.load_from_df(data, reader=surprise.Reader('ml-100k')).build_full_trainset()"]}, {"block": 8, "type": "code", "linesLength": 1, "startIndex": 22, "lines": ["svd = surprise.SVD().fit(train)"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 23, "lines": ["predictions = [svd.predict(row.UserId, row.MovieId, row.Rating) for (_, row) in test.iterrows()]"]}, {"block": 10, "type": "code", "linesLength": 3, "startIndex": 24, "lines": ["predictions_df = pd.DataFrame(predictions)\n", "predictions_df = predictions_df.rename(index=str, columns={'uid': 'User', 'iid': 'itemId', 'est': 'rating'})\n", "predictions_df = predictions_df.drop(['details', 'r_ui'], axis='columns')"]}, {"block": 11, "type": "code", "linesLength": 2, "startIndex": 27, "lines": ["from reco_utils.evaluation.python_evaluation import mean_squared_error\n", "mean_squared_error(test, predictions_df)"]}, {"block": 12, "type": "code", "linesLength": 0, "startIndex": 29, "lines": []}, {"block": 13, "type": "code", "linesLength": 0, "startIndex": 29, "lines": []}, {"block": 14, "type": "code", "linesLength": 0, "startIndex": 29, "lines": []}]