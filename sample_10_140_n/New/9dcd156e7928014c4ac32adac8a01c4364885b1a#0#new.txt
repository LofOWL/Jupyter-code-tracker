[{"block": 0, "type": "code", "linesLength": 18, "startIndex": 0, "lines": ["%reload_ext autoreload\n", "%autoreload 2\n", "%matplotlib inline\n", "\n", "from fastai.imports import *\n", "from fastai.torch_imports import *\n", "from fastai.core import *\n", "from fastai.model import fit\n", "from fastai.dataset import *\n", "\n", "import torchtext\n", "from torchtext import vocab, data\n", "from torchtext.datasets import language_modeling\n", "\n", "from fastai.rnn_reg import *\n", "from fastai.rnn_train import *\n", "from fastai.nlp import *\n", "from fastai.lm_rnn import *"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["## Language modeling"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["### Data"]}, {"block": 3, "type": "code", "linesLength": 2, "startIndex": 20, "lines": ["PATH='data/wikitext-2/'\n", "%ls {PATH}"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 22, "lines": ["!head -5 {PATH}wiki.train.tokens"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 23, "lines": ["!wc -lwc {PATH}wiki.train.tokens"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["!wc -lwc {PATH}wiki.valid.tokens"]}, {"block": 7, "type": "code", "linesLength": 5, "startIndex": 25, "lines": ["TEXT = data.Field(lower=True)\n", "FILES = dict(train='wiki.train.tokens', validation='wiki.valid.tokens', test='wiki.test.tokens')\n", "bs,bptt = 80,70\n", "md = LanguageModelData(PATH, TEXT, **FILES, bs=bs, bptt=bptt, min_freq=10)\n", "len(md.trn_dl), md.nt, len(md.trn_ds), len(md.trn_ds[0].text)"]}, {"block": 8, "type": "code", "linesLength": 1, "startIndex": 30, "lines": ["#md.trn_ds[0].text[:12], next(iter(md.trn_dl))"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["### Train"]}, {"block": 10, "type": "code", "linesLength": 5, "startIndex": 32, "lines": ["em_sz = 200\n", "nh = 500\n", "nl = 3\n", "learner = md.get_model(SGD_Momentum(0.7), bs, em_sz, nh, nl)\n", "reg_fn=partial(seq2seq_reg, alpha=2, beta=1)"]}, {"block": 11, "type": "code", "linesLength": 2, "startIndex": 37, "lines": ["clip=0.3\n", "learner.fit(10, 1, wds=1e-6, reg_fn=reg_fn, clip=clip)"]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 39, "lines": ["learner.fit(10, 6, wds=1e-6, reg_fn=reg_fn, cycle_len=1, cycle_mult=2, clip=clip)"]}, {"block": 13, "type": "code", "linesLength": 1, "startIndex": 40, "lines": ["learner.save('lm_420')"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 41, "lines": ["learner.fit(10, 6, wds=1e-6, reg_fn=reg_fn, cycle_len=1, cycle_mult=2, clip=clip)"]}, {"block": 15, "type": "code", "linesLength": 1, "startIndex": 42, "lines": ["learner.save('lm_419')"]}, {"block": 16, "type": "code", "linesLength": 1, "startIndex": 43, "lines": ["learner.fit(10, 6, wds=1e-6, reg_fn=reg_fn, cycle_len=1, cycle_mult=2, clip=clip)"]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 44, "lines": ["learner.save('lm_418')"]}, {"block": 18, "type": "code", "linesLength": 1, "startIndex": 45, "lines": ["math.exp(4.17)"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 46, "lines": ["### Test"]}, {"block": 20, "type": "code", "linesLength": 8, "startIndex": 47, "lines": ["m=learner.model\n", "s=[\"\"\". <eos> The game began development in 2010 , carrying over a large portion of the work \n", "done on Valkyria Chronicles II . While it retained the standard features of \"\"\".split()]\n", "t=TEXT.numericalize(s)\n", "\n", "m[0].bs=1\n", "m.reset(False)\n", "res,*_ = m(t)"]}, {"block": 21, "type": "code", "linesLength": 2, "startIndex": 55, "lines": ["nexts = torch.topk(res[-1], 10)[1]\n", "[TEXT.vocab.itos[o] for o in to_np(nexts)]"]}, {"block": 22, "type": "code", "linesLength": 5, "startIndex": 57, "lines": ["for i in range(20):\n", "    n=res[-1].topk(2)[1]\n", "    n = n[1] if n.data[0]==0 else n[0]\n", "    print(TEXT.vocab.itos[n.data[0]], end=' ')\n", "    res,*_ = m(n[0].unsqueeze(0))"]}, {"block": 23, "type": "markdown", "linesLength": 1, "startIndex": 62, "lines": ["### End"]}, {"block": 24, "type": "code", "linesLength": 0, "startIndex": 63, "lines": []}]