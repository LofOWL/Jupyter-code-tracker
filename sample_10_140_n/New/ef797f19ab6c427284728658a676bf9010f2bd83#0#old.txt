[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["ThinkDSP, by Allen Downey (think-dsp.com)\n", "\n", "This notebook contains code examples from Chapter 9: Signals and Systems"]}, {"block": 1, "type": "code", "linesLength": 6, "startIndex": 3, "lines": ["from __future__ import print_function, division\n", "\n", "import thinkdsp\n", "import thinkplot\n", "\n", "import numpy"]}, {"block": 2, "type": "markdown", "linesLength": 3, "startIndex": 9, "lines": ["This file contains one of the coolest examples in Think DSP.  It uses LTI system theory to characterize the acoustics of a recording space and simulate the effect this space would have on the sound of a violin performance.\n", "\n", "I'll start with a recording of a gunshot:"]}, {"block": 3, "type": "code", "linesLength": 5, "startIndex": 12, "lines": ["response = thinkdsp.read_wave('180961__kleeb__gunshots.wav')\n", "response = response.segment(start=0.26, duration=5.0)\n", "response.normalize()\n", "response.plot()\n", "thinkplot.config(xlabel='time (s)', ylabel='amplitude', ylim=[-1.05, 1.05], legend=False)"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 17, "lines": ["If you play this recording, you can hear the initial shot and several seconds of echos."]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 18, "lines": ["response.make_audio()"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["This wave records the \"impulse response\" of the room where the gun was fired."]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Now let's load a recording of a violin performance:"]}, {"block": 8, "type": "code", "linesLength": 5, "startIndex": 21, "lines": ["wave = thinkdsp.read_wave('92002__jcveliz__violin-origional.wav')\n", "wave.truncate(len(response))\n", "wave.normalize()\n", "wave.plot()\n", "thinkplot.config(xlabel='time (s)', ylabel='amplitude', ylim=[-1.05, 1.05])"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["And listen to it:"]}, {"block": 10, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["wave.make_audio()"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["Now we can figure out what the violin would sound like if it was played in the room where the gun was fired.  All we have to do is convolve the two waves:"]}, {"block": 12, "type": "code", "linesLength": 2, "startIndex": 29, "lines": ["output = wave * response\n", "output.normalize()"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["Here's what it looks like:"]}, {"block": 14, "type": "code", "linesLength": 3, "startIndex": 32, "lines": ["wave.plot(label='original')\n", "output.plot(label='convolved')\n", "thinkplot.config(xlabel='time (s)', ylabel='amplitude', ylim=[-1.05, 1.05])"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 35, "lines": ["And here's what it sounds like:"]}, {"block": 16, "type": "code", "linesLength": 1, "startIndex": 36, "lines": ["output.make_audio()"]}, {"block": 17, "type": "markdown", "linesLength": 3, "startIndex": 37, "lines": ["If you think this example is black magic, you are not alone.   But there is a good reason why this works, and I do my best to explain it in Chapter 9.  So stay tuned.\n", "\n", "I'd like to thanks jcveliz and kleeb for making these recordings available from freesound.org."]}, {"block": 18, "type": "code", "linesLength": 0, "startIndex": 40, "lines": []}]