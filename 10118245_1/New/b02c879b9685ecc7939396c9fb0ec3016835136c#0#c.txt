[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout&nbsp;<img src=\"media/inria-25-alpha.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Programmation asynchrone"]}, {"block": 2, "type": "markdown", "linesLength": 4, "startIndex": 2, "lines": ["# Typologie d'applications\n", "\n", "* CPU-intensive\n", "* IO-intensive"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["# Dialogue avec un serveur"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["![d\u00e9lais dans les traitements](w9-s1-av-fig1.png) "]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["# Deux serveurs en s\u00e9quence"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["![d\u00e9lais dans les traitements](w9-s1-av-fig2.png) "]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["# Processus et threads"]}, {"block": 8, "type": "markdown", "linesLength": 3, "startIndex": 11, "lines": ["### Processus simple\n", "\n", "processus = espace m\u00e9moire + pile + pointeur avancement"]}, {"block": 9, "type": "markdown", "linesLength": 3, "startIndex": 14, "lines": ["### Thread\n", "\n", "thread = pile + pointeur avancement"]}, {"block": 10, "type": "markdown", "linesLength": 3, "startIndex": 17, "lines": ["### Processus multi-thread\n", "\n", "processus = espace m\u00e9moire + n * (thread)"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["# Multi-thread"]}, {"block": 12, "type": "markdown", "linesLength": 3, "startIndex": 21, "lines": ["### Avantages\n", "* facile d'acc\u00e8s \n", "* disponible en python avec [`import threading`](https://docs.python.org/3/library/threading.html#module-threading)"]}, {"block": 13, "type": "markdown", "linesLength": 2, "startIndex": 24, "lines": ["### Inconv\u00e9nients\n", "* utilisation **tr\u00e8s** d\u00e9licate"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["# Commutations de contexte (1)"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["### Deux pages t\u00e9l\u00e9charg\u00e9es par 2 threads diff\u00e9rents"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["![2 threads](w9-s1-av-fig3.png) "]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["# Commutations de contexte (2)"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["![zoom](w9-s1-av-fig4.png) "]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["# callbacks"]}, {"block": 20, "type": "code", "linesLength": 17, "startIndex": 32, "lines": ["%%javascript\n", "// from https://www.w3schools.com/jquery/jquery_callback.asp\n", "\n", "// cr\u00e9er une zone de texte \n", "$('h1#callbacks').after(\n", "    '<p id=\"disappear\">Un message qui va disparaitre</p>')\n", "\n", "// on d\u00e9finit le comportement du click souris sur le titre\n", "$('h1#callbacks').click(function() {\n", "    $(\"#disappear\").hide(\n", "        // on prend son temps (3s) pour activer l'effet\n", "        3000,\n", "       // on passe une callback qui sera appel\u00e9e \n", "       // une fois l'effet termin\u00e9\n", "       function() {alert(\"termin\u00e9\")}\n", "    )\n", "})"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 49, "lines": ["# inconv\u00e9nients des callbacks"]}, {"block": 22, "type": "markdown", "linesLength": 1, "startIndex": 50, "lines": ["![callbacks-hell](callbacks.png)"]}, {"block": 23, "type": "markdown", "linesLength": 1, "startIndex": 51, "lines": ["# `asyncio` "]}, {"block": 24, "type": "markdown", "linesLength": 6, "startIndex": 52, "lines": ["* notion de **coroutines**\n", "* qui s'ex\u00e9cutent en parall\u00e8le\n", "* mais dans **un seul thread**\n", "* avec du code **lisible**\n", "* en donnant du contr\u00f4le sur les changements de contexte\n", "* et sans besoin de saucissonner son code en callbacks"]}]