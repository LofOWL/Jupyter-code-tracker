[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# L'instruction `del`"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Voici un r\u00e9capitulatif sur l'instruction `del` selon le contexte dans lequel elle est utilis\u00e9e."]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["### Sur une variable"]}, {"block": 5, "type": "markdown", "linesLength": 3, "startIndex": 9, "lines": ["On peut annuler la d\u00e9finition d'une variable, avec `del`.\n", "\n", "Pour l'illustrer, nous utilisons un bloc `try .. except ..` pour attraper le cas \u00e9ch\u00e9ant l'exception `NameError`, qui est produite lorsqu'on r\u00e9f\u00e9rence une variable qui n'est pas d\u00e9finie. "]}, {"block": 6, "type": "code", "linesLength": 5, "startIndex": 12, "lines": ["# la variable a n'est pas d\u00e9finie\n", "try:\n", "    print('a=', a)\n", "except NameError as e:\n", "    print(\"a n'est pas d\u00e9finie\")"]}, {"block": 7, "type": "code", "linesLength": 8, "startIndex": 17, "lines": ["# on la d\u00e9finit\n", "a = 10\n", "\n", "# aucun souci ici, l'exception n'est pas lev\u00e9e\n", "try:\n", "    print('a=', a)\n", "except NameError as e:\n", "    print(\"a n'est pas d\u00e9finie\")"]}, {"block": 8, "type": "code", "linesLength": 9, "startIndex": 25, "lines": ["# maintenant on peut effacer la variable\n", "del a\n", "\n", "# c'est comme si on ne l'avait pas d\u00e9finie\n", "# dans la cellule pr\u00e9c\u00e9dente\n", "try:\n", "    print('a=', a)\n", "except NameError as e:\n", "    print(\"a n'est pas d\u00e9finie\")"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 34, "lines": ["### Sur une liste"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 35, "lines": ["On peut enlever d'une liste les \u00e9l\u00e9ments qui correspondent \u00e0 une *slice*:"]}, {"block": 11, "type": "code", "linesLength": 3, "startIndex": 36, "lines": ["# on se donne une liste\n", "l = list(range(12))\n", "print(l)"]}, {"block": 12, "type": "code", "linesLength": 6, "startIndex": 39, "lines": ["# on consid\u00e8re une slice dans cette liste\n", "print('slice=', l[2:10:3])\n", "\n", "# voyons ce que \u00e7a donne si on efface cette slice\n", "del l[2:10:3]\n", "print(\"apr\u00e8s del\", l)"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 45, "lines": ["### Sur un dictionnaire"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 46, "lines": ["Avec `del` on peut enlever une cl\u00e9, et donc la valeur correspondante, d'un dictionnaire:"]}, {"block": 15, "type": "code", "linesLength": 3, "startIndex": 47, "lines": ["# partons d'un dictionaire simple\n", "d = dict(foo='bar', spam='eggs', a='b')\n", "print(d)"]}, {"block": 16, "type": "code", "linesLength": 3, "startIndex": 50, "lines": ["# on peut enlever une cl\u00e9 avec del\n", "del d['a']\n", "print(d)"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 53, "lines": ["### On peut passer plusieurs arguments \u00e0 `del`"]}, {"block": 18, "type": "code", "linesLength": 3, "startIndex": 54, "lines": ["# Voyons o\u00f9 en sont nos donn\u00e9es\n", "print('l', l)\n", "print('d', d)"]}, {"block": 19, "type": "code", "linesLength": 7, "startIndex": 57, "lines": ["# on peut invoquer 'del' avec plusieurs expressions\n", "# s\u00e9par\u00e9es par une virgule\n", "\n", "del l[3:], d['spam']\n", "\n", "print('l', l)\n", "print('d', d)"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 64, "lines": ["### Pour en savoir plus"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 65, "lines": ["La page sur [l'instruction `del`](https://docs.python.org/3/reference/simple_stmts.html#the-del-statement) dans la documentation python"]}]