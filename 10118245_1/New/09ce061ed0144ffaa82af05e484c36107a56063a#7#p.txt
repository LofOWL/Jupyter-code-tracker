[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# \u00c9num\u00e9rations"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["On trouve dans d'autres langages la notion de type \u00e9num\u00e9r\u00e9s. "]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["L'usage habituel, c'est typiquement un code d'erreur qui peut prendre certaines valeurs pr\u00e9cises. pensez par exemple aux [codes pr\u00e9vus par le protocole HTTP](https://fr.wikipedia.org/wiki/Liste_des_codes_HTTP). Le protocole pr\u00e9voit un code de retour qui peut prendre un ensemble fini de valeurs, comme par exemple 200, 301, 302, 404, 500, mais pas 90 ni 110."]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["On veut pouvoir utiliser des noms parlants dans les programmes qui g\u00e8rent ce type de valeurs, c'est une application typique des types \u00e9num\u00e9r\u00e9s."]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["La biblioth\u00e8que standard offre depuis python-3.4 un module qui s'appelle sans grande surprise `enum`, et qui expose entre autres une classe `Enum`. On l'utiliserait comme ceci, dans un cas d'usage plus simple\u00a0:"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 11, "lines": ["from enum import Enum"]}, {"block": 8, "type": "code", "linesLength": 4, "startIndex": 12, "lines": ["class Flavour(Enum):\n", "    CHOCOLATE = 1\n", "    VANILLA = 2\n", "    PEAR = 3"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 16, "lines": ["vanilla = Flavour.VANILLA"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 17, "lines": ["Un premier avantage est que les repr\u00e9sentations textuelles sont plus parlantes\u00a0:"]}, {"block": 11, "type": "code", "linesLength": 1, "startIndex": 18, "lines": ["str(vanilla)"]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 19, "lines": ["repr(vanilla)"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Vous pouvez aussi retrouver une valeur par son nom\u00a0:"]}, {"block": 14, "type": "code", "linesLength": 2, "startIndex": 21, "lines": ["chocolate = Flavour['CHOCOLATE']\n", "chocolate"]}, {"block": 15, "type": "code", "linesLength": 1, "startIndex": 23, "lines": ["Flavour.CHOCOLATE"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 24, "lines": ["Et r\u00e9ciproquement\u00a0:"]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 25, "lines": ["chocolate.name"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["### `IntEnum` "]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["En fait, le plus souvent on pr\u00e9f\u00e8re utiliser `IntEnum`, une sous-classe de `Enum` qui permet \u00e9galement de faire des comparaisons. Pour reprendre le cas des codes d'erreur HTTP\u00a0:"]}, {"block": 20, "type": "code", "linesLength": 13, "startIndex": 28, "lines": ["from enum import IntEnum\n", "\n", "class HttpError(IntEnum):\n", "\n", "    OK = 200\n", "    REDIRECT = 301\n", "    REDIRECT_TMP = 302\n", "    NOT_FOUND = 404\n", "    INTERNAL_ERROR = 500\n", "\n", "    # avec un IntEnum on peut faire des comparaisons\n", "    def is_redirect(self):\n", "        return 300 <= self.value <= 399"]}, {"block": 21, "type": "code", "linesLength": 1, "startIndex": 41, "lines": ["code = HttpError.REDIRECT_TMP"]}, {"block": 22, "type": "code", "linesLength": 1, "startIndex": 42, "lines": ["code.is_redirect()"]}, {"block": 23, "type": "markdown", "linesLength": 3, "startIndex": 43, "lines": ["### Pour en savoir plus\n", "\n", "Consultez [la documentation officielle du module `enum`](https://docs.python.org/3/library/enum.html)."]}]