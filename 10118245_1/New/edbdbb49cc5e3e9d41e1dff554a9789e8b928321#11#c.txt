[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout&nbsp;<img src=\"media/inria-25-alpha.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Rappels sur *docstring*"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["### Comment documenter une fonction"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Pour rappel, il est recommand\u00e9 de toujours documenter les fonctions en ajoutant une cha\u00eene comme premi\u00e8re instruction. "]}, {"block": 5, "type": "code", "linesLength": 3, "startIndex": 5, "lines": ["def flatten(containers):\n", "    \"returns a list of the elements of the elements in containers\"\n", "    return [element for container in containers for element in container]"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["Cette information peut \u00eatre consult\u00e9e, soit interactivement:"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 9, "lines": ["help(flatten)"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["Soit programmativement:"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 11, "lines": ["flatten.__doc__"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["### Sous quel format ?"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["L'usage est d'utiliser une cha\u00eene simple (d\u00e9limit\u00e9e par `\"` ou `'`) lorsque le *docstring* tient sur une seule ligne, comme ci-dessus."]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 14, "lines": ["Lorsque ce n'est pas le cas - et pour du vrai code, c'est rarement le cas - on utilise des cha\u00eenes multi-lignes (d\u00e9limit\u00e9es par `\"\"\"` ou `'''`). Dans ce cas le format est tr\u00e8s flexible, car le *docstring* est normalis\u00e9, comme on le voit sur ces deux exemples, o\u00f9 le rendu final est identique:"]}, {"block": 13, "type": "code", "linesLength": 10, "startIndex": 15, "lines": ["# un style de docstring multi-lignes\n", "def flatten(containers):\n", "    \"\"\"\n", "provided that containers is a list (or more generally an iterable)\n", "of elements that are themselves iterables, this function\n", "returns a list of the items in these elements\n", "    \"\"\"\n", "    return [element for container in containers for element in container]\n", "\n", "help(flatten)"]}, {"block": 14, "type": "code", "linesLength": 10, "startIndex": 25, "lines": ["# un autre style, qui donne le m\u00eame r\u00e9sultat\n", "def flatten(containers):\n", "    \"\"\"\n", "    provided that containers is a list (or more generally an iterable)\n", "    of elements that are themselves iterables, this function\n", "    returns a list of the items in these elements\n", "    \"\"\"\n", "    return [element for container in containers for element in container]\n", "\n", "help(flatten)"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 35, "lines": ["### Quelle information ?"]}, {"block": 16, "type": "markdown", "linesLength": 3, "startIndex": 36, "lines": ["On remarquera que dans ces exemples, le *docstring* ne r\u00e9p\u00e8te pas le nom de la fonction ou des arguments (en mots savants, sa *signature*), et que \u00e7a n'emp\u00eache pas `help` de nous afficher cette information.\n", "\n", "Le [PEP 257](http://legacy.python.org/dev/peps/pep-0257/) qui donne les conventions autour du *docstring* pr\u00e9cise bien ceci:"]}, {"block": 17, "type": "markdown", "linesLength": 12, "startIndex": 39, "lines": [">  The one-line docstring should NOT be a \"signature\" reiterating the function/method parameters (which can be obtained by introspection). Don't do:\n", "    \n", "    def function(a, b):\n", "        \"\"\"function(a, b) -> list\"\"\"\n", "     \n", ">    <...>\n", "    \n", ">    The preferred form for such a docstring would be something like:\n", "    \n", "    def function(a, b):\n", "        \"\"\"Do X and return a list.\"\"\"\n", ">    (Of course \"Do X\" should be replaced by a useful description!)"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 51, "lines": ["### Pour en savoir plus"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 52, "lines": ["Vous trouverez tous les d\u00e9tails sur *docstring* dans le [PEP 257](http://legacy.python.org/dev/peps/pep-0257/)."]}]