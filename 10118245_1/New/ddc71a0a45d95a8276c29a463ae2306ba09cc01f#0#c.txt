[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["La notion de package"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9ment - niveau basique"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["Dans ce compl\u00e9ment nous d\u00e9crivons la notion de *package* qui permet de cr\u00e9er des librairies plus structur\u00e9es qu'avec un simple module."]}, {"block": 3, "type": "heading", "linesLength": 1, "startIndex": 3, "lines": ["Rappel sur les modules"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Nous avons vu dans la vid\u00e9o qu'on peut charger une librairie, lorsqu'elle se pr\u00e9sente sous la forme d'un seul fichier source, au travers d'un objet python de type **module**."]}, {"block": 5, "type": "code", "linesLength": 2, "startIndex": 5, "lines": ["# commen\u00e7ons par charger un petit utilitaire \n", "from modtools import show_module, show_package"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Maintenant nous chargons un module \"jouet\""]}, {"block": 7, "type": "code", "linesLength": 4, "startIndex": 8, "lines": ["import module_simple\n", "\n", "# voici a quoi ressemble ce module\n", "show_module (module_simple)"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["Il est important de voir que le module joue le r\u00f4le d'**espace de nom**, dans le sens o\u00f9:"]}, {"block": 9, "type": "code", "linesLength": 5, "startIndex": 13, "lines": ["# on peut d\u00e9finir sans rique un variable globale 'spam'\n", "spam = 'eggs'\n", "# qui est ind\u00e9pendante de celle d\u00e9finie dans le module\n", "print \"spam globale\",spam\n", "print \"spam du module\",module_simple.spam"]}, {"block": 10, "type": "markdown", "linesLength": 3, "startIndex": 18, "lines": ["Pour r\u00e9sumer donc, un module est donc un objet python qui correspond \u00e0 la fois \u00e0\n", " * un (seul) **fichier** sur le disque\n", " * un **espace de nom**\n"]}, {"block": 11, "type": "heading", "linesLength": 1, "startIndex": 21, "lines": ["La notion de package"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["Lorsqu'il s'agit d'impl\u00e9menter une tr\u00e8s grosse librairie, il n'est pas concevable de tout concentrer en un seul fichier. C'est l\u00e0 qu'intervient la notion de **package**, qui est un peu au **r\u00e9pertoires** ce que que le **module** est aux **fichiers**."]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["Pour d\u00e9finir un package, il faut obligatoirement cr\u00e9er dans le r\u00e9pertoire (celui, donc, que l'on veut exposer \u00e0 python), un fichier nomm\u00e9 `__init__.py`. Voil\u00e0 comment cela se pr\u00e9sente dans un cas simple"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["import package_jouet"]}, {"block": 15, "type": "code", "linesLength": 1, "startIndex": 25, "lines": ["show_package (package_jouet)"]}]