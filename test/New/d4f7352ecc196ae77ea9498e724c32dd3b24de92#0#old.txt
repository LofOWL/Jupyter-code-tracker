[{"block": 0, "type": "code", "linesLength": 2, "startIndex": 0, "lines": ["import numpy as np\n", "from scipy import stats"]}, {"block": 1, "type": "code", "linesLength": 11, "startIndex": 2, "lines": ["# matplotlib for plotting\n", "import matplotlib.pyplot as plt\n", "%matplotlib inline\n", "from IPython.core.pylabtools import figsize\n", "import matplotlib\n", "\n", "import json\n", "s = json.load(open('style/bmh_matplotlibrc.json'))\n", "matplotlib.rcParams.update(s)\n", "matplotlib.rcParams['figure.figsize'] = (10, 3)\n", "matplotlib.rcParams['font.size'] = 14"]}, {"block": 2, "type": "code", "linesLength": 15, "startIndex": 13, "lines": ["figsize(12, 6)\n", "x = np.linspace(-5, 5, 10000)\n", "y = stats.norm.pdf(x)\n", "n_tests = 1000\n", "\n", "# Random values\n", "x_random = np.random.randn(1000)\n", "\n", "# Non significant random values at p = 0.05\n", "x_random_nonsig = [x for x in x_random if abs(x) < stats.norm.ppf(0.975)]\n", "y_constant_nonsig = [0.02 for _ in range(len(x_random_nonsig))]\n", "\n", "# Significant random values at p = 0.05\n", "x_random_sig = [x for x in x_random if abs(x) > stats.norm.ppf(0.975)]\n", "y_constant_sig = [0.02 for _ in range(len(x_random_sig))]"]}, {"block": 3, "type": "code", "linesLength": 9, "startIndex": 28, "lines": ["\n", "plt.plot(x_random_nonsig, y_constant_nonsig, 'ko', label = 'Non Significant Random Values', alpha = 0.2)\n", "plt.plot(x_random_sig, y_constant_sig, 'ro', label = 'Significant Random Values')\n", "plt.plot(x, y, '-', color = 'navy', label = 'Normal Distribution'); plt.xlabel('z-score'); plt.ylabel('Probability Density');\n", "plt.vlines([stats.norm.ppf(0.975), stats.norm.ppf(0.025)],linestyles='--',\n", "           color = 'red', linewidth=2,\n", "           ymin = 0, ymax = y.max(), label='Significance Limits for $p = 0.05$')\n", "plt.legend(prop={'size': 14});\n", "plt.title('Random Observations at $p=0.05$');"]}, {"block": 4, "type": "code", "linesLength": 7, "startIndex": 37, "lines": ["# Non significant random values at p = 0.05 with correction\n", "x_random_nonsig = [x for x in x_random if abs(x) < stats.norm.ppf(1 - (0.025/n_tests))]\n", "y_constant_nonsig = [0.02 for _ in range(len(x_random_nonsig))]\n", "\n", "# Significant random values at p = 0.05 with correction\n", "x_random_sig = [x for x in x_random if abs(x) > stats.norm.ppf(1 - (0.025/n_tests))]\n", "y_constant_sig = [0.02 for _ in range(len(x_random_sig))]"]}, {"block": 5, "type": "code", "linesLength": 15, "startIndex": 44, "lines": ["\n", "\n", "\n", "\n", "\n", "plt.plot(x_random_nonsig, y_constant_nonsig, 'ko', label = 'Non Significant Random Values', alpha = 0.2)\n", "plt.plot(x_random_sig, y_constant_sig, 'go', label = 'Significant Random Values')\n", "plt.plot(x, y, '-', color = 'navy', label = 'Normal Distribution'); plt.xlabel('z-score'); plt.ylabel('Probability Density');\n", "\n", "plt.vlines([stats.norm.ppf(1 - (0.025/n_tests)), stats.norm.ppf(0.025/n_tests)],linestyles='--',\n", "           color = 'darkgreen', linewidth=2,\n", "           ymin = 0, ymax = y.max(), label='Significance Limits \\nwith Bonferroni Correction')\n", "plt.legend(prop={'size': 14});\n", "plt.title('Random Observations with Bonferroni Correction');\n", "\n"]}, {"block": 6, "type": "code", "linesLength": 0, "startIndex": 59, "lines": []}]