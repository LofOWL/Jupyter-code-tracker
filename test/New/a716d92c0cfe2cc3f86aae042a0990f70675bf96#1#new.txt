[{"block": 0, "type": "code", "linesLength": 5, "startIndex": 0, "lines": ["import pandas as pd\n", "import numpy as np\n", "\n", "import matplotlib.pyplot as plt\n", "%matplotlib inline"]}, {"block": 1, "type": "markdown", "linesLength": 3, "startIndex": 5, "lines": ["# Restaurant Reviews\n", "\n", "This is a simplified fictional example showing Simpson's Paradox: trends that are present when looking at a segmented version of the data can be reversed when aggregating the data. "]}, {"block": 2, "type": "code", "linesLength": 4, "startIndex": 8, "lines": ["data = pd.DataFrame({'A Ratings': [8.0, 9.0], 'B Ratings': [6.5, 8.5], \n", "                     'A Number': [220, 50], 'B Number': [20, 650], \n", "                     'Gender': ['M', 'F']}).set_index('Gender')\n", "data"]}, {"block": 3, "type": "code", "linesLength": 9, "startIndex": 12, "lines": ["a_average = (data.loc[:, 'A Ratings'] * data.loc[:, 'A Number']).sum() / data.loc[:, 'A Number'].sum(axis=0)\n", "b_average = (data.loc[:, 'B Ratings'] * data.loc[:, 'B Number']).sum() / data.loc[:, 'B Number'].sum(axis=0)\n", "\n", "\n", "data.loc['Combined'] = [a_average, \n", "                        b_average, \n", "                        data['A Number'].sum(), \n", "                        data['B Number'].sum()]\n", "data.round(2)"]}, {"block": 4, "type": "markdown", "linesLength": 3, "startIndex": 21, "lines": ["# Hours of Exercise vs Chance of Developing Diabetes\n", "\n", "This is another fictional example showing Simpson's Paradox in the context of a correlation. When looking at the data individually, there is a negative correlation between hours of exercise and chance of developing diabetes, but when aggregating the data, the correlation reverses! "]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["from numpy.polynomial.polynomial import polyfit"]}, {"block": 6, "type": "code", "linesLength": 32, "startIndex": 25, "lines": ["n_samples = 100\n", "np.random.seed(42)\n", "ages = np.random.randint(20, 50, n_samples)\n", "hours = np.random.randint(1, 5, n_samples) + np.random.randn(n_samples)\n", "p = 15 + 0.5 * ages + -2.1 * hours + np.random.randn(n_samples) *  2\n", "under_50 = pd.DataFrame({'age': ages, 'Hours Exercised': hours, 'probability': p})\n", "\n", "\n", "def plot_relationship(data, c, color):\n", "    \"\"\"Plot a scatter plot with linear fit\"\"\"\n", "    x, y = np.array(data[c]), np.array(data['probability'])\n", "    # Linear fit (polynomial of degree 1)\n", "    b, m = polyfit(x, y, 1)\n", "    # Plot scatterplot\n", "    data.plot(x = c, y = 'probability', c = color, \n", "              style = 'o', legend = None, \n", "              figsize = (8, 6), ms = 10)\n", "    # Plot linear fit\n", "    plt.plot(x, m * x + b, '-', color = 'k');\n", "    if color == '#d9d142':\n", "        plt.title(f'Probability vs {c.capitalize()} under 50')\n", "    elif color == '#04c5ff':\n", "        plt.title(f'Probability vs {c.capitalize()} over 50')\n", "    else:\n", "        plt.title(f'Probability vs {c.capitalize()} Combined')\n", "    corr_coef = np.corrcoef(x, y)[0][1]\n", "    ax = plt.gca()\n", "    plt.ylabel('Probability'); \n", "    plt.text(0.2, 0.75, r'$\\rho$ = ' + f'{round(corr_coef, 2)}', fontsize = 28, color = 'k', \n", "             transform=ax.transAxes)\n", "\n", "plot_relationship(under_50, 'age', '#04c5ff')"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 57, "lines": ["plot_relationship(under_50, 'Hours Exercised', '#04c5ff' )"]}, {"block": 8, "type": "code", "linesLength": 6, "startIndex": 58, "lines": ["n_samples = 100\n", "ages = np.random.randint(50, 85, n_samples)\n", "hours = np.random.randint(5, 10, n_samples) + np.random.randn(n_samples) * 0.5\n", "p = 25 + 0.4 * ages + -2 * hours + np.random.randn(n_samples) \n", "over_50 = pd.DataFrame({'age': ages, 'Hours Exercised': hours, 'probability': p})\n", "plot_relationship(over_50, 'age', '#d9d142')"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 64, "lines": ["plot_relationship(over_50, 'Hours Exercised', '#d9d142')"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 65, "lines": ["combined = pd.concat([under_50, over_50], axis = 0)\n", "plot_relationship(combined, 'Hours Exercised', 'r')"]}, {"block": 11, "type": "code", "linesLength": 1, "startIndex": 67, "lines": ["plot_relationship(combined, 'age', 'r')"]}, {"block": 12, "type": "code", "linesLength": 2, "startIndex": 68, "lines": ["colors = [ '#04c5ff' for _ in range(n_samples)]\n", "colors.extend(['#d9d142' for _ in range(n_samples)])"]}, {"block": 13, "type": "code", "linesLength": 2, "startIndex": 70, "lines": ["plt.scatter(combined['Hours Exercised'],\n", "            combined['probability'], c = colors)"]}, {"block": 14, "type": "code", "linesLength": 0, "startIndex": 72, "lines": []}]