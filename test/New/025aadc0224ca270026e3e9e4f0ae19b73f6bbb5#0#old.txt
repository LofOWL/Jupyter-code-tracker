[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["# Stock Prediction using Stocker\n", "\n", "Stocker was developed for both stock analysis and prediction. Analysis is mostly concerned with looking at past data, and prediction is using the past data to make estimates for the future. This notebook will document some of the basic capabilities of Stocker for prediction. I must recommend against any investing in the stock market, with or without Stocker! Mostly I made this tool because I wanted to get some experience with time series analysis and object-oriented programming. To see the code for Stocker, check out stocker.py and to see usage for analysis, look at the Stocker Analysis Usage notebook. "]}, {"block": 1, "type": "code", "linesLength": 4, "startIndex": 3, "lines": ["# Matplotlib for plotting in the notebook\n", "import matplotlib.pyplot as plt\n", "\n", "%matplotlib inline"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["## Import the Stocker Class"]}, {"block": 3, "type": "code", "linesLength": 1, "startIndex": 8, "lines": ["from stocker import Stocker"]}, {"block": 4, "type": "markdown", "linesLength": 3, "startIndex": 9, "lines": ["### Instantiate a Stocker object \n", "\n", "We will be looking at Amazon stock data throughout this example. To retrieve the data, we simply need to pass the correct ticker to the stocker class and assign it to a variable. "]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 12, "lines": ["amazon = Stocker('AMZN')"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["### Basic Plot of Stock History"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 14, "lines": ["amazon.plot_stock()"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["## Create Model to Examine Trends"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 16, "lines": ["model, model_data = amazon.create_prophet_model()"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 17, "lines": ["model.plot_components(model_data)\n", "plt.show()"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["# Changepoint Prior Scale Selection"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["## Graphical Comparison"]}, {"block": 13, "type": "code", "linesLength": 1, "startIndex": 21, "lines": ["amazon.changepoint_prior_analysis()"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["## Quantitative Comparison"]}, {"block": 15, "type": "code", "linesLength": 1, "startIndex": 23, "lines": ["amazon.changepoint_prior_validation()"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 24, "lines": ["### Refine Search "]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 25, "lines": ["amazon.changepoint_prior_validation(changepoint_priors=[0.2, 0.3, 0.4, 0.5])"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["We now assign the changepoint prior with the smallest error on the testing set to the Stocker object. The prior is one of the attiributes and we can change it like any other variable. "]}, {"block": 19, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["amazon.changepoint_prior_scale = 0.2"]}, {"block": 20, "type": "code", "linesLength": 1, "startIndex": 28, "lines": ["model, model_data = amazon.create_prophet_model(days=365)"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["# Evaluate Predictions"]}, {"block": 22, "type": "code", "linesLength": 1, "startIndex": 30, "lines": ["amazon.evaluate_prediction()"]}, {"block": 23, "type": "code", "linesLength": 1, "startIndex": 31, "lines": ["amazon.predict_future(days=10)"]}, {"block": 24, "type": "code", "linesLength": 1, "startIndex": 32, "lines": ["amazon.predict_future(days=100)"]}, {"block": 25, "type": "markdown", "linesLength": 3, "startIndex": 33, "lines": ["The uncertainty increases the farther out in the future we predict. This is to be expected because the initial forecasts have some uncertainty, and the next forecasts are made on the previous ones, so the range of possible values grows over time. \n", "\n", "Whenever we make a prediction, we must be sure to include uncertainty intervals because there are no processes that can be exactly estimated in the future. While most people interpret a confidence interval as a lack of confidence, it really displays that we know the limitations of our model. "]}, {"block": 26, "type": "code", "linesLength": 0, "startIndex": 36, "lines": []}]