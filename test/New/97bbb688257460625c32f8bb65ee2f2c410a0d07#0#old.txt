[{"block": 0, "type": "code", "linesLength": 19, "startIndex": 0, "lines": ["# Data science imports\n", "import pandas as pd\n", "import numpy as np\n", "\n", "# Options for pandas\n", "pd.options.display.max_columns = 20\n", "\n", "# Display all cell outputs\n", "from IPython.core.interactiveshell import InteractiveShell\n", "InteractiveShell.ast_node_interactivity = 'all'\n", "\n", "# plotly standard imports\n", "import plotly.plotly as py\n", "import plotly.graph_objs as go\n", "from plotly.offline import iplot\n", "\n", "# Cufflinks wrapper on plotly\n", "import cufflinks\n", "cufflinks.go_offline()"]}, {"block": 1, "type": "code", "linesLength": 2, "startIndex": 19, "lines": ["df = pd.read_parquet('data/medium_data_2019_01_06')\n", "df.head()"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["# Histograms"]}, {"block": 3, "type": "code", "linesLength": 1, "startIndex": 22, "lines": ["df['claps'].iplot(kind='hist', bins=30, xTitle='claps', yTitle='count', title='Claps Distribution')"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["## Bar Plot"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["cufflinks.colors.scales()"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 25, "lines": ["cufflinks.themes.THEMES.keys()"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 26, "lines": ["colors = [x[1] for x in cufflinks.colors.get_colorscale('set1')]"]}, {"block": 8, "type": "code", "linesLength": 0, "startIndex": 27, "lines": []}, {"block": 9, "type": "code", "linesLength": 2, "startIndex": 27, "lines": ["df['publication'].iplot(kind='histogram', xTitle='publication', theme='solar',\n", "                        yTitle='Count', title='Publication Counts')"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["## Two Variables "]}, {"block": 11, "type": "code", "linesLength": 2, "startIndex": 30, "lines": ["df['hour_started'] = df['started_date'].dt.hour\n", "df['hour_published'] = df['published_date'].dt.hour"]}, {"block": 12, "type": "code", "linesLength": 8, "startIndex": 32, "lines": ["df[['hour_published', 'hour_started']].iplot(\n", "    kind='hist',\n", "    bins=24,\n", "    opacity=0.8,\n", "    barmode='group',\n", "    xTitle='Hour',\n", "    yTitle='Count',\n", "    title='Hour Started and Hour Published')"]}, {"block": 13, "type": "code", "linesLength": 8, "startIndex": 40, "lines": ["df[['hour_published', 'hour_started']].iplot(\n", "    kind='hist',\n", "    bins=24,\n", "    opacity=0.8,\n", "    barmode='overlay',\n", "    xTitle='Hour',\n", "    yTitle='Count',\n", "    title='Hour Started and Hour Published')"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 48, "lines": ["## Boxplot"]}, {"block": 15, "type": "code", "linesLength": 2, "startIndex": 49, "lines": ["\n", "df.iplot(kind='scatter', y='claps', x='published_date', categories='publication')"]}, {"block": 16, "type": "code", "linesLength": 3, "startIndex": 51, "lines": ["df.groupby('publication').iplot(kind='box', y='claps', theme='white',\n", "                                categories='publication', \n", "                                yTitle='Number', title='Box Plot')"]}, {"block": 17, "type": "code", "linesLength": 2, "startIndex": 54, "lines": ["df.groupby('publication')[['claps', 'fans', 'publication']].iplot(kind='box', theme='white', categories='publication', \n", "                                           yTitle='Number', title='Box Plot')"]}, {"block": 18, "type": "code", "linesLength": 10, "startIndex": 56, "lines": ["df.iplot(\n", "    x = 'claps',\n", "    kind='hist',\n", "    bins=24,\n", "    categories='publication',\n", "    opacity=0.8,\n", "    barmode='overlay',\n", "    xTitle='Hour',\n", "    yTitle='Count',\n", "    title='Hour Started and Hour Published')"]}, {"block": 19, "type": "code", "linesLength": 1, "startIndex": 66, "lines": ["df[['claps', 'fans']].iplot(kind='hist', bins=20)"]}, {"block": 20, "type": "code", "linesLength": 9, "startIndex": 67, "lines": ["layout = dict(xaxis=dict(type='log', title='word count'),\n", "              yaxis=dict(title='Claps'), title='Claps vs Word Count')\n", "\n", "data = [go.Scatter(x = df['word_count'], \n", "                   y = df['claps'], \n", "                   mode='markers')]\n", "\n", "figure = go.Figure(data=data, layout=layout)\n", "iplot(figure)"]}, {"block": 21, "type": "code", "linesLength": 0, "startIndex": 76, "lines": []}, {"block": 22, "type": "code", "linesLength": 2, "startIndex": 76, "lines": ["from plotly.offline import iplot\n", "iplot(figure)"]}, {"block": 23, "type": "code", "linesLength": 2, "startIndex": 78, "lines": ["from plotly.plotly import plot\n", "from plotly.offline import init_notebook_mode"]}, {"block": 24, "type": "code", "linesLength": 1, "startIndex": 80, "lines": ["plot(figure)"]}, {"block": 25, "type": "code", "linesLength": 0, "startIndex": 81, "lines": []}]