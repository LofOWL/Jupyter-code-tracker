[{"block": 0, "type": "markdown", "linesLength": 11, "startIndex": 0, "lines": ["# Introduction: Looking at Data to Correct Cognitive Biases\n", "\n", "[Medium article: \"How to Overcome Biases with Data\"](https://medium.com/p/692c8c35f4a5)\n", "\n", "In this notebook, we will investigate a simple problem: is the smoking rate higher in the metro area of my hometown (Peoria, Il) or in Boston. The purpose is to see if I can combat my cognitive biases with data and explore the data to determine why I made a incorrect conclusion.\n", "\n", "# City Level Data\n", "\n", "https://nccd.cdc.gov/500_Cities/rdPage.aspx?rdReport=DPH_500_Cities.ComparisonReport&Locations=1759000,2507000&rdRequestForwarding=Form\n", "\n", "![](images/rates_smoking.PNG)"]}, {"block": 1, "type": "code", "linesLength": 3, "startIndex": 11, "lines": ["import numpy as np\n", "import matplotlib.pyplot as plt\n", "%matplotlib inline"]}, {"block": 2, "type": "code", "linesLength": 11, "startIndex": 14, "lines": ["# Boston\n", "b_p = 0.164\n", "b_ci = [0.161, 0.166]\n", "b_adults = 472582\n", "b_smokers = b_p * b_adults\n", "\n", "# Peoria\n", "p_p = 0.199\n", "p_ci = [0.194, 0.203]\n", "p_adults = 83925\n", "p_smokers = p_p * p_adults"]}, {"block": 3, "type": "markdown", "linesLength": 14, "startIndex": 25, "lines": ["## Difference Between Two Proportions\n", "\n", "This is assuming 10% of adults in each city surveyed. \n", "\n", "Relevant Data:\n", "\n", "* Boston number of adults = 472582: https://www.bumc.bu.edu/inspir/files/HTML/Boston%20Population%20and%20Demographics.htm\n", "* Peoria number of adults = 83925: https://www.infoplease.com/us/illinois/demographic-statistics-61\n", "* Boston smoking rate = 0.164 (from first source in image)\n", "* Peoria smoking rate = 0.199(from first source in image)\n", "\n", "z-score for 95% CI: http://www.stat.yale.edu/Courses/1997-98/101/confint.htm\n", "\n", "Difference between two proportions formula: https://onlinecourses.science.psu.edu/stat100/node/57/"]}, {"block": 4, "type": "code", "linesLength": 15, "startIndex": 39, "lines": ["# Standard errors individual\n", "b_se = np.sqrt((b_p * (1 - b_p)) / (0.1 * b_adults))\n", "p_se = np.sqrt((p_p * (1 - p_p)) / (0.1 * p_adults))\n", "\n", "# Standard error combined\n", "se_diff = np.sqrt(np.square(b_se) + np.square(p_se))\n", "\n", "z_95 = 1.96\n", "\n", "# Upper confidence bound for difference (two-tailed)\n", "uci = (p_p - b_p) + z_95 * se_diff\n", "# Lower confidence bound\n", "lci = (p_p - b_p) - z_95 * se_diff\n", "\n", "print(f'The 95% confidence interval for difference between smoking rates is from {round(100 * lci, 4)}% to {round(100 * uci, 4)}%')"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 54, "lines": ["This indicates the difference is significant. We can also tell this from the non-overlapping individual confidence intervals."]}, {"block": 6, "type": "markdown", "linesLength": 3, "startIndex": 55, "lines": ["# Distributions\n", "\n", "If we assume the smoking rate proportion is normally distributed then we can construct a normal distribution and sample from it. Then we can visually show the data in boxplots."]}, {"block": 7, "type": "code", "linesLength": 14, "startIndex": 58, "lines": ["z_95 = 1.96\n", "\n", "b_sigma = ((b_ci[1] - b_p) / z_95) * 1\n", "p_sigma = ((p_ci[1] - p_p) / z_95) * 1\n", "\n", "print(f'Standard deviation for Boston: {b_sigma}')\n", "print(f'Standard deviation for Peoria: {p_sigma}')\n", "\n", "# Sample distributions \n", "p_dist = np.random.normal(loc = p_p, scale = p_sigma, size = 100000)\n", "b_dist = np.random.normal(loc = b_p, scale = b_sigma, size = 100000)\n", "# Names\n", "b = np.repeat('boston', repeats = len(b_dist))\n", "p = np.repeat('peoria', repeats = len(p_dist))"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 72, "lines": ["Confidence interval for Boston."]}, {"block": 9, "type": "code", "linesLength": 3, "startIndex": 73, "lines": ["from scipy import stats\n", "b_ci = stats.norm.interval(0.95, loc = b_p, scale = b_sigma)\n", "b_ci"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 76, "lines": ["Confidence interval for Peoria"]}, {"block": 11, "type": "code", "linesLength": 2, "startIndex": 77, "lines": ["p_ci = stats.norm.interval(0.95, loc = p_p, scale = p_sigma)\n", "p_ci"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 79, "lines": ["The confidence intervals from our simulated data are basically the same as those from the survey data. The survey data does have uneven confidence intervals though. "]}, {"block": 13, "type": "code", "linesLength": 4, "startIndex": 80, "lines": ["import pandas as pd\n", "dist_df = pd.DataFrame({'proportion': list(b_dist) + list(p_dist)})\n", "dist_df['city'] = list(b) + list(p)\n", "dist_df.groupby('city').describe()"]}, {"block": 14, "type": "code", "linesLength": 3, "startIndex": 84, "lines": ["import matplotlib.pyplot as plt\n", "%matplotlib inline\n", "default_c = plt.rcParams['axes.prop_cycle'].by_key()['color']\n"]}, {"block": 15, "type": "code", "linesLength": 10, "startIndex": 87, "lines": ["import seaborn as sns\n", "plt.figure(figsize = (10, 8))\n", "p1 = sns.kdeplot(p_dist, label = 'Peoria')\n", "p2 = sns.kdeplot(b_dist, label = 'Boston')\n", "plt.legend(); plt.title('Distribution of Percentages');\n", "\n", "# Means and confidence intervals\n", "plt.vlines([b_p, p_p], ymin = 0, ymax = 400, colors = ['#D4CA3A', '#00BEFF']);\n", "plt.hlines([25], xmin = b_ci[0], xmax = b_ci[1], colors = ['#D4CA3A'], linestyles = '-')\n", "plt.hlines([25], xmin = p_ci[0], xmax = p_ci[1], colors = ['#00BEFF'], linestyles = '-');"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 97, "lines": ["The confidence interval for Boston is slightly narrower. Boxplots are a good way to show a distribution."]}, {"block": 17, "type": "code", "linesLength": 5, "startIndex": 98, "lines": ["plt.rcParams['font.size'] = 32\n", "plt.figure(figsize = (20, 8))\n", "sns.boxplot(x = 'proportion', y = 'city', data = dist_df);\n", "plt.xlabel('Proportion of Smokers');\n", "plt.title('Boxplot of Smoking Rates');"]}, {"block": 18, "type": "code", "linesLength": 4, "startIndex": 103, "lines": ["plt.figure(figsize = (10, 8))\n", "sns.violinplot(y = 'proportion', x = 'city', data = dist_df);\n", "plt.ylabel('Percentage of Smokers');\n", "plt.title('Violinplot of Smoking Rates');"]}, {"block": 19, "type": "markdown", "linesLength": 3, "startIndex": 107, "lines": ["# How Many Smokers Do I See Per Day?\n", "\n", "To show why I would see many more smokers in Boston, we can simulate 10,000 days with the known rates and the number of people I meet in my hometown and Boston. Putting it in these terms shows why I would be susceptible to the availability heuristic."]}, {"block": 20, "type": "code", "linesLength": 4, "startIndex": 110, "lines": ["n_samples = 10000\n", "people_meet_peoria = 50\n", "peoria_see = np.random.binomial(1, p_p, size = (n_samples, people_meet_peoria))\n", "peoria_smokers = np.sum(peoria_see, axis = 1)"]}, {"block": 21, "type": "code", "linesLength": 3, "startIndex": 114, "lines": ["people_meet_boston = 5000\n", "boston_see = np.random.binomial(1, p_p, size = (n_samples, people_meet_boston))\n", "boston_smokers = np.sum(boston_see, axis = 1)"]}, {"block": 22, "type": "code", "linesLength": 7, "startIndex": 117, "lines": ["plt.figure(figsize = (20, 8))\n", "plt.subplot(1, 2, 1)\n", "plt.xlabel('Number of Smokers Seen'); plt.title('Hometown'); plt.ylabel('Days');\n", "plt.hist(peoria_smokers, bins = 20, edgecolor = 'k');\n", "plt.subplot(1, 2, 2)\n", "plt.hist(boston_smokers, bins = 20, edgecolor = 'k');\n", "plt.xlabel('Number of Smokers Seen'); plt.title('Boston'); plt.ylabel('Days');"]}, {"block": 23, "type": "markdown", "linesLength": 13, "startIndex": 124, "lines": ["# Costs\n", "\n", "Out of curiousity, I wanted to calculate the economic costs of smoking and compare these to the revenues from taxes. The following data was used.\n", "\n", "\n", "* Economic Costs: https://www.cdc.gov/tobacco/data_statistics/fact_sheets/economics/econ_facts/index.htm\n", "     * \\$326 billion = 170 billion for direct medical care and 156 billion in lost productivity\n", "     * Number of smokers = 37.8 million: https://www.cdc.gov/tobacco/data_statistics/fact_sheets/adult_data/cig_smoking/index.htm\n", "     * Cost per smoker = 326 billion / 37.8 million = \\$8624\n", "* Taxes: \n", "    * \\$1.98 / pack in Illinois: https://www.salestaxhandbook.com/illinois/tobacco\n", "    * \\$3.51 / pack in Massachusetts: https://www.mass.gov/info-details/dor-cigarette-and-tobacco-excise-tax\n", "    * Assume 1 pack / smoker / day\n"]}, {"block": 24, "type": "code", "linesLength": 4, "startIndex": 137, "lines": ["total_cost = 326_000_000_000\n", "n_smokers = 37_800_000\n", "cost_per_smoker = total_cost / n_smokers\n", "cost_per_smoker"]}, {"block": 25, "type": "code", "linesLength": 5, "startIndex": 141, "lines": ["n_packs = 1\n", "days = 365 \n", "\n", "p_packtax = 1.98\n", "b_packtax = 3.51"]}, {"block": 26, "type": "code", "linesLength": 5, "startIndex": 146, "lines": ["p_revenue = p_smokers * p_packtax * n_packs * days\n", "b_revenue = b_smokers * b_packtax * n_packs * days\n", "\n", "print(f'Tax revenue in Peoria from smoking: ${p_revenue:,.2f}.')\n", "print(f'Tax revenue in Boston from smoking: ${b_revenue:,.2f}.')"]}, {"block": 27, "type": "code", "linesLength": 5, "startIndex": 151, "lines": ["p_cost = cost_per_smoker * p_smokers\n", "b_cost = cost_per_smoker * b_smokers\n", "\n", "print(f'Cost to Peoria from smoking: ${p_cost:,.2f}.')\n", "print(f'Cost to Boston from smoking: ${b_cost:,.2f}.')"]}, {"block": 28, "type": "code", "linesLength": 13, "startIndex": 156, "lines": ["data = pd.DataFrame({'value': [b_cost, p_cost, b_revenue, p_revenue],\n", "                     'metric': ['cost', 'cost', 'revenue', 'revenue'],\n", "                     'city': ['Boston', 'Peoria', 'Boston', 'Peoria']})\n", "\n", "plt.figure(figsize = (10, 8))\n", "\n", "ax = sns.barplot(x = 'city', y = 'value', hue = 'metric', palette= {'cost': 'red', 'revenue': 'black'}, \n", "                 data = data)\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "plt.legend(prop = {'size': 20})\n", "plt.title('Smoking Cost vs Revenue')\n", "plt.ylabel(None)\n", "ax.yaxis.set_ticklabels(tick_labels);"]}, {"block": 29, "type": "markdown", "linesLength": 5, "startIndex": 169, "lines": ["# Break Even Point for Tax Per Pack\n", "\n", "To figure out how high taxes should be to make revenue equal to cost, we can find the point where $\\text{cost} == \\text{revenue}$\n", "\n", "$$\\text{tax_required} = \\frac{\\text{cost_per_smoker}}{\\text{days} * \\text{n_packs}}$$"]}, {"block": 30, "type": "code", "linesLength": 3, "startIndex": 174, "lines": ["tax_required = cost_per_smoker / (days * n_packs)\n", "\n", "print(f'Breaking even requires a tax of ${tax_required:,.2f} per pack.')"]}, {"block": 31, "type": "markdown", "linesLength": 3, "startIndex": 177, "lines": ["## Revenue vs Tax with Constant Smoking Rate\n", "\n", "This plot shows the revenue versus tax per pack with no decrease in the number of smokers."]}, {"block": 32, "type": "code", "linesLength": 15, "startIndex": 180, "lines": ["tax =  np.arange(0, 25, 0.1)\n", "revenue = [b_smokers * n_packs * days * x for x in tax]\n", "cost = [b_smokers * cost_per_smoker for _ in range(len(revenue))]\n", "\n", "plt.figure(figsize = (10, 8))\n", "plt.plot(tax, revenue, label = 'revenue', color = 'black')\n", "plt.axhline(y = cost[0], label = 'cost', color = 'red')\n", "plt.plot(tax_required, cost[0], marker = '*', ms = 50, color = 'gold', label = 'break even');\n", "plt.legend(prop = {'size': 18})\n", "ax = plt.gca()\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "ax.yaxis.set_ticklabels(tick_labels);\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "plt.xlabel(\"Tax Per Pack\"); plt.ylabel(None); plt.title('Cost and Revenue vs Tax with Constant Smoking Rate');\n"]}, {"block": 33, "type": "markdown", "linesLength": 1, "startIndex": 195, "lines": ["In reality, the number of smokers declines as the tax per pack increases. We can account for this affect by finding the difference in smoking rates in Boston and Peoria and comparing this to the difference in tax rates between Boston and Peoria (assuming these two cities are indicative of the nation)."]}, {"block": 34, "type": "code", "linesLength": 18, "startIndex": 196, "lines": ["decline = (p_p - b_p) / (p_packtax - b_packtax)\n", "print(f'For every $1.00 increase in revenue, there is a {100 * decline:.2f}% decline in smokers.')\n", "rb_smokers = [b_adults * (b_p + (decline * (x - b_packtax))) for x in tax]\n", "rb_smokers = rb_smokers[:np.argmax(np.where(np.array(rb_smokers) > 0))]\n", "rtax =  tax[:len(rb_smokers)]\n", "\n", "print(f'There are 0 smokers at a tax of ${max(rtax):,.2f} per pack.')\n", "\n", "rrevenue = [rb_smokers[i] * n_packs * days * x for i, x in enumerate(rtax)]\n", "rcost = [rb_smokers[i] * cost_per_smoker for i in range(len(rrevenue))]\n", "\n", "\n", "plt.figure(figsize = (8, 6))\n", "plt.plot(rtax, rb_smokers, label = 'Number of Smokers')\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "plt.xlabel('Tax Per Pack'); plt.ylabel('Number of Smokers');\n", "plt.title('Number of Smokers vs Tax Per Pack');"]}, {"block": 35, "type": "markdown", "linesLength": 1, "startIndex": 214, "lines": ["This seems reasonable. What it means, is that at a certain point, there are no more smokers because of the tax per pack (probably not realistic)!"]}, {"block": 36, "type": "markdown", "linesLength": 3, "startIndex": 215, "lines": ["## Revenue vs Tax Rate with Declining Rate of Smoking\n", "\n", "Now we can make the same plot accounting for the declining rate in smokers to see if there is a break-even point in this situation. This is a very simple model but can still be useful."]}, {"block": 37, "type": "code", "linesLength": 13, "startIndex": 218, "lines": ["plt.figure(figsize = (12, 10))\n", "\n", "plt.plot(rtax, rrevenue, label = 'Revenue', color = 'black')\n", "plt.plot(rtax, rcost, label = 'Cost', color = 'red')\n", "plt.legend(prop = {'size': 18})\n", "ax = plt.gca()\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "ax.yaxis.set_ticklabels(tick_labels);\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "\n", "plt.ylabel(None); plt.xlabel('Tax Per Pack');\n", "plt.title('Revenue and Cost Versus Tax Per Pack with Declining Smoking Rate');"]}, {"block": 38, "type": "markdown", "linesLength": 13, "startIndex": 231, "lines": ["# Conclusions \n", "\n", "In the final plot, we see there is no break even point in terms of cost to society versus revenue from smoking. On the whole, we can conclude two things:\n", "\n", "* Smoking rates are significantly higher in my home town\n", "* Smoking is a negative to society \n", "\n", "Hopefully, this notebook has given you a small idea of what you can do by playing with the data yourself. Looking at facts is one thing, but trying to see how they are important in your life can make them stand out. \n", "\n", "![](images/national_smoking_time.png)\n", "(Source: https://news.gallup.com/poll/237908/smoking-rate-hits-new-low.aspx)\n", "\n", "National smoking rates over time have clearly declined! Just more evidence the world is improving. (Relevant Book: [Enlightenment Now](https://www.penguinrandomhouse.com/books/317051/enlightenment-now-by-steven-pinker/9780525427575/))"]}, {"block": 39, "type": "code", "linesLength": 0, "startIndex": 244, "lines": []}]