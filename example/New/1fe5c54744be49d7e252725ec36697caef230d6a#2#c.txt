[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 6, "startIndex": 5, "lines": ["# `dataclasses` \n", "\n", "\n", "***Nouveaut\u00e9 de la version 3.7***\n", "\n", "Python 3.7 apporte un nouveaut\u00e9 pour simplifier la d\u00e9finition de classes dites \"de donn\u00e9es\"\u00a0; ce type de classes s'applique pour des objets qui sont essentiellement un assemblage de quelques champs de donn\u00e9es."]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 11, "lines": ["Comme cette capacit\u00e9 n'est disponible qu'\u00e0 partir de Python 3.7 et que le cours est bas\u00e9 sur Python 3.6, nous n'aurons pas la possibilit\u00e9 de manipuler directement ce nouveau concept. Voici toutefois quelques exemples pour vous donner un aper\u00e7u de ce qu'on peut faire de cette notion."]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["### Aper\u00e7u"]}, {"block": 4, "type": "markdown", "linesLength": 3, "startIndex": 13, "lines": ["La raison d'\u00eatre de `dataclass` est de fournir - encore un - moyen de d\u00e9finir des classes d'enregistrements.\n", "\n", "Voici par exemple comment on pourrait d\u00e9finir une classe `Personne`:"]}, {"block": 5, "type": "markdown", "linesLength": 15, "startIndex": 16, "lines": ["```\n", ">>> from dataclasses import dataclass\n", ">>>\n", ">>> @dataclass\n", "... class Personne:\n", "...     nom: str\n", "...     age: int\n", "...     email: str = \"\"\n", "...\n", ">>> personne = Personne(nom='jean', age=12)\n", ">>>\n", ">>> print(personne)\n", "Personne(nom='jean', age=12, email='')\n", ">>>\n", "```"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["### Instances non mutables"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 32, "lines": ["Le d\u00e9corateur `dataclass` accepte divers arguments pour choisir le comportement de certains aspects de la classe. Reportez-vous \u00e0 la documentation pour une liste compl\u00e8te, mais voici un exemple qui utilise `frozen=True` et qui illustre la possibilit\u00e9 de cr\u00e9er des instances non mutables. Nous retrouvons ici le m\u00eame sc\u00e9nario d'ensemble de points que nous avons d\u00e9j\u00e0 rencontr\u00e9 plusieurs fois\u00a0:"]}, {"block": 8, "type": "markdown", "linesLength": 5, "startIndex": 33, "lines": ["```\n", ">>> import sys; print(sys.version)\n", "3.7.0 (default, Jun 29 2018, 20:14:27)\n", "[Clang 9.0.0 (clang-900.0.39.2)]\n", "```"]}, {"block": 9, "type": "markdown", "linesLength": 30, "startIndex": 38, "lines": ["```\n", ">>> from dataclasses import dataclass\n", ">>>\n", ">>> @dataclass(frozen=True)\n", "... class Point:\n", "...     x: float\n", "...     y: float\n", "...\n", "...     def __eq__(self, other):\n", "...         return self.x == other.x and self.y == other.y\n", "...\n", "...     def __hash__(self):\n", "...         return (11 * self.x + self.y) // 16\n", "...\n", ">>> p1, p2, p3 = Point(1, 1), Point(1, 1), Point(1, 1)\n", ">>>\n", ">>> s = {p1, p2}\n", ">>> len(s)\n", "1\n", ">>>\n", ">>> p3 in s\n", "True\n", ">>>\n", ">>> try:\n", "...     p1.x = 10\n", "... except Exception as e:\n", "...     print(f\"OOPS {type(e)}\")\n", "...\n", "OOPS <class 'dataclasses.FrozenInstanceError'>\n", "```"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 68, "lines": ["### Pour aller plus loin"]}, {"block": 11, "type": "markdown", "linesLength": 4, "startIndex": 69, "lines": ["Vous pouvez vous rapporter\n", "\n", "* [au PEP 557](https://www.python.org/dev/peps/pep-0557/) qui a abouti au consensus, et\n", "* [\u00e0 la documentation officielle du module](https://docs.python.org/3/library/dataclasses.html)."]}]