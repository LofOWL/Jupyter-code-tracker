[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# \u00e9cosyst\u00e8me python data science"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["### un rapide survol"]}, {"block": 3, "type": "markdown", "linesLength": 3, "startIndex": 7, "lines": ["* `numpy`\n", "* `pandas`\n", "* `matplotlib`"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["# `numpy`"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 11, "lines": ["import numpy"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["# tableaux"]}, {"block": 7, "type": "code", "linesLength": 6, "startIndex": 13, "lines": ["# une liste de listes\n", "mat1 = [\n", "  [11, 12, 13],\n", "  [21, 22, 23],\n", "]\n", "mat1"]}, {"block": 8, "type": "code", "linesLength": 6, "startIndex": 19, "lines": ["# un dictionnaire index\u00e9 par des tuples\n", "mat2 = { (i, j) : 10*i + j\n", "           for i in range(1, 3)\n", "           for j in range(1, 4)}\n", "\n", "mat2"]}, {"block": 9, "type": "code", "linesLength": 2, "startIndex": 25, "lines": ["# indices d\u00e9cal\u00e9s de 1\n", "mat1[1][2]"]}, {"block": 10, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["mat2[ 2, 3 ]"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["# langage compil\u00e9"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["### tableau homog\u00e8ne\u00a0: toutes les cellules sont de m\u00eame type"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["### dimensions connues"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["# acc\u00e8s direct"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 32, "lines": ["[animation](w7-directaccess/index.html)"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 33, "lines": ["# python"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 34, "lines": ["# *vs* `numpy`"]}, {"block": 18, "type": "markdown", "linesLength": 3, "startIndex": 35, "lines": ["##### container (`list` / `dict` / `set`)\n", "* h\u00e9t\u00e9rog\u00e8ne par construction\n", "* de taille variable"]}, {"block": 19, "type": "markdown", "linesLength": 3, "startIndex": 38, "lines": ["##### `ndarray`\n", "* homog\u00e8ne\n", "* de taille fixe"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 41, "lines": ["# benchmark 1 - liste"]}, {"block": 21, "type": "code", "linesLength": 6, "startIndex": 42, "lines": ["import random\n", "import math\n", "size = 10**4\n", "\n", "# l comme liste\n", "l = [random.random() for i in range(size)]"]}, {"block": 22, "type": "code", "linesLength": 6, "startIndex": 48, "lines": ["import numpy as np\n", "\n", "# n comme numpy\n", "n = np.array(l)\n", "\n", "type(n)"]}, {"block": 23, "type": "code", "linesLength": 2, "startIndex": 54, "lines": ["%%timeit -n 50\n", "[math.cos(x) for x in l]"]}, {"block": 24, "type": "code", "linesLength": 2, "startIndex": 56, "lines": ["%%timeit -n 50\n", "np.cos(n)"]}, {"block": 25, "type": "markdown", "linesLength": 1, "startIndex": 58, "lines": ["# benchmark 2 - dict / tuple"]}, {"block": 26, "type": "code", "linesLength": 6, "startIndex": 59, "lines": ["size = 100\n", "# d comme dict\n", "d = { (i, j) : random.random()\n", "     for j in range(size)\n", "     for i in range(size)}\n", "d[2, 4]"]}, {"block": 27, "type": "code", "linesLength": 6, "startIndex": 65, "lines": ["# temporaire pour cr\u00e9er le array\n", "l = [ [ d[i, j]\n", "        for j in range(size)]\n", "      for i in range(size)]\n", "n = np.array(l)\n", "n[2, 4]"]}, {"block": 28, "type": "code", "linesLength": 3, "startIndex": 71, "lines": ["%%timeit -n 50\n", "{ tuple : math.cos(value)\n", "  for tuple, value in d.items()}"]}, {"block": 29, "type": "code", "linesLength": 2, "startIndex": 74, "lines": ["%%timeit -n 50\n", "np.cos(n)"]}, {"block": 30, "type": "markdown", "linesLength": 1, "startIndex": 76, "lines": ["# benchmark 3"]}, {"block": 31, "type": "code", "linesLength": 3, "startIndex": 77, "lines": ["import random\n", "\n", "L = [random.randint(0,10) for i in range(1_000_000)]"]}, {"block": 32, "type": "code", "linesLength": 3, "startIndex": 80, "lines": ["import numpy as np\n", "\n", "a = np.array(L)"]}, {"block": 33, "type": "code", "linesLength": 3, "startIndex": 83, "lines": ["# en python de base\n", "\n", "%timeit[x**2 for x in L]"]}, {"block": 34, "type": "code", "linesLength": 1, "startIndex": 86, "lines": ["%timeit -n 100 np.square(a)"]}, {"block": 35, "type": "markdown", "linesLength": 1, "startIndex": 87, "lines": ["# tableau = vue"]}, {"block": 36, "type": "code", "linesLength": 2, "startIndex": 88, "lines": ["a = np.array( [ [0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]],\n", "               dtype=float)"]}, {"block": 37, "type": "code", "linesLength": 1, "startIndex": 90, "lines": ["a"]}, {"block": 38, "type": "code", "linesLength": 3, "startIndex": 91, "lines": ["# la forme du tableau, c'est\n", "# le point de vue de a sur son buffer\n", "a.shape"]}, {"block": 39, "type": "code", "linesLength": 2, "startIndex": 94, "lines": ["b = a.reshape( (6, 2))\n", "b"]}, {"block": 40, "type": "code", "linesLength": 1, "startIndex": 96, "lines": ["a[1, 2] = 600."]}, {"block": 41, "type": "code", "linesLength": 1, "startIndex": 97, "lines": [" b"]}, {"block": 42, "type": "markdown", "linesLength": 1, "startIndex": 98, "lines": ["# tableau = vue ..."]}, {"block": 43, "type": "markdown", "linesLength": 1, "startIndex": 99, "lines": ["[animation](w7-view/index.html)"]}, {"block": 44, "type": "markdown", "linesLength": 1, "startIndex": 100, "lines": ["# `pandas`"]}, {"block": 45, "type": "markdown", "linesLength": 1, "startIndex": 101, "lines": ["* objet central `DataFrame` (bas\u00e9 sur numpy)"]}, {"block": 46, "type": "markdown", "linesLength": 1, "startIndex": 102, "lines": ["* acc\u00e8s \u00e0 base d'indexes (lignes et/ou colonnes)"]}, {"block": 47, "type": "markdown", "linesLength": 1, "startIndex": 103, "lines": ["* op\u00e9rations \u00e0 la base de donn\u00e9es (join / group)"]}, {"block": 48, "type": "markdown", "linesLength": 1, "startIndex": 104, "lines": ["* notamment tr\u00e8s optimis\u00e9 pour les s\u00e9ries temporelles"]}, {"block": 49, "type": "markdown", "linesLength": 1, "startIndex": 105, "lines": ["# `matplotlib`"]}, {"block": 50, "type": "code", "linesLength": 7, "startIndex": 106, "lines": ["import numpy as np\n", "import matplotlib.pyplot as plt\n", "\n", "# points r\u00e9guli\u00e8rement espac\u00e9s entre 0 et 10\n", "X = np.linspace(0, 10)\n", "# f(x) = sin(x) + 1 sur tous ces points\n", "Y = np.sin(X) + 1"]}, {"block": 51, "type": "code", "linesLength": 4, "startIndex": 113, "lines": ["plt.plot(X, Y)\n", "plt.xlabel(\"temps\")\n", "plt.ylabel('quasi-sinus')\n", "plt.show()"]}, {"block": 52, "type": "code", "linesLength": 9, "startIndex": 117, "lines": ["from mpl_toolkits.mplot3d import Axes3D\n", "\n", "scope = 3\n", "xs = np.linspace(-scope, scope)\n", "ys = np.linspace(-scope, scope)\n", "# points espac\u00e9s dans le carr\u00e9\n", "X, Y = np.meshgrid(xs, ys)\n", "# pseudo gaussienne\n", "Z = np.exp(-(X**2 + Y**2))"]}, {"block": 53, "type": "code", "linesLength": 4, "startIndex": 126, "lines": ["fig = plt.figure()\n", "ax = fig.gca(projection='3d')\n", "ax.plot_surface(X, Y, Z)\n", "plt.show()"]}, {"block": 54, "type": "markdown", "linesLength": 1, "startIndex": 130, "lines": ["# conclusion"]}, {"block": 55, "type": "markdown", "linesLength": 5, "startIndex": 131, "lines": ["### `numpy`\n", "\n", "* `np.ndarray`\n", "* meilleures performances\n", "* mutable / r\u00e9f\u00e9rences partag\u00e9es"]}, {"block": 56, "type": "markdown", "linesLength": 4, "startIndex": 136, "lines": ["### `pandas`\n", "\n", "* `DataFrame`\n", "* tableaux structur\u00e9s, index\u00e9s"]}, {"block": 57, "type": "markdown", "linesLength": 1, "startIndex": 140, "lines": ["### `matplotlib`"]}]