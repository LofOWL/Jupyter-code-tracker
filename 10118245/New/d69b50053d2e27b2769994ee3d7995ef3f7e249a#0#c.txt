[{"block": 0, "type": "markdown", "linesLength": 8, "startIndex": 0, "lines": ["Je simule un exercice d\u00e9bile, on demande aux \u00e9tudiants d'\u00e9crire une classe `Fifo`\n", "    \n", "qui impl\u00e9mente \n", "* un constructeur `Fifo()`\n", "* une m\u00e9thode `incoming(obj)`\n", "* une m\u00e9thode `outgoing()`\n", "\n", "qui rende simplement les objets dans le m\u00eame ordre o\u00f9 ils ont \u00e9t\u00e9 rang\u00e9s"]}, {"block": 1, "type": "markdown", "linesLength": 3, "startIndex": 8, "lines": ["L'\u00e9tudiant est invit\u00e9 \u00e0 \u00e9crire son code dans la class `Fifo`;\n", "\n", "On lui propose en arrivant une cellule vide comme ceci"]}, {"block": 2, "type": "code", "linesLength": 7, "startIndex": 11, "lines": ["class Fifo(object):\n", "    def __init__(self):\n", "        pass\n", "    def incoming(self, obj):\n", "        pass\n", "    def outgoing(self):\n", "        pass"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["Il la modifie, imaginons que \u00e7a donne cela"]}, {"block": 4, "type": "code", "linesLength": 13, "startIndex": 19, "lines": ["# cette classe est cass\u00e9e expr\u00e8s ...\n", "class Fifo(object):\n", "    def __init__(self):\n", "        self.items = []\n", "    def __repr__(self):\n", "        return \"<StudentFifo [{}]>\".format(\" \".join([\"{}\".format(i) for i in self.items]))\n", "\n", "    def incoming(self, obj):\n", "        self.items.append(obj)\n", "    def outgoing(self):\n", "        if len(self.items)%2 == 0:\n", "            raise Exception(\"even length ->{}\".format(self.items.pop()))\n", "        return self.items.pop()"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 32, "lines": ["Et voici la cellule pour corriger "]}, {"block": 6, "type": "code", "linesLength": 2, "startIndex": 33, "lines": ["from corrections.ww_class import exo_fifo\n", "exo_fifo.correction(Fifo)"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 35, "lines": ["exo_fifo.exemple()"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 36, "lines": ["*********"]}]