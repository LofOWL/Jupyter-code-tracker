[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout,<img src=\"media/inria-25.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Notions sur la pr\u00e9cision des calculs flottants"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["## Compl\u00e9ment - niveau avanc\u00e9"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["### Le probl\u00e8me"]}, {"block": 4, "type": "markdown", "linesLength": 6, "startIndex": 4, "lines": ["Comme pour les entiers, les calculs sur les flottants sont, ", "naturellement, r\u00e9alis\u00e9s par le processeur.", "Cependant contrairement au cas des entiers o\u00f9 ", "les calculs sont toujours exacts, les flottants posent un ", "probl\u00e8me de pr\u00e9cision. Cela n'est pas propre au langage python, mais ", "est d\u00fb \u00e0 la technique de codage des nombres flottants sous forme binaire. "]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["Voyons tout d'abord comment se mat\u00e9rialise le probl\u00e8me:"]}, {"block": 6, "type": "markdown", "linesLength": 4, "startIndex": 11, "lines": ["Il faut retenir que lorsqu'on \u00e9crit un nombre flottant sous forme d\u00e9cimale,", "la valeur utilis\u00e9e en m\u00e9moire pour repr\u00e9senter ce nombre, parce que ", "cette valeur est cod\u00e9e en binaire, ne repr\u00e9sente ", "**pas toujours exactement** le nombre entr\u00e9."]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["Aussi comme on le voit les diff\u00e9rentes erreurs d'arrondi qui se produisent \u00e0 chaque \u00e9tape du calcul s'accumulent et produisent un r\u00e9sultat parfois surprenant."]}, {"block": 8, "type": "markdown", "linesLength": 2, "startIndex": 16, "lines": ["Dans une grande majorit\u00e9 des cas, ces erreurs d'arrondi ne sont pas p\u00e9nalisantes. ", "Il faut toutefois en \u00eatre conscient car cela peut expliquer des comportements curieux. "]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["### Une solution : penser en termes de nombres rationnels"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["Tout d'abord si votre probl\u00e8me se pose bien en termes de nombres rationnels, il est alors tout \u00e0 fait possible de le r\u00e9soudre avec exactitude."]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Alors qu'il n'est pas possible d'\u00e9crire exactement $3/10$ en base 2, ni d'ailleurs $1/3$ en base 10, on peut repr\u00e9senter **exactement** ces nombres d\u00e8s lors qu'on les consid\u00e8re comme des fractions et qu'on les encode avec deux nombres entiers."]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["Python fournit en standard le module `fractions` qui permet de r\u00e9soudre le probl\u00e8me. Voici comment on pourrait l'utiliser pour v\u00e9rifier, cette fois avec succ\u00e8s, que $0.3 - 0.1$ vaut bien $0.2$"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["En anticipant un tout petit peu sur l'utilisation des modules et des classes en Python, voici comment on pourrait cr\u00e9er des objets de type `Fraction` pour faire de mani\u00e8re *exacte* le calcul ci-dessus:"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["Ou encore aussi"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 24, "lines": ["### Une autre solution : le module decimal"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 25, "lines": ["Si par contre vous ne manipulez pas des nombres rationnels et que la repr\u00e9sentation sous forme de fractions ne peut pas convenir dans votre cas, signalons l'existence du module standard `decimal` qui offre des fonctionnalit\u00e9s tr\u00e8s voisines du type `float`, tout en \u00e9liminant la plupart des inconv\u00e9nients, au prix naturellement d'une consommation m\u00e9moire sup\u00e9rieure."]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["Pour reprendre l'exemple de d\u00e9part, mais en utilisant le module decimal, on \u00e9crirait alors"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["### Pour aller plus loin"]}, {"block": 19, "type": "markdown", "linesLength": 7, "startIndex": 28, "lines": ["Tous ces documents sont en anglais", "", " * Un [tutoriel sur les nombres flottants](https://docs.python.org/2/tutorial/floatingpoint.html)", "", " * La [documentation sur la classe Fraction](https://docs.python.org/2/library/fractions.html)", " ", " * La [documentation sur la classe Decimal](https://docs.python.org/2/library/decimal.html)"]}]