[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Noms de variables"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Revenons sur les noms de variables autoris\u00e9s ou non."]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["Les noms les plus simples sont constitu\u00e9s de lettres. Par exemple"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 9, "lines": ["factoriel = 1"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["On peut utiliser aussi les majuscules, mais attention cela d\u00e9finit une variable diff\u00e9rente. Ainsi"]}, {"block": 7, "type": "code", "linesLength": 2, "startIndex": 11, "lines": ["Factoriel = 100\n", "factoriel == Factoriel"]}, {"block": 8, "type": "markdown", "linesLength": 2, "startIndex": 13, "lines": ["Le signe `==` permet de tester si deux variables ont la m\u00eame valeur.\n", "Si les variables ont la m\u00eame valeur, le test retournera `True`, et `False` sinon. On y reviendra bien entendu."]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["### Conventions habituelles"]}, {"block": 10, "type": "markdown", "linesLength": 3, "startIndex": 16, "lines": ["En r\u00e8gle g\u00e9n\u00e9rale, on utilise **uniquement des minuscules** pour d\u00e9signer les variables simples (ainsi d'ailleurs que pour les noms de fonctions), les majuscules sont r\u00e9serv\u00e9es en principe pour d'autres sortes de variables, comme les noms de classe, que nous verrons ult\u00e9rieurement.\n", "\n", "Notons, qu'il s'agit uniquement d'une convention, ceci n'est pas impos\u00e9 par le langage lui-m\u00eame."]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["Pour des raisons de lisibilit\u00e9, il est \u00e9galement possible d'utiliser le tiret bas `_` dans les noms de variables. On pr\u00e9f\u00e8rera ainsi"]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 20, "lines": ["age_moyen = 75 # oui"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["plut\u00f4t que ceci (bien qu'autoris\u00e9 par le langage)"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 22, "lines": ["AgeMoyen = 75 # autoris\u00e9, mais non"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["On peut \u00e9galement utiliser des chiffres dans les noms de variables comme par exemple"]}, {"block": 16, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["age_moyen_dept75 = 80"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 25, "lines": ["avec la restriction toutefois que le premier caract\u00e8re ne peut pas \u00eatre un chiffre, cette affectation est donc refus\u00e9e"]}, {"block": 18, "type": "code", "linesLength": 1, "startIndex": 26, "lines": ["75_age_moyen = 80 # erreur de syntaxe"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["### Le tiret bas comme premier caract\u00e8re"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["Il est par contre, possible de faire commencer un nom de variable par un tiret bas comme premier caract\u00e8re&nbsp;; toutefois, \u00e0 ce stade, nous vous d\u00e9conseillons d'utiliser cette pratique qui est r\u00e9serv\u00e9e \u00e0 des conventions de nommage bien sp\u00e9cifiques."]}, {"block": 21, "type": "code", "linesLength": 1, "startIndex": 29, "lines": ["_autorise_mais_deconseille = 'Voir le PEP 008'"]}, {"block": 22, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["Et en tous cas, il est **fortement d\u00e9conseill\u00e9** d'utiliser des noms de la forme `__variable__` qui sont r\u00e9serv\u00e9s au langage. Nous reviendrons sur ce point dans le futur, mais reagardez par exemple cette variable que nous n'avons d\u00e9finie nulle part mais qui pourtant existe bel et bien"]}, {"block": 23, "type": "code", "linesLength": 1, "startIndex": 31, "lines": ["__name__  # ne d\u00e9finissez pas vous-m\u00eame de variables de ce genre"]}, {"block": 24, "type": "markdown", "linesLength": 1, "startIndex": 32, "lines": ["### Ponctuation"]}, {"block": 25, "type": "markdown", "linesLength": 1, "startIndex": 33, "lines": ["Dans la plage des caract\u00e8res ASCII, il n'est **pas possible** d'utiliser d'autres caract\u00e8res que les caract\u00e8res alphanum\u00e9riques et le tiret bas. Notamment le tiret haut `-` est interpr\u00e9t\u00e9 comme l'op\u00e9ration de soustraction. Attention donc \u00e0 cette erreur fr\u00e9quente"]}, {"block": 26, "type": "code", "linesLength": 1, "startIndex": 34, "lines": ["age-moyen = 75  # erreur : en fait python lit 'age - moyen = 75'"]}, {"block": 27, "type": "markdown", "linesLength": 1, "startIndex": 35, "lines": ["### Caract\u00e8res exotiques"]}, {"block": 28, "type": "markdown", "linesLength": 1, "startIndex": 36, "lines": ["En python-3, il est maintenant aussi possible d'utiliser des caract\u00e8res Unicode dans les identificateurs"]}, {"block": 29, "type": "code", "linesLength": 2, "startIndex": 37, "lines": ["# les caract\u00e8res accentu\u00e9s sont permis\n", "nom_\u00e9l\u00e8ve = \"Jules Maigret\""]}, {"block": 30, "type": "code", "linesLength": 4, "startIndex": 39, "lines": ["# ainsi que l'alphabet grec\n", "from math import cos, pi as \ud835\udf9f\n", "\u03b8 = \ud835\udf9f / 4\n", "cos(\u03b8)"]}, {"block": 31, "type": "markdown", "linesLength": 1, "startIndex": 43, "lines": ["Tous les caract\u00e8res Unicode ne sont pas permis - heureusement car cela serait source de confusion. Nous citons dans les r\u00e9f\u00e9rences les documents qui pr\u00e9cisent quels sont exactement les caract\u00e8res autoris\u00e9s."]}, {"block": 32, "type": "code", "linesLength": 3, "startIndex": 44, "lines": ["# ce caract\u00e8re n'est pas autoris\u00e9\n", "# il est consid\u00e9r\u00e9 comme un signe math\u00e9matique (produit)\n", "\u220f = 10"]}, {"block": 33, "type": "markdown", "linesLength": 7, "startIndex": 47, "lines": ["#### Conseil\n", "\n", "Il est **tr\u00e8s vivement** recommand\u00e9&nbsp;:\n", "\n", "* tout d'abord de coder **en anglais**,\n", "* ensuite de **ne pas** d\u00e9finir des identificateurs avec des caract\u00e8res non ASCII, dans toute la mesure du possible,\n", "* enfin si vous utilisez un encodage autre que utf-8, vous **devez** bien **sp\u00e9cifier l'encodage** utilis\u00e9 dans votre fichier source&nbsp;; nous y reviendrons en deuxi\u00e8me semaine."]}, {"block": 34, "type": "markdown", "linesLength": 1, "startIndex": 54, "lines": ["### Pour en savoir plus"]}, {"block": 35, "type": "markdown", "linesLength": 3, "startIndex": 55, "lines": ["Pour les esprits curieux, Guido van Rossum, le fondateur de python, est le co-auteur d'un document qui d\u00e9crit les conventions de codage \u00e0 utiliser dans les librairies python standard. Ces r\u00e8gles sont plus restrictives que ce que le langage permet de faire, mais constituent une lecture int\u00e9ressante si vous projetez d'\u00e9crire beaucoup de python.\n", "\n", "Voir dans le PEP 008 [la section consacr\u00e9e aux r\u00e8gles de nommage - (en anglais)](http://legacy.python.org/dev/peps/pep-0008/#descriptive-naming-styles)\n"]}, {"block": 36, "type": "markdown", "linesLength": 4, "startIndex": 58, "lines": ["Voir enfin, au sujet des caract\u00e8res exotiques dans les identificateurs\u00a0:\n", "\n", "* https://www.python.org/dev/peps/pep-3131/ qui d\u00e9finit les caract\u00e8res exotiques autoris\u00e9s, et qui repose \u00e0 son tour sur\n", "* http://www.unicode.org/reports/tr31/ (tr\u00e8s technique\u00a0!)"]}]