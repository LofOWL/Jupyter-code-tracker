[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["Exercice sur l'utilisation des classes"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Introduction"]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["Objectifs de l'exercice"]}, {"block": 3, "type": "markdown", "linesLength": 3, "startIndex": 3, "lines": ["Maintenant que vous avez un bagage qui couvre toutes les bases du langage, cette semaine nous ne ferons qu'un seul exercice de taille un peu plus r\u00e9aliste. Vous devez \u00e9crire quelques classes, que vous int\u00e9grez ensuite dans un code \u00e9crit pas nos soins. \n", "\n", "L'exercice comporte donc autant une part lecture qu'une part \u00e9criture. Vous \u00eates \u00e9galement incit\u00e9s \u00e0 am\u00e9liorer autant que possible votre environnement de travail sur votre ordinateur."]}, {"block": 4, "type": "heading", "linesLength": 1, "startIndex": 6, "lines": ["Objectifs de l'application"]}, {"block": 5, "type": "markdown", "linesLength": 5, "startIndex": 7, "lines": ["Dans le prolongement des exercices de la semaine 3 sur les donn\u00e9es maritimes, l'application dont il est question ici fait principalement ceci&nbsp;:\n", " * agr\u00e9ger des donn\u00e9es obtenues aupr\u00e8s de marinetraffic,\n", " * et produire en sortie\n", "   * un fichier texte qui liste par ordre alphab\u00e9tique les bateaux concern\u00e9s, et le nombre de positions trouv\u00e9es pour chacun,\n", "   * et un fichier KML, pour exposer les trajectoires trouv\u00e9es \u00e0 google earth, maps ou autre outil similaire."]}, {"block": 6, "type": "markdown", "linesLength": 3, "startIndex": 12, "lines": ["Voici \u00e0 quoi ressemble le fichier KML obtenu avec les donn\u00e9es que nous fournissons, une fois ouvert sous google earth&nbsp;:\n", "\n", "<img src=\"media/ships-in-earth.png\">"]}, {"block": 7, "type": "heading", "linesLength": 1, "startIndex": 15, "lines": ["Choix d'impl\u00e9mentation"]}, {"block": 8, "type": "markdown", "linesLength": 3, "startIndex": 16, "lines": ["En particulier, dans cet exercice nous allons voir comment on peut g\u00e9rer des donn\u00e9es sous forme d'instances de classes plut\u00f4t que de types de base. Ce qui r\u00e9sonne avec la discussion commenc\u00e9e en Semaine 3, S\u00e9quence \"Les dictionnaires\", dans le compl\u00e9ment \"record-et-dictionnaire\". \n", "\n", "Dans les exercices de cette semaine-l\u00e0 nous avions uniquement utilis\u00e9 des types 'standard' comme listes, tuples et dictionnaires pour mod\u00e9liser les donn\u00e9es, dans cette application nous allons faire le choix inverse et utiliser plus souvent des (instances de) classes."]}, {"block": 9, "type": "heading", "linesLength": 1, "startIndex": 19, "lines": ["Correction"]}, {"block": 10, "type": "markdown", "linesLength": 3, "startIndex": 20, "lines": ["L'application vient avec son propre syst\u00e8me de v\u00e9rification; c'est-\u00e0-dire qu'une fois les fichiers produits, ils sont compar\u00e9s avec le r\u00e9sultat de l'impl\u00e9mentation de r\u00e9f\u00e9rence. \n", "\n", "Du coup le fait de disposer de google earth sur votre ordinateur n'est pas strictement n\u00e9cessaire, on ne s'en sert pas pour l'exercice. "]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["***"]}, {"block": 12, "type": "heading", "linesLength": 1, "startIndex": 24, "lines": ["Mise en place"]}, {"block": 13, "type": "heading", "linesLength": 1, "startIndex": 25, "lines": ["Partez d'un directory vierge"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["Pour commencer cr\u00e9ez-vous un r\u00e9pertoire pour travailler \u00e0 cet exercice"]}, {"block": 15, "type": "heading", "linesLength": 1, "startIndex": 27, "lines": ["Les donn\u00e9es"]}, {"block": 16, "type": "markdown", "linesLength": 10, "startIndex": 28, "lines": ["Commencez par y installer les donne\u00e9s que nous publions dans les formats suivants&nbsp;:\n", " * [format tar](data/ships-json.tar)\n", " * [format tgz](data/ships-json.tgz)\n", " * [format zip](data/ships-json.zip)\n", "\n", "Une fois install\u00e9es, ces donn\u00e9es doivent se trouver dans un sous-r\u00e9pertoire [json/] qui contient 133 fichiers \n", "\n", "    2013-10-01-00-00--t=10--ext.json\n", "    ...\n", "    2013-10-01-23-50--t=10.json    "]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 38, "lines": ["Comme vous pouvez le deviner il s'agit de donn\u00e9es sur le mouvement des bateaux dans la zone en date du 10 Octobre 2013; et comme vous le voyez \u00e9galement on a quelques exemplaires de donn\u00e9es \u00e9tendues, mais dans la plupart des cas il s'agit de donn\u00e9es abr\u00e9g\u00e9es."]}, {"block": 18, "type": "heading", "linesLength": 1, "startIndex": 39, "lines": ["Les r\u00e9sultats de r\u00e9f\u00e9rence"]}, {"block": 19, "type": "markdown", "linesLength": 8, "startIndex": 40, "lines": ["De m\u00eame il vous faut installer les r\u00e9sultats de r\u00e9f\u00e9rence que vous trouvez ici&nbsp;:\n", " * [format tar](data/ships-ref.tar)\n", " * [format zip](data/ships-ref.zip)\n", "\n", "ce qui vous doit vous donner deux fichiers \n", "\n", "    ALL_SHIPS.kml.ref\n", "    ALL_SHIPS.txt.ref    \n"]}, {"block": 20, "type": "heading", "linesLength": 1, "startIndex": 48, "lines": ["xxx niveaux de difficult\u00e9 \u00e0 d\u00e9finir if time permits"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 49, "lines": ["Prendre le `main` et choisir quels fichiers on veut \u00e9crire"]}, {"block": 22, "type": "heading", "linesLength": 1, "startIndex": 50, "lines": ["Comment lancer l'application"]}, {"block": 23, "type": "markdown", "linesLength": 12, "startIndex": 51, "lines": ["Lorsque le programme est complet, on le lance comme ceci&nbsp;:\n", "\n", "    $ python merger.py json/*\n", "    Opening ALL_SHIPS.txt for listing all named ships\n", "    Opening ALL_SHIPS.kml for ship ALL_SHIPS\n", "    Comparing ALL_SHIPS.txt and ALL_SHIPS.txt.ref -> OK\n", "    Comparing ALL_SHIPS.kml and ALL_SHIPS.kml.ref -> OK\n", "    \n", "qui comme on le voit produit\n", "\n", " * `ALL_SHIPS.txt` qui r\u00e9sume, par ordre alphab\u00e9tique les bateaux qu'on a trouv\u00e9s et le nombre de positions pour chacun, et \n", " * `ALL_SHIPS.kml` qui est le fichier au format `KML` qui contient toutes les trajectoires."]}, {"block": 24, "type": "heading", "linesLength": 1, "startIndex": 63, "lines": ["Comment est structur\u00e9e l'application"]}, {"block": 25, "type": "markdown", "linesLength": 1, "startIndex": 64, "lines": ["Le point d'entr\u00e9e s'appelle, donc, merger.py"]}]