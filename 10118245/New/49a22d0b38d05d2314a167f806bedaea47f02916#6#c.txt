[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout&nbsp;<img src=\"media/inria-25-alpha.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# \u00c9cueils classiques"]}, {"block": 2, "type": "code", "linesLength": 1, "startIndex": 2, "lines": ["import asyncio"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["# fonction coroutine *vs* objet coroutine"]}, {"block": 4, "type": "code", "linesLength": 4, "startIndex": 4, "lines": ["# une fonction coroutine\n", "async def foo(delay):\n", "    await asyncio.sleep(1)\n", "    print(\"foo\")"]}, {"block": 5, "type": "code", "linesLength": 4, "startIndex": 8, "lines": ["# renvoie un objet coroutine\n", "# et donc si on l'appelle normalement\n", "# il ne se passe rien\n", "foo(4)"]}, {"block": 6, "type": "code", "linesLength": 5, "startIndex": 12, "lines": ["# c'est d'ailleurs exactement comme \n", "# une fonction g\u00e9n\u00e9ratrice\n", "def squares(n):\n", "    for i in range(n):\n", "        yield i**2"]}, {"block": 7, "type": "code", "linesLength": 4, "startIndex": 17, "lines": ["# qui quand on l'appelle retourne\n", "# un it\u00e9rateur, et l\u00e0 encore\n", "# il ne se passe rien\n", "squares(4)"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["# tous les sc\u00e9narios"]}, {"block": 9, "type": "code", "linesLength": 2, "startIndex": 22, "lines": ["def synchrone():\n", "    pass"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 24, "lines": ["async def asynchrone():\n", "    pass"]}, {"block": 11, "type": "code", "linesLength": 5, "startIndex": 26, "lines": ["def foo(): \n", "    synchrone()        # 1 # OK\n", "    asynchrone()       # 2 # ATTENTION !\n", "    await synchrone()  # 3 # SyntaxError\n", "    await asynchrone   # 4 # SyntaxError"]}, {"block": 12, "type": "code", "linesLength": 5, "startIndex": 31, "lines": ["async def afoo():\n", "    synchrone()        # 5 # OK\n", "    await asynchrone() # 6 # OK\n", "    asynchrone()       # 7 # ATTENTION !\n", "    await synchrone()  # 8 # doit \u00eatre awaitable"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 36, "lines": ["# objets awaitables"]}, {"block": 14, "type": "markdown", "linesLength": 5, "startIndex": 37, "lines": ["| Instruction | classe d'objets  | protocole | exemple | \n", "|-------------|------------------|-----------|---------|\n", "|   `for`     |   it\u00e9rables      |  `__iter__` | liste, ensemble |\n", "|   `with`    | context managers | `__enter__` & `__exit__` | fichier |\n", "|   `await`   |   awaitables     | `__await__` | objet coroutine |\n"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 42, "lines": ["# cas n\u00b02"]}, {"block": 16, "type": "markdown", "linesLength": 2, "startIndex": 43, "lines": ["* une fonction appelle une coroutine sans `await`\n", "* produit un avertissement "]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 45, "lines": ["!cat debug2.py"]}, {"block": 18, "type": "code", "linesLength": 1, "startIndex": 46, "lines": ["!python3 debug2.py"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 47, "lines": ["# cas n\u00b07"]}, {"block": 20, "type": "markdown", "linesLength": 2, "startIndex": 48, "lines": ["* une coroutine appelle une autre coroutine sans `await`\n", "* idem : avertissement"]}, {"block": 21, "type": "code", "linesLength": 2, "startIndex": 50, "lines": ["# avec until_complete\n", "!cat debug7.py"]}, {"block": 22, "type": "code", "linesLength": 1, "startIndex": 52, "lines": ["!python3 debug7.py"]}, {"block": 23, "type": "code", "linesLength": 1, "startIndex": 53, "lines": ["!PYTHONASYNCIODEBUG=1 python3 debug7.py"]}, {"block": 24, "type": "markdown", "linesLength": 2, "startIndex": 54, "lines": ["Voir davantage de recettes de debug ici:\n", "https://docs.python.org/3/library/asyncio-dev.html#develop-with-asyncio"]}]