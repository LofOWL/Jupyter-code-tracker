[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["L'instruction `if`"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Exercice - niveau basique"]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["R\u00e9partiteur (1)"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["On vous demande d'\u00e9crire une fonction `dispatch1` qui prend en argument deux entiers `a` et `b` et qui renvoie selon les cas"]}, {"block": 4, "type": "markdown", "linesLength": 8, "startIndex": 4, "lines": ["$\\begin{array}{c|c|c}\n", "\\ & a\\  pair & a\\ impair \\\\\n", "\\hline\n", "b\\ pair & a^2+b^2 & (a-1)*b\\\\\n", "\\hline\n", "b\\ impair & a*(b-1)& a^2-b^2\\\\\n", "\\end{array}\n", "$"]}, {"block": 5, "type": "heading", "linesLength": 1, "startIndex": 12, "lines": ["R\u00e9partiteur (2)"]}, {"block": 6, "type": "markdown", "linesLength": 14, "startIndex": 13, "lines": ["Dans une seconde version de cet exercice, on vous demande d'\u00e9crire une fonction `dispatch2` qui prend en arguments\n", " * `a` et `b` deux entiers\n", " * `A` et `B` deux ensembles (chacun pouvant \u00eatre mat\u00e9rialis\u00e9 par un ensemble, une liste ou un tuple)\n", "\n", "et qui renvoie selons les cas\n", "\n", "$\\begin{array}{c|c|c}\n", "\\ & a \\in A & a\\notin A \\\\\n", "\\hline\n", "b\\in B & a^2+b^2 & (a-1)*b\\\\\n", "\\hline\n", "b\\notin B & a*(b-1)& a^2+b^2\\\\\n", "\\end{array}\n", "$"]}]