[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["`print` entre python2 et python3"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9ment - niveau interm\u00e9diaire"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["Si vous vous int\u00e9ressez \u00e0 python3, sachez que la diff\u00e9rence la plus visible entre python2 et python3 est certainement avec `print`:"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["En python2 c'est une **instruction**"]}, {"block": 4, "type": "raw", "linesLength": 11, "startIndex": 4, "lines": [">>> import sys\n", ">>> sys.version\n", "'2.7.7 (default, Jun  2 2014, 01:41:14) \\n[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]'\n", ">>>\n", ">>> print \"Hello\",\"World\"\n", "Hello World\n", ">>> None is print \"Hello\",\"World\"\n", "  File \"<stdin>\", line 1\n", "    None is print \"Hello\",\"World\"\n", "                ^\n", "SyntaxError: invalid syntax"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["alors qu'en python3 c'est une **fonction** (et donc une **expression**)"]}, {"block": 6, "type": "raw", "linesLength": 9, "startIndex": 16, "lines": [">>> import sys\n", ">>> sys.version\n", "'3.4.1 (default, May 21 2014, 01:39:38) \\n[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]'\n", ">>>\n", ">>> print (\"Hello\",\"World\")\n", "Hello World\n", ">>> None is print (\"Hello\",\"World\")\n", "Hello World\n", "True"]}, {"block": 7, "type": "heading", "linesLength": 1, "startIndex": 25, "lines": ["Compatibilit\u00e9 avec `__future__`"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["Il existe en python2 une couche de compatibilit\u00e9, le module `__future__`, dont le but est de gommer les diff\u00e9rences entre les deux versions. Ainsi si vous le souhaitez vous pouvez \u00e9crire du code python2 qui \"voit\" `print` comme une fonction en important ceci"]}, {"block": 9, "type": "raw", "linesLength": 1, "startIndex": 27, "lines": ["from __future__ import print_function"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["Apr\u00e8s quoi vous pouvez utilisez `print` comme si vous \u00e9criviez du python3"]}, {"block": 11, "type": "raw", "linesLength": 8, "startIndex": 29, "lines": [">>> import sys\n", ">>> sys.version\n", "'2.7.7 (default, Jun  2 2014, 01:41:14) \\n[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]'\n", ">>>\n", ">>> from __future__ import print_function\n", ">>>\n", ">>> print (\"Hello\",\"World\")\n", "Hello World"]}, {"block": 12, "type": "heading", "linesLength": 1, "startIndex": 37, "lines": ["Avertissement"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 38, "lines": ["Si vous utilisez python2 et que **vous ne mentionnez pas cet import**, vous pouvez avoir l'**impression** qu'il est inutile:"]}, {"block": 14, "type": "raw", "linesLength": 6, "startIndex": 39, "lines": [">>> import sys\n", ">>> sys.version\n", "'2.7.7 (default, Jun  2 2014, 01:41:14) \\n[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]'\n", ">>>\n", ">>> print (\"Hello\")\n", "Hello"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 45, "lines": ["En fait ce qui se passe ici, c'est que les parenth\u00e8ses sont consid\u00e9r\u00e9es dans leur r\u00f4le habituel de groupement dans les expressions; cela rejoint la discussion sur les tuples; en fait les parenth\u00e8ses ne jouent aucun r\u00f4le ici, exactement comme dans"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 46, "lines": ["Si bien qu'avec plusieurs arguments - plus exactement avec l'illusion d'appeler `print` avec plusieurs arguments:"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 47, "lines": ["les parenth\u00e8ses pr\u00e9sentes dans la sortie vous indiquent qu'en fait on a contruit un tuple, et qu'on l'a pass\u00e9 \u00e0 l'**instruction** `print`; on ne peut pas utiliser `print` dans une expression"]}, {"block": 18, "type": "markdown", "linesLength": 1, "startIndex": 48, "lines": ["Une fois l'import charg\u00e9, tout fonctionne vraiment comme en python3"]}]