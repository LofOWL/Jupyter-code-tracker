[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# S\u00e9quence `numpy`"]}, {"block": 2, "type": "markdown", "linesLength": 8, "startIndex": 6, "lines": ["Comme on l'a vu dans la vid\u00e9o, `numpy` est une librairie qui offre un type suppl\u00e9mentaires par rapport aux types de base python: le **tableau**, qui s'appelle en anglais `array` (en fait techniquement, `ndarray`, pour *n-dimension array*).\n", "\n", "Bien que techniquement ce type ne fait pas partie des types de base de python, il est extr\u00eamement puissant, et surtout beaucoup plus efficace que les types de base, d\u00e8s lors qu'on manipule des donn\u00e9es qui ont la bonne forme, ce qui est le cas dans un grand nombre de domaines. \n", "\n", "Aussi, si vous utilisez une biblioth\u00e8que de calcul scientifique, la quasi totalit\u00e9 des objets que vous serez amen\u00e9s \u00e0 manipuler seront des tableaux `numpy`.\n", "\n", "Dans cette s\u00e9rie de notebooks, nous allons voir comment manipuler en pratique ces tableaux; \n", "on s'attache surtout \u00e0 d\u00e9crire les m\u00e9canismes au niveau du langage, comme le slicing, le broadcasting, les diff\u00e9rents modes d'indxation, ainsi que les aspects li\u00e9s aux r\u00e9f\u00e9rences partag\u00e9es, qui vous permettront de bien assimiler les bases et d'utiliser \u00e0 bon escient les multiples biblioth\u00e8ques constuites au-dessus de `numpy`."]}]