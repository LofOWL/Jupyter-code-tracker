[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# matplotlib 3D"]}, {"block": 2, "type": "code", "linesLength": 3, "startIndex": 6, "lines": ["# la ration habituelle d'imports\n", "import matplotlib.pyplot as plt\n", "import numpy as np"]}, {"block": 3, "type": "code", "linesLength": 5, "startIndex": 9, "lines": ["# m\u00eame si l'on n'utilise pas explicitement \n", "# d'attributs du module Axes3D\n", "# cet import est necessaire pour faire\n", "# des visualisations en 3D\n", "from mpl_toolkits.mplot3d import Axes3D"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 14, "lines": ["#plt.ion()"]}, {"block": 5, "type": "code", "linesLength": 31, "startIndex": 15, "lines": ["# ce mode d'interaction va nous permettre de nous d\u00e9placer \n", "# dans l'espace pour voir la courbe depuis plusieurs points de vue\n", "%matplotlib notebook\n", "# je choisis une taille raisonnable compte tenu de l'espace \n", "# disponible dans fun-mooc\n", "fig = plt.figure(figsize=(8, 4))\n", "\n", "# voici la fa\u00e7on de cr\u00e9er un *subplot*\n", "# qui se pr\u00eate \u00e0 une visualisation en 3D\n", "ax = fig.add_subplot(121, projection='3d')\n", "\n", "# \u00e0 pr\u00e9sent, copi\u00e9 de\n", "# https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#line-plots\n", "# on cr\u00e9e une courbe param\u00e9trique \n", "# o\u00f9 x et y sont fonctions de z\n", "theta = np.linspace(-4 * np.pi, 4 * np.pi, 100)\n", "z = np.linspace(-2, 2, 100)\n", "r = z**2 + 1\n", "x = r * np.sin(theta)\n", "y = r * np.cos(theta)\n", "# on fait maitenant un appel \u00e0 plot normal\n", "# mais avec un troisi\u00e8me param\u00e8tre\n", "ax.plot(x, y, z, label='parametric curve')\n", "ax.legend()\n", "\n", "# on peut tout \u00e0 fait ajouter un plot usuel\n", "# dans un subplot, comme on l'a vu pour la 2D\n", "ax2 = fig.add_subplot(122)\n", "x = np.linspace(0, 10)\n", "y = x**2\n", "ax2.plot(x, y);"]}, {"block": 6, "type": "markdown", "linesLength": 2, "startIndex": 46, "lines": ["scatter plots \n", "https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#scatter-plots"]}, {"block": 7, "type": "code", "linesLength": 23, "startIndex": 48, "lines": ["%matplotlib notebook\n", "fig = plt.figure(figsize=(4, 4))\n", "\n", "def randrange(n, vmin, vmax):\n", "    '''\n", "    Helper function to make an array of random numbers having shape (n, )\n", "    with each number distributed Uniform(vmin, vmax).\n", "    '''\n", "    return (vmax - vmin)*np.random.rand(n) + vmin\n", "\n", "ax = fig.add_subplot(111, projection='3d')\n", "\n", "n = 100\n", "\n", "# For each set of style and range settings, plot n random points in the box\n", "# defined by x in [23, 32], y in [0, 100], z in [zlow, zhigh].\n", "for c, m, zlow, zhigh in [('r', 'o', -50, -25), ('b', '^', -30, -5)]:\n", "    xs = randrange(n, 23, 32)\n", "    ys = randrange(n, 0, 100)\n", "    zs = randrange(n, zlow, zhigh)\n", "    ax.scatter(xs, ys, zs, c=c, marker=m)\n", "\n", "ax.set_xlabel('X Label');"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 71, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#wireframe-plots"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 72, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#surface-plots"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 73, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#tri-surface-plots"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 74, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#contour-plots"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 75, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#filled-contour-plots"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 76, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#polygon-plots"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 77, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#bar-plots"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 78, "lines": ["https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#quiver"]}, {"block": 16, "type": "markdown", "linesLength": 0, "startIndex": 79, "lines": []}]