[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["Ensembles"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9ment - niveau basique"]}, {"block": 2, "type": "markdown", "linesLength": 2, "startIndex": 2, "lines": ["Ce document r\u00e9sume les op\u00e9rations courantes disponibles sur le type `set`.\n", "On rappelle que le type `set` est un type **mutable**."]}, {"block": 3, "type": "heading", "linesLength": 1, "startIndex": 4, "lines": ["Cr\u00e9ation en extension"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["On cr\u00e9e un ensemble avec les accolades, comme les dictionnaires (mais sans utiliser le caract\u00e8re `:`) et cela donne par exemple"]}, {"block": 5, "type": "heading", "linesLength": 1, "startIndex": 6, "lines": ["Cr\u00e9ation - la fonction `set`"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Il devrait \u00eatre clair \u00e0 ce stade que, le nom du type \u00e9tant `set`, la fonction `set` est un constructeur d'ensembles. On aurait donc aussi bien pu faire"]}, {"block": 7, "type": "heading", "linesLength": 1, "startIndex": 8, "lines": ["Un \u00e9l\u00e9ment dans un ensemble doit \u00eatre globalement immuable"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["On a vu pr\u00e9c\u00e9demment que les cl\u00e9s dans un dictionnaire doivent \u00eatre globalement immuables. Pour exactement les m\u00eames raisons, les \u00e9l\u00e9ments d'un ensemble doivent aussi \u00eatre globalement immuables."]}, {"block": 9, "type": "raw", "linesLength": 5, "startIndex": 10, "lines": ["# on ne peut pas ins\u00e9rer un tuple qui contient une liste\n", ">>> ensemble = { ( 1, 2, [ 3,4] ) }\n", "Traceback (most recent call last):\n", "  File \"<stdin>\", line 1, in <module>\n", "TypeError: unhashable type: 'list'"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["Le type `set` \u00e9tant lui-m\u00eame mutable, on ne peut pas cr\u00e9er un ensemble d'ensembles"]}, {"block": 11, "type": "raw", "linesLength": 4, "startIndex": 16, "lines": [">>> ensemble = { { 1,2} }\n", "Traceback (most recent call last):\n", "  File \"<stdin>\", line 1, in <module>\n", "TypeError: unhashable type: 'set'"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Et c'est une des raisons d'\u00eatre du type `frozenset`."]}, {"block": 13, "type": "heading", "linesLength": 1, "startIndex": 21, "lines": ["Cr\u00e9ation - la fonction `frozenset`"]}, {"block": 14, "type": "markdown", "linesLength": 3, "startIndex": 22, "lines": ["Il n'existe pas de raccourci syntaxique comme les `{}` pour cr\u00e9er un ensemble immuable, qui doit \u00eatre cr\u00e9\u00e9 avec la fonction `frozenset`. Toutes les op\u00e9rations document\u00e9es dans ce notebook, et qui n'ont pas besoin de modifier l'ensemble, sont disponibles sur un `frozenset`. \n", "\n", "Parmi les fonctions exclues sur un `frozenset`, on peut citer, sans doute non exhaustivement :  `update`, `pop`, `clear`, `remove`, `discard` ..."]}, {"block": 15, "type": "heading", "linesLength": 1, "startIndex": 25, "lines": ["Op\u00e9rations simples"]}, {"block": 16, "type": "heading", "linesLength": 1, "startIndex": 26, "lines": ["Test d'appartenance"]}, {"block": 17, "type": "heading", "linesLength": 1, "startIndex": 27, "lines": ["Cardinal"]}, {"block": 18, "type": "heading", "linesLength": 1, "startIndex": 28, "lines": ["Manipulations"]}, {"block": 19, "type": "heading", "linesLength": 1, "startIndex": 29, "lines": ["Op\u00e9rations classiques sur les ensembles"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["Donnons nous deux ensembles simples"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["N'oubliez pas que les ensembles, comme les dictionnaires, ne sont **pas ordonn\u00e9s**."]}, {"block": 22, "type": "markdown", "linesLength": 3, "startIndex": 32, "lines": ["**Remarques** \n", " * Les notations des op\u00e9rateurs sur les ensembles rappellent les op\u00e9rateurs \"bit-\u00e0-bit\" sur les entiers.\n", " * Ces op\u00e9rateurs sont \u00e9galement disponibles sous la forme de m\u00e9thodes"]}, {"block": 23, "type": "heading", "linesLength": 1, "startIndex": 35, "lines": ["Union"]}, {"block": 24, "type": "heading", "linesLength": 1, "startIndex": 36, "lines": ["Intersection"]}, {"block": 25, "type": "heading", "linesLength": 1, "startIndex": 37, "lines": ["Diff\u00e9rence"]}, {"block": 26, "type": "heading", "linesLength": 1, "startIndex": 38, "lines": ["Diff\u00e9rence sym\u00e9trique"]}, {"block": 27, "type": "markdown", "linesLength": 1, "startIndex": 39, "lines": ["On rappelle que $ A \\Delta B = (A - B) \\cup (B - A) $ "]}, {"block": 28, "type": "heading", "linesLength": 1, "startIndex": 40, "lines": ["Comparaisons"]}, {"block": 29, "type": "markdown", "linesLength": 1, "startIndex": 41, "lines": ["Ici encore on se donne deux ensembles"]}, {"block": 30, "type": "heading", "linesLength": 1, "startIndex": 42, "lines": ["\u00c9galit\u00e9"]}, {"block": 31, "type": "heading", "linesLength": 1, "startIndex": 43, "lines": ["Inclusion"]}, {"block": 32, "type": "heading", "linesLength": 1, "startIndex": 44, "lines": ["Ensembles disjoints"]}, {"block": 33, "type": "heading", "linesLength": 1, "startIndex": 45, "lines": ["Pour en savoir plus"]}, {"block": 34, "type": "markdown", "linesLength": 1, "startIndex": 46, "lines": ["Reportez vous \u00e0 [la section sur les ensembles](https://docs.python.org/2/library/stdtypes.html#set-types-set-frozenset) dans la documentation python"]}]