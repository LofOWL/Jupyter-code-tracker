[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["Op\u00e9rations 'bitwise'"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["ET logique, OU logique"]}, {"block": 2, "type": "markdown", "linesLength": 2, "startIndex": 2, "lines": ["Il est possible aussi de faire des op\u00e9rations \"bit-\u00e0-bit\" sur les nombres entiers. \\\\\n", "le plus simple est de penser \u00e0 l'\u00e9criture du nombre en base 2"]}, {"block": 3, "type": "markdown", "linesLength": 6, "startIndex": 4, "lines": ["Par exemple\n", "\n", "$x = 49 = 32 + 16 + 1 \\rightarrow (0,1,1,0,0,0,1) $\n", "\n", "$y = 81 = 64 + 16 + 1 \\rightarrow (1,0,1,0,0,0,1) $\n", "\n"]}, {"block": 4, "type": "code", "linesLength": 2, "startIndex": 10, "lines": ["x=49\n", "y=81"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["L'op\u00e9ration logique '&' va faire un 'et' logique bit \u00e0 bit entre les op\u00e9randes, ainsi"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 13, "lines": ["x&y"]}, {"block": 7, "type": "markdown", "linesLength": 7, "startIndex": 14, "lines": ["Et en effet\n", "\n", "$\\ \\ x\\ \\ \\rightarrow (0,1,1,0,0,0,1) $\n", "\n", "$\\ \\ y\\ \\ \\rightarrow (1,0,1,0,0,0,1) $\n", "\n", "$x\\&y \\rightarrow (0,0,1,0,0,0,1) \\rightarrow 17$\n"]}, {"block": 8, "type": "code", "linesLength": 0, "startIndex": 21, "lines": []}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["De m\u00eame, l'op\u00e9ration logique '|' fait simplement un 'ou' logique, comme ceci"]}, {"block": 10, "type": "code", "linesLength": 1, "startIndex": 22, "lines": ["x|y"]}, {"block": 11, "type": "markdown", "linesLength": 7, "startIndex": 23, "lines": ["On s'y retrouve parce que\n", "\n", "$\\ \\ x\\ \\rightarrow (0,1,1,0,0,0,1) $\n", "\n", "$\\ \\ y\\ \\rightarrow (1,0,1,0,0,0,1) $\n", "\n", "$x|y \\rightarrow (1,1,1,0,0,0,1) \\rightarrow 64+32+16+1$\n"]}, {"block": 12, "type": "heading", "linesLength": 1, "startIndex": 30, "lines": ["N\u00e9gation"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["De la m\u00eame fa\u00e7on on peut calculer la \"n\u00e9gation\", c'est-\u00e0-dire \"inverser\" les 0 et les 1 dans la repr\u00e9sentation binaire"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 32, "lines": ["\u02dcx"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 33, "lines": ["Le r\u00e9sultat de \"-50\" peut para\u00eetre surprenant \u00e0 premi\u00e8re vue"]}, {"block": 16, "type": "code", "linesLength": 0, "startIndex": 34, "lines": []}]