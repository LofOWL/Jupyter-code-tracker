[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["V\u00e9rifications de type"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9mement - niveau interm\u00e9diaire"]}, {"block": 2, "type": "markdown", "linesLength": 8, "startIndex": 2, "lines": ["Quelques notes uniquement pour l'instant\n", "\n", "* typage statique : utile car le compilateur peut v\u00e9rifier des trucs \u00e0 propos de code qu'on n'ex\u00e9cute pas souvent;\n", "  mais tr\u00e8s contraignant pour le programmeur, qui doit fournir plus d'informations, et se retrouve parfois coinc\u00e9\n", "  \n", "* approche python : pas d'information de type dans le code (mais dans les objets) et v\u00e9rification \u00e0 run-time. On rel\u00e2che la contrainte sur le programmeur, le code est + petit, mais on d\u00e9couvre les erreurs de types tr\u00e8s tard (parfois trop tard alors que le code est en production)\n", "\n", "entre ces deux extr\u00eames : l'inf\u00e9rence de type (citer ML), le compilateur \"devine\" ce type d'informations, et le programmeur **peut** le cas \u00e9ch\u00e9ant aider en ajoutant des annotations"]}, {"block": 3, "type": "markdown", "linesLength": 7, "startIndex": 10, "lines": ["Pour information il existe un projet baptis\u00e9 `mypy`, qui vise \u00e0 ajouter la possibilit\u00e9 d'annoter du code python avec des informations de type. Vous trouverez plus d'informations sur ce projet \u00e0 cette adresse\n", "\n", "http://www.mypy-lang.org/index.html\n", "\n", "Si ce sujet vous int\u00e9resse vous pouvez lire \u00e9galement le point de vue de Guido van Rossum sur ce point\n", "\n", "https://mail.python.org/pipermail/python-ideas/2014-August/028618.html\n"]}]