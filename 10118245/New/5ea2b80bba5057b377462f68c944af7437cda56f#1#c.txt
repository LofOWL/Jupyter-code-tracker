[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["\"Notebooks\" ipython comme support de cours"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["Pour illustrer les vid\u00e9os du MOOC, nous avons choisi d'utiliser ipython pour vous r\u00e9diger les documents \"mixtes\" contenant du texte et du code python, qu'on appelle des \"notebooks\", et dont le pr\u00e9sent document est un exemple."]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["Avantages des notebooks"]}, {"block": 3, "type": "markdown", "linesLength": 3, "startIndex": 3, "lines": ["Par rapport \u00e0 du code python \"brut\", les notebooks pr\u00e9sentent le premier avantage d'\u00eatre beaucoup plus lisible, car les parties textuelles peuvent \u00eatre mises en forme. \n", "\n", "En second lieu, le code python ins\u00e9r\u00e9 dans un notebook est interpr\u00e9t\u00e9 au travers d'une page web, sur une machine distante, ce qui vous permet de faire vos premiers pas avant m\u00eame d'avoir proc\u00e9d\u00e9 \u00e0 l'installation de python sur votre propre ordinateur."]}, {"block": 4, "type": "heading", "linesLength": 1, "startIndex": 6, "lines": ["Comment utiliser les notebooks"]}, {"block": 5, "type": "markdown", "linesLength": 10, "startIndex": 7, "lines": ["XXX section \u00e0 v\u00e9rifier en fonction du d\u00e9ploiement FUN XXX\n", "\n", "Un notebook est constitu\u00e9 d'une suite de cellules, soit textuelles, soit contenant du code. Les cellules de code sont fcilement reconnaissables, elles sont pr\u00e9c\u00e9d\u00e9es de $\\texttt{In []:}$.\n", "\n", "Pour voir le r\u00e9sultat d'une cellule de code, il faut la s\u00e9lectionner; puis \n", "vous disposez d'un bouton en forme de fl\u00eache triangulaire (play) vers la droite, qui vous fait passer d'une cellule \u00e0 la suivante, en \u00e9valuant le code. Pour \"ex\u00e9cuter\" l'ensemble du notebook, on part de la premi\u00e8re cellule, et on clique le bouton \"Play\" jusqu'au bout du notebook. \n", "\n", "Alternativement vous pouvez simplement taper au clavier  $\\textbf{\"Shift+Enter\"}$ pour obtenir le m\u00eame effet. (Ou encore, utiliser le menu \"Cell->Run\" mais c'est plus fastidieux).\n", "\n", "Entrainez-vous avec la cellule de code suivante:"]}, {"block": 6, "type": "markdown", "linesLength": 3, "startIndex": 17, "lines": ["Lorsqu'une cellule de code a \u00e9t\u00e9 \u00e9valu\u00e9e, ipython ajoute sous la cellule $\\texttt{In}$ une cellule $\\texttt{Out}$ qui donne le r\u00e9sultat du fragment python, soit ci-dessus 600.\n", "\n", "ipython ajoute \u00e9galement un nombre entre les crochets pour afficher, par exemple ci-dessus, $\\texttt{In [1]:}$. Ce nombre vous permet de retrouver m l'ordre dans lequel les cellules ont \u00e9t\u00e9 \u00e9valu\u00e9es."]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Vous pouvez naturellement modifier ces cellules de code pour faire des essais; ainsi vous pouvez vous servir du mod\u00e8le di-dessous pour calculer la racine carr\u00e9e de 3:"]}, {"block": 8, "type": "heading", "linesLength": 1, "startIndex": 21, "lines": ["Attention \u00e0 bien \u00e9valuer les cellules dans l'ordre"]}, {"block": 9, "type": "markdown", "linesLength": 3, "startIndex": 22, "lines": ["Il est important que les cellules de code soient \u00e9valu\u00e9es dans le bon ordre. Si vous ne respectez pas l'ordre dans lequel les cellules de code sont pr\u00e9sent\u00e9es, le r\u00e9sultat peut \u00eatre inattendu. \n", "\n", "C'est une question de bon sens, et cela vous appara\u00eetra nettement tr\u00e8s bient\u00f4t; \u00e9valuer un programme sous forme de notebook revient \u00e0 le d\u00e9couper en petits fragments, et si on ex\u00e9cute ces fragments dans le d\u00e9sordre, on obtient naturellement un programme diff\u00e9rent."]}, {"block": 10, "type": "heading", "linesLength": 1, "startIndex": 25, "lines": ["\u00c9valuer tout le notebook en une fois"]}, {"block": 11, "type": "markdown", "linesLength": 4, "startIndex": 26, "lines": ["XXX \u00e0 v\u00e9rifier \u00e9galement XXX\n", "On peut \u00e9galement \u00e9valuer tout le notebook en une seule fois en utilisant le menu \"Cell -> Run All\".\n", "\n", "Attention toutefois que certains de nos notebooks peuvent contenir, surtout au d\u00e9but du cours, des constructions intentionnellement incorrectes, et dans ce cas la fonction \"Run All\" va s'arr\u00eater \u00e0 cette cellule. Par exemple:"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["Lorsqu'on \u00e9value cette cellule avec seulement le texte $\\texttt{eggs}$, python se plaint car cette variable n'est pas d\u00e9finie. Nous verrons bien s\u00fbr tout ceci en d\u00e9tail, mais dans l'imm\u00e9diat, voyez comment est formul\u00e9 le message d'erreur."]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 31, "lines": ["Remarquez aussi, si vous avez essay\u00e9 la fonction \"Run All\" pour ex\u00e9cuter tout le notebook, que la cellule suivante n'a pas \u00e9t\u00e9 \u00e9valu\u00e9e, il va falloir l'ex\u00e9cuter \"\u00e0 la main\""]}]