[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Les instructions `break` et `continue`"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["### `break` et `continue`"]}, {"block": 4, "type": "markdown", "linesLength": 6, "startIndex": 8, "lines": ["En guise de rappel de ces deux notions que nous avons d\u00e9j\u00e0 rencontr\u00e9es dans la s\u00e9quence consacr\u00e9e aux boucle `while` la semaine pass\u00e9e, python propose deux instructions tr\u00e8s pratiques permettant de contr\u00f4ler l'ex\u00e9cution \u00e0 l'int\u00e9rieur des boucles de r\u00e9p\u00e9tition, et ceci s'applique indiff\u00e9remment aux boucles `for` ou `while`:\n", "\n", " * `continue` : pour abandonner l'it\u00e9ration courante, et passer \u00e0 la suivante, en **restant dans la boucle**,\n", " * `break` : pour abandonner **compl\u00e8tement** la boucle.\n", " \n", "Voici un exemple simple d'utilisation de ces deux instructions:"]}, {"block": 5, "type": "code", "linesLength": 9, "startIndex": 14, "lines": ["for entier in range(1000):\n", "    # on ignore les nombres non multiples de 10\n", "    if entier % 10 != 0:\n", "        continue\n", "    print(\"on traite l'entier {}\".format(entier))\n", "    # on s'arr\u00eate \u00e0 50\n", "    if entier >= 50:\n", "        break\n", "print(\"on est sorti de la boucle\")"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["Pour aller plus loin, vous pouvez lire [cette documentation](https://docs.python.org/3/tutorial/controlflow.html?highlight=break#break-and-continue-statements-and-else-clauses-on-loops)."]}]