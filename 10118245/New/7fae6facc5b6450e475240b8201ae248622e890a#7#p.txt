[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Expression conditionnelle"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Exercice - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["### Analyse et mise en forme"]}, {"block": 4, "type": "code", "linesLength": 2, "startIndex": 8, "lines": ["# Pour charger l'exercice\n", "from corrections.exo_libelle import exo_libelle"]}, {"block": 5, "type": "markdown", "linesLength": 9, "startIndex": 10, "lines": ["Un fichier contient, dans chaque ligne, des informations (champs) s\u00e9par\u00e9es par des virgules. Les espaces et tabulations pr\u00e9sents dans la ligne ne sont pas significatifs et doivent \u00eatre ignor\u00e9s. \n", "\n", "Dans cet exercice de niveau basique, on suppose que chaque ligne a exactement 3 champs, qui repr\u00e9sentent respectivement le pr\u00e9nom, le nom, et le rang d'une personne dans un classement. Une fois les espaces et tabulations ignor\u00e9s, on ne fait pas de v\u00e9rification sur le contenu des 3 champs. \n", "\n", "On vous demande d'\u00e9crire la fonction `libelle`, qui sera appel\u00e9e pour chaque ligne du fichier. Cette fonction:\n", " * prend en argument une ligne (cha\u00eene de caract\u00e8res)\n", " * retourne une cha\u00eene de caract\u00e8res mise en forme (voir plus bas)\n", " * ou bien retourne `None` si la ligne n'a pas pu \u00eatre analys\u00e9e, parce qu'elle ne v\u00e9rifie pas les hypoth\u00e8ses ci-dessus (c'est notamment le cas si on ne trouve pas exactement les 3 champs)\n", " \n"]}, {"block": 6, "type": "markdown", "linesLength": 5, "startIndex": 19, "lines": [" La mise en forme consiste \u00e0 retourner \n", " \n", "    Nom.Prenom (message)\n", "     \n", " le *message* \u00e9tant lui-m\u00eame le *rang* mis en forme pour afficher '1er', '2nd' ou '*n*-\u00e8me' selon le cas. Voici quelques exemples"]}, {"block": 7, "type": "code", "linesLength": 2, "startIndex": 24, "lines": ["# voici quelques exemples de ce qui est attendu\n", "exo_libelle.example()"]}, {"block": 8, "type": "code", "linesLength": 3, "startIndex": 26, "lines": ["# \u00e9crivez votre code ici\n", "def libelle(ligne):\n", "    \"<votre_code>\""]}, {"block": 9, "type": "code", "linesLength": 2, "startIndex": 29, "lines": ["# pour le v\u00e9rifier\n", "exo_libelle.correction(libelle)"]}]