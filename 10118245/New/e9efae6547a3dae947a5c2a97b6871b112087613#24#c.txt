[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["Instruction conditionnelle `if` et fonction `def`"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Exercices - niveau basique"]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["Fonction de divisibilit\u00e9"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["L'exercice consiste \u00e0 \u00e9crire une fonction baptis\u00e9e `divisible` qui retourne une valeur bool\u00e9enne qui indique si un des deux arguments est divisible par l'autre."]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Vous pouvez \u00e0 pr\u00e9sent tester votre code en \u00e9valuant ceci, qui \u00e9crira un message d'erreur si un des jeux de test ne donne pas le r\u00e9sultat attendu. Vous avez d'ailleurs \u00e0 pr\u00e9sent toutes les comp\u00e9tences pour comprendre ce code si le coaur vous en dit"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["**Remarque.** Vu comme le probl\u00e8me est pos\u00e9 il est assez naturel d'utiliser un `if` pour \u00e9crire 'divisible'. Vous remarquerez toutefois qu'un `if` n'est pas strictement indispensable, et nous vous invitons \u00e0 exhiber une version sans `if` qui est .. plus pythonique"]}, {"block": 6, "type": "heading", "linesLength": 1, "startIndex": 6, "lines": ["Manipulation de liste"]}, {"block": 7, "type": "markdown", "linesLength": 3, "startIndex": 7, "lines": ["Cet exercice consiste \u00e0 \u00e9crire une fonction `spam`, qui prend en argument une liste, et qui retourne la liste modifi\u00e9e comme suit:\n", " * si la liste est de taille paire, on intervertit les deux premiers \u00e9l\u00e9ments de la liste\n", " * si elle est de taille impaire, on lui retire son dernier \u00e9l\u00e9ment"]}]