[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout&nbsp;<img src=\"media/inria-25.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Les instructions `break` et `continue`"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["### `break` et `continue`"]}, {"block": 4, "type": "markdown", "linesLength": 6, "startIndex": 4, "lines": ["python propose deux instructions tr\u00e8s pratiques permettant de contr\u00f4ler l'ex\u00e9cution \u00e0 l'int\u00e9rieur des boucles de r\u00e9p\u00e9tition (`for` ou `while`)\n", "\n", " * `continue` : pour abandonner l'it\u00e9ration courante et passer \u00e0 la suivante\n", " * `break` : pour abandonner compl\u00e8tement la boucle\n", " \n", "Voici un exemple simple d'utilisation de ces deux instructions"]}, {"block": 5, "type": "code", "linesLength": 9, "startIndex": 10, "lines": ["for entier in range(1000):\n", "    # on ignore les nombres non multiples de 10\n", "    if entier % 10 != 0:\n", "        continue\n", "    print \"On traite l'entier {}\".format(entier)\n", "    # on s'arr\u00eate \u00e0 50\n", "    if entier >= 50:\n", "        break\n", "print \"on est sorti de la boucle\"    "]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["Pour aller plus loin, vous pouvez lire [cette documentation](https://docs.python.org/2.7/tutorial/controlflow.html?highlight=break#break-and-continue-statements-and-else-clauses-on-loops)."]}]