[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["D\u00e9coder le module `this`"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Exercice - niveau avanc\u00e9"]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["Le module `this` et le *zen de python*"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["Nous avons d\u00e9j\u00e0 eu l'occasion de parler du *zen de python*; on peut lire ce texte en important le module `this` comme ceci"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 4, "lines": ["import this"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["Il suit du cours qu'une fois cet import effectu\u00e9 nous avons acc\u00e8s \u00e0 une variable `this`, de type module:"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 6, "lines": ["this"]}, {"block": 7, "type": "heading", "linesLength": 1, "startIndex": 7, "lines": ["But de l'exercice"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["Le but de l'exercice est de deviner le contenu du module, et d'\u00e9crire une fonction `decode_zen`, qui retourne le texte du manifeste."]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 9, "lines": ["from corrections.w3_decode_zen import exo_decode_zen"]}, {"block": 10, "type": "heading", "linesLength": 1, "startIndex": 10, "lines": ["Indices"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 11, "lines": ["Cet exercice peut para\u00eetre un peu d\u00e9concertant; voici quelques indices optionnels :"]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 12, "lines": ["dir(this)"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["Vous pouvez ignorer `this.c` et `this.i`, les deux autres variables du module sont importantes pour nous."]}, {"block": 14, "type": "code", "linesLength": 2, "startIndex": 14, "lines": ["# le r\u00e9sultat attendu\n", "resultat = exo_decode_zen.resultat(this)"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 16, "lines": ["Ceci devrait vous donner une id\u00e9e de comment utiliser une des deux variables du module"]}, {"block": 16, "type": "code", "linesLength": 1, "startIndex": 17, "lines": ["len(this.s) == len(resultat)"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["\u00c0 quoi peut bien servir l'autre ?"]}, {"block": 18, "type": "code", "linesLength": 1, "startIndex": 19, "lines": ["this.d[this.s[0]] == resultat[0]"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 20, "lines": ["Le texte comporte certes des caract\u00e8res alphab\u00e9tiques"]}, {"block": 20, "type": "code", "linesLength": 1, "startIndex": 21, "lines": ["len(this.d)"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["mais pas seulement; les autres sont pr\u00e9serv\u00e9s."]}, {"block": 22, "type": "heading", "linesLength": 1, "startIndex": 23, "lines": ["\u00c0 vous de jouer"]}, {"block": 23, "type": "code", "linesLength": 2, "startIndex": 24, "lines": ["def decode_zen(this):\n", "    \"<votre code>\""]}, {"block": 24, "type": "heading", "linesLength": 1, "startIndex": 26, "lines": ["Correction"]}, {"block": 25, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["exo_decode_zen.correction(decode_zen, this)"]}]