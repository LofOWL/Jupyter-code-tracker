[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# La clause `import as`"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Compl\u00e9ment - niveau interm\u00e9diaire"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["### Rappel"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["Jusqu'ici nous avons vu les formes d'importation suivantes\u00a0:"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["##### Importer tout un module"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["D'abord pour importer tout un module"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 11, "lines": ["    import monmodule"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["##### Importer un symbole dans un module"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["Dans la vid\u00e9o nous venons de voir qu'on peut aussi faire\u00a0:"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 14, "lines": ["    from monmodule import monsymbole"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["Pour m\u00e9moire, le langage permet de faire aussi des `import *`, qui est d'un usage d\u00e9conseill\u00e9 en dehors de l'interpr\u00e9teur interactif, car cela cr\u00e9e \u00e9videmment un risque de collisions non contr\u00f4l\u00e9es des espaces de nommage. "]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 16, "lines": ["### `import_module`"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 17, "lines": ["Comme vous pouvez le voir, avec `import` on ne peut importer qu'un nom fixe. On ne peut pas calculer le nom d'un module, et le charger ensuite\u00a0:"]}, {"block": 14, "type": "code", "linesLength": 2, "startIndex": 18, "lines": ["# si on calcule un nom de module\n", "modulename = \"ma\" + \"th\" "]}, {"block": 15, "type": "markdown", "linesLength": 5, "startIndex": 20, "lines": ["on ne peut pas ensuite charger le module math avec import puisque \n", "\n", "    import modulename\n", "    \n", "cherche un module dont le nom est \"modulename\""]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 25, "lines": ["Sachez que vous pourriez utiliser dans ce cas la fonction `import_module` du module `importlib`, qui cette fois permet d'importer un module dont vous avez calcul\u00e9 le nom\u00a0:"]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 26, "lines": ["from importlib import import_module"]}, {"block": 18, "type": "code", "linesLength": 2, "startIndex": 27, "lines": ["loaded = import_module(modulename)\n", "type(loaded)"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["Nous avons maintenant bien charg\u00e9 le module `math`, et on l'a rang\u00e9 dans la variable `loaded`"]}, {"block": 20, "type": "code", "linesLength": 4, "startIndex": 30, "lines": ["# loaded r\u00e9f\u00e9rence le m\u00eame objet module que si on avait fait \n", "# import math\n", "import math\n", "math is loaded"]}, {"block": 21, "type": "markdown", "linesLength": 1, "startIndex": 34, "lines": ["La fonction `import_module` n'est pas d'un usage tr\u00e8s courant, dans la pratique on utilise une des formes de `import` que nous allons voir maintenant, mais `import_module` va me servir \u00e0 bien illustrer ce que font, pr\u00e9cis\u00e9ment, les diff\u00e9rentes formes de `import`."]}, {"block": 22, "type": "markdown", "linesLength": 1, "startIndex": 35, "lines": ["### Reprenons"]}, {"block": 23, "type": "markdown", "linesLength": 1, "startIndex": 36, "lines": ["Maintenant que nous savons ce que fait `import_module`, on peut r\u00e9crire les deux formes d'`import`  de cette fa\u00e7on\u00a0:"]}, {"block": 24, "type": "code", "linesLength": 2, "startIndex": 37, "lines": ["# un import simple\n", "import math"]}, {"block": 25, "type": "code", "linesLength": 2, "startIndex": 39, "lines": ["# peut se r\u00e9crire\n", "math = import_module('math')"]}, {"block": 26, "type": "markdown", "linesLength": 1, "startIndex": 41, "lines": ["Et\u00a0:"]}, {"block": 27, "type": "code", "linesLength": 2, "startIndex": 42, "lines": ["# et un import from\n", "from pathlib import Path"]}, {"block": 28, "type": "code", "linesLength": 4, "startIndex": 44, "lines": ["# est en gros \u00e9quivalent \u00e0\n", "tmp = import_module('pathlib')\n", "Path = tmp.Path\n", "del tmp"]}, {"block": 29, "type": "markdown", "linesLength": 1, "startIndex": 48, "lines": ["### `import`  `as`"]}, {"block": 30, "type": "markdown", "linesLength": 1, "startIndex": 49, "lines": ["##### Tout un module"]}, {"block": 31, "type": "markdown", "linesLength": 5, "startIndex": 50, "lines": ["Dans chacun de ces deux cas, on n'a pas le choix du nom de l'entit\u00e9 import\u00e9e, et cela pose parfois probl\u00e8me.\n", "\n", "Il peut arriver d'\u00e9crire un module sous un nom qui semble bien choisi, mais on se rend compte au bout d'un moment qu'il entre en conflit avec un autre symbole.\n", "\n", "Par exemple, vous \u00e9crivez un module dans un fichier `globals.py` et vous l'importez dans votre code"]}, {"block": 32, "type": "markdown", "linesLength": 1, "startIndex": 55, "lines": ["    import globals"]}, {"block": 33, "type": "markdown", "linesLength": 1, "startIndex": 56, "lines": ["Puis un moment apr\u00e8s pour d\u00e9bugger vous voulez utiliser la fonction *built-in* `globals`. Sauf que, en vertu de la r\u00e8gle de visibilit\u00e9 des variables (rappelez-vous de la r\u00e8gle \"LEGB\", que l'on a vue dans une vid\u00e9o de la Semaine 4), le symbole `globals` se trouve maintenant d\u00e9signer votre module, et non la fonction."]}, {"block": 34, "type": "markdown", "linesLength": 1, "startIndex": 57, "lines": ["\u00c0 ce stade \u00e9videmment vous pouvez (devriez) renommer votre module, mais cela peut prendre du temps parce qu'il y a de nombreuses d\u00e9pendances. En attendant vous pouvez tirer profit de la clause `import as` dont la forme g\u00e9n\u00e9rale est\u00a0:"]}, {"block": 35, "type": "markdown", "linesLength": 1, "startIndex": 58, "lines": ["    import monmodule as autremodule"]}, {"block": 36, "type": "markdown", "linesLength": 1, "startIndex": 59, "lines": ["ce qui, toujours \u00e0 la grosse louche, est \u00e9quivalent \u00e0\u00a0:"]}, {"block": 37, "type": "markdown", "linesLength": 1, "startIndex": 60, "lines": ["    autremodule = import_module('monmodule')"]}, {"block": 38, "type": "markdown", "linesLength": 1, "startIndex": 61, "lines": ["##### Un symbole dans un module"]}, {"block": 39, "type": "markdown", "linesLength": 1, "startIndex": 62, "lines": ["On peut aussi importer un symbole sp\u00e9cifique d'un module, sous un autre nom que celui qu'il a dans le module. Ainsi\u00a0:"]}, {"block": 40, "type": "markdown", "linesLength": 1, "startIndex": 63, "lines": ["    from monmodule import monsymbole as autresymbole"]}, {"block": 41, "type": "markdown", "linesLength": 1, "startIndex": 64, "lines": ["qui fait quelque chose comme\u00a0:"]}, {"block": 42, "type": "markdown", "linesLength": 3, "startIndex": 65, "lines": ["    temporaire = import_module('monmodule')\n", "    autresymbole = temporaire.monsymbole\n", "    del temporaire"]}, {"block": 43, "type": "markdown", "linesLength": 1, "startIndex": 68, "lines": ["### Quelques exemples"]}, {"block": 44, "type": "markdown", "linesLength": 7, "startIndex": 69, "lines": ["J'ai \u00e9crit des modules jouets\u00a0:\n", "\n", "* `un_deux` qui d\u00e9finit des fonctions `un` et `deux`\u00a0;\n", "* `un_deux_trois` qui d\u00e9finit des fonctions `un`, `deux` et `trois`\u00a0;\n", "* `un_deux_trois_quatre` qui d\u00e9finit, eh oui, des fonctions `un`, `deux`, `trois` et `quatre`.\n", " \n", "Toutes ces fonctions se contentent d'\u00e9crire leur nom et leur module."]}, {"block": 45, "type": "code", "linesLength": 3, "startIndex": 76, "lines": ["# changer le nom du module import\u00e9\n", "import un_deux as one_two\n", "one_two.un()"]}, {"block": 46, "type": "code", "linesLength": 3, "startIndex": 79, "lines": ["# changer le nom d'un symbole import\u00e9 du module\n", "from un_deux_trois import un as one\n", "one()"]}, {"block": 47, "type": "code", "linesLength": 2, "startIndex": 82, "lines": ["# on peut m\u00e9langer tout \u00e7a\n", "from un_deux_trois_quatre import un as one, deux, trois as three"]}, {"block": 48, "type": "code", "linesLength": 3, "startIndex": 84, "lines": ["one()\n", "deux()\n", "three()"]}, {"block": 49, "type": "markdown", "linesLength": 1, "startIndex": 87, "lines": ["### Pour en savoir plus"]}, {"block": 50, "type": "markdown", "linesLength": 1, "startIndex": 88, "lines": ["Vous pouvez vous reporter \u00e0 [la section sur l'instruction `import`](https://docs.python.org/3/reference/simple_stmts.html#the-import-statement) dans la documentation python."]}]