[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["La suite de Fibonacci (Suite)"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9ment - niveau interm\u00e9diaire"]}, {"block": 2, "type": "markdown", "linesLength": 3, "startIndex": 2, "lines": ["Nous reprenons le cas de la fonction `fibonacci` que nous avons vue d\u00e9j\u00e0, mais cette fois nous voulons que l'utilisateur puisse entrer l'entier en entr\u00e9e de l'algorithme, non plus en r\u00e9pondant une question, mais sur la ligne de commande, c'est-\u00e0-dire en tapant\n", "\n", "    $ python fibonacci.py 12"]}, {"block": 3, "type": "markdown", "linesLength": 2, "startIndex": 5, "lines": ["**Avertissement** \n", "Attention cette version-ci ne fonctionne pas dans ce notebook sous IPython, car on n'a pas de moyen dans un notebook d'invoquer un programme en lui passant des arguments de cette fa\u00e7on. "]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Cette fois nous importons le module qui va nous permettre d'interpr\u00e9ter les arguments pass\u00e9s \u00e0 la ligne de commande"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["Puis nous r\u00e9p\u00e9tons la fonction `fibonacci`"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["\u00c0 pr\u00e9sent nous utilisons le module `argparse` pour lui dire qu'on s'attend \u00e0 exactement un argument sur la ligne de commande, qui doit \u00eatre un entier. Ici encore ne vous inqui\u00e9tez pas si vous ne comprenez psa tout le code, l'objectif est de vous donner un morceau de code utilisable tout de suite."]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["Nous pouvons \u00e0 pr\u00e9sent afficher le r\u00e9sultat"]}, {"block": 8, "type": "markdown", "linesLength": 5, "startIndex": 11, "lines": ["Vous pouvez donc \u00e0 pr\u00e9sent\n", " * t\u00e9l\u00e9charger ce code sur votre disque comme un fichier `fibonacci.py`\n", " * l'ex\u00e9cuter avec simplement python comme ceci\n", " \n", "     `$ python fibonacci_prompt.py 56` "]}]