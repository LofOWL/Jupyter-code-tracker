[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Exercice - niveau interm\u00e9diaire"]}, {"block": 2, "type": "code", "linesLength": 1, "startIndex": 6, "lines": ["import numpy as np"]}, {"block": 3, "type": "code", "linesLength": 1, "startIndex": 7, "lines": ["from corrections.exo_stairs import exo_stairs"]}, {"block": 4, "type": "markdown", "linesLength": 7, "startIndex": 8, "lines": ["On vous demande d'\u00e9crire une fonction `stairs` qui cr\u00e9e un tableau `numpy`.\n", "\n", "La fonction prend en argument un entier `k` et construit un tableau carr\u00e9 de taille $2*k+1$.\n", "\n", "Aux quatre coins du tableau on trouve la valeur $0$. Dans la case centrale on trouve la valeur $2*k$.\n", "\n", "Si vous partez de n'importe quelle case et que vous vous d\u00e9placez d'une case horizontalement ou verticalement vers une cas plus proche du centre, vous incr\u00e9mentez la valeur du tableau de `1`."]}, {"block": 5, "type": "code", "linesLength": 2, "startIndex": 15, "lines": ["# voici deux exemples pour la fonction stairs\n", "exo_stairs.example()"]}, {"block": 6, "type": "code", "linesLength": 3, "startIndex": 17, "lines": ["# \u00e0 vous de jouer\n", "def stairs(k):\n", "    return \"votre code\""]}, {"block": 7, "type": "code", "linesLength": 2, "startIndex": 20, "lines": ["# pour corriger votre code\n", "exo_stairs.correction(stairs)"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["### Visualisation"]}, {"block": 9, "type": "code", "linesLength": 3, "startIndex": 23, "lines": ["import matplotlib.pyplot as plt\n", "%matplotlib inline\n", "plt.ion()"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["L'exercice est termin\u00e9, mais si vous avez r\u00e9ussi et que vous voulez visualisez le r\u00e9sultat, voici comment vous pouvez aussi voir ce type de tableau\u00a0:"]}, {"block": 11, "type": "code", "linesLength": 1, "startIndex": 27, "lines": ["squares = stairs(100)"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 28, "lines": ["Pour le voir comme une image avec un niveau de gris comme code de couleurs (noir = 0, blanc = maximum = 201 dans notre cas)\u00a0:"]}, {"block": 13, "type": "code", "linesLength": 4, "startIndex": 29, "lines": ["# convertir en flottant pour imshow\n", "squares = squares.astype(np.float)\n", "# afficher avec une colormap 'gray'\n", "plt.imshow(squares, cmap='gray');"]}]