[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Exercice - comptage dans les chaines"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["Nous remercions Benoit Izac pour cette contribution aux exercices."]}, {"block": 4, "type": "markdown", "linesLength": 11, "startIndex": 8, "lines": ["## La commande UNIX wc(1)\n", "\n", "---\n", "\n", "Sur les syst\u00e8mes de type UNIX, la commande [wc](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/wc.html) permet de compter le nombre de lignes, de mots et d'octets (ou de caract\u00e8res) pr\u00e9sents sur l'entr\u00e9e standard ou contenus dans un fichier.\n", "\n", "L'exercice consiste \u00e0 \u00e9crire une fonction nomm\u00e9e *wc* qui prendra en argument une cha\u00eene de caract\u00e8res et retournera une liste contenant trois \u00e9l\u00e9ments\u00a0:\n", "\n", "1. le nombre de lignes (plus pr\u00e9cis\u00e9ment le nombre de retours \u00e0 la ligne)\u00a0;\n", "2. le nombre de mots (un mot \u00e9tant s\u00e9par\u00e9 par des espaces)\u00a0;\n", "3. le nombre de caract\u00e8res (on utilisera uniquement le jeu de caract\u00e8res ASCII)."]}, {"block": 5, "type": "code", "linesLength": 2, "startIndex": 19, "lines": ["# chargement de l'exercice\n", "from corrections.exo_wc import exo_wc"]}, {"block": 6, "type": "code", "linesLength": 2, "startIndex": 21, "lines": ["# exemple\n", "exo_wc.example()"]}, {"block": 7, "type": "markdown", "linesLength": 3, "startIndex": 23, "lines": ["**Indice**\u00a0: nous avons vu rapidement la boucle `for`, sachez toutefois qu'on peut tout \u00e0 fait r\u00e9soudre l'exercice en utilisant uniquement la biblioth\u00e8que standard.\n", "\n", "**Remarque**\u00a0: usuellement, ce genre de fonctions retournerait plut\u00f4t un tuple qu'une liste, mais comme nous ne voyons les tuples que la semaine prochaine..\n"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["\u00c0 vous de jouer\u00a0:"]}, {"block": 9, "type": "code", "linesLength": 4, "startIndex": 27, "lines": ["# la fonction \u00e0 impl\u00e9menter\n", "def wc(string):\n", "    # remplacer pass par votre code\n", "    pass"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 31, "lines": ["# correction\n", "exo_wc.correction(wc)"]}]