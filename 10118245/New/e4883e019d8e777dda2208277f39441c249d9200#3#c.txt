[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Un peu de lecture"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["## Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["### Le zen de python"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Vous pouvez lire le \"zen de python\", qui r\u00e9sume la philosophie du langage, en important le module `this` avec ce code: (pour ex\u00e9cuter ce code: cliquer dans la cellule de code, et faites au clavier \"Majuscule/Entr\u00e9e\" ou \"Shift/Enter\")"]}, {"block": 5, "type": "code", "linesLength": 2, "startIndex": 5, "lines": ["# le zen de python\n", "import this"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["### Documentation"]}, {"block": 7, "type": "markdown", "linesLength": 7, "startIndex": 8, "lines": [" * On peut commencer par citer l'[article de wikipedia sur python en fran\u00e7ais](http://fr.wikipedia.org/wiki/Python_%28langage%29)\n", "\n", " * La [page sur le langage en fran\u00e7ais](https://wiki.python.org/moin/FrenchLanguage)\n", " \n", " * La [documentation originale](https://docs.python.org/3/) de python-3 - donc, en anglais - est un tr\u00e8s bon point d'entr\u00e9e lorsqu'on cherche un sujet particulier, mais (beaucoup) trop abondante pour \u00eatre lue d'un seul trait. Pour chercher de la documentation sur un module particulier: le plus simple est encore d'utiliser google - ou votre moteur de recherche favori - qui vous redirigera dans la grande majorit\u00e9 des cas vers la page qui va bien dans, pr\u00e9cis\u00e9ment, la documentation python.\n", "\n", "   \u00c0 titre d'exercice, cherchez la documentation du module `pathlib` en [cherchant sur google \"`python module pathlib`\"](https://www.google.fr/search?q=python+module+pathlib)."]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 15, "lines": ["### Historique et survol"]}, {"block": 9, "type": "markdown", "linesLength": 2, "startIndex": 16, "lines": [" * L'article de wikipedia (en anglais) sur l'[historique du langage](http://en.wikipedia.org/wiki/History_of_Python)\n", " * Sur wikip\u00e9dia, un article (en anglais) sur [la syntaxe et la s\u00e9mantique de python](http://en.wikipedia.org/wiki/Python_syntax_and_semantics) "]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["### Un peu de folklore"]}, {"block": 11, "type": "markdown", "linesLength": 3, "startIndex": 19, "lines": [" * Le [talk de Guido van Rossum \u00e0 PyCon 2016](https://www.youtube.com/watch?v=YgtL4S7Hrwo)\n", " * Sur youtube: le [sketch des monty python](https://www.youtube.com/watch?v=anwy2MPT5RE) d'o\u00f9 provient les termes `spam`, `eggs` et autres `beans` qu'on utilise traditionnellement dans les exemples en python plut\u00f4t que `foo` et `bar`\n", " * et l'[article wikipedia correspondant](http://en.wikipedia.org/wiki/Spam_%28Monty_Python%29), qui cite le langage python"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["## Compl\u00e9ment - niveau interm\u00e9diaire"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["### Licence"]}, {"block": 14, "type": "markdown", "linesLength": 2, "startIndex": 24, "lines": ["* La [licence d'utilisation est disponible ici](https://docs.python.org/3/license.html). \n", "* La page de la [Python Software Foundation](https://www.python.org/psf/), qui est une entit\u00e9 l\u00e9gale similaire \u00e0 nos associations de 1901, \u00e0 but non lucratif; elle poss\u00e8de les droits sur le langage"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["### Le processus de d\u00e9veloppement"]}, {"block": 16, "type": "markdown", "linesLength": 8, "startIndex": 27, "lines": [" * Comment les choix d'\u00e9volution sont propos\u00e9s et discut\u00e9s, au travers des PEP (Python Enhacement Proposal)\n", "   * http://en.wikipedia.org/wiki/Python_(programming_language)#Development\n", " * Le premier PEP d\u00e9crit en d\u00e9tail .. le cycle de vie des PEPs\n", "   * http://legacy.python.org/dev/peps/pep-0001/\n", " * Le PEP 8, qui pr\u00e9conise un style de pr\u00e9sentation (*style guide*)\n", "   * http://legacy.python.org/dev/peps/pep-0008/\n", " * L'index de tous les PEPs\n", "   * http://legacy.python.org/dev/peps/        "]}]