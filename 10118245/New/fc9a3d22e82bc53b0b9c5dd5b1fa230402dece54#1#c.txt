[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout,<img src=\"media/inria-25.png\" style=\"display:inline\"></span>"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["La suite de Fibonacci"]}, {"block": 2, "type": "heading", "linesLength": 1, "startIndex": 2, "lines": ["Compl\u00e9ment - niveau basique"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["Voici un premier exemple de code que vous pouvez commencer par utiliser dans ce notebook. Nous verrons en fin de s\u00e9ance comment le faire \u00e9galement fonctionner localement sur votre ordinateur."]}, {"block": 4, "type": "markdown", "linesLength": 17, "startIndex": 4, "lines": ["Le but de ce programme est de calculer la fonction de Fibonacci, qui comme vous vous en souvenez s\u00fbrement est  d\u00e9finie comme ceci&nbsp;:\n", "\n", "* $ u_0 = 1$\n", "* $u_1 = 1 $\n", "* $ \\forall n >= 2, u_{n} = u_{n-1} + u_{n-2} $\n", "\n", "Ce qui donne pour les premi\u00e8res valeurs\n", "\n", "<table>\n", "<thead><tr><th>n</th><td>fibonacci(n)</td></tr></thead>\n", "<tr><td>0</td><td>1</td></tr>\n", "<tr><td>1</td><td>1</td></tr>\n", "<tr><td>2</td><td>2</td></tr>\n", "<tr><td>3</td><td>3</td></tr>\n", "<tr><td>4</td><td>5</td></tr>\n", "<tr><td>5</td><td>8</td></tr>\n", "</table>"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 21, "lines": ["On commence par d\u00e9finir la fonction `fibonacci` comme suit. Naturellement vous n'avez pas encore tout le bagage pour lire ce code, ne vous inqui\u00e9tez pas nous allons vous expliquer tout \u00e7a dans les prochaines semaines. Le but est uniquement de vous montrer un fonctionnement de l'interpr\u00e9teur Python et de IDLE. "]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["Pour en faire un programme utilisable on va demander \u00e0 l'utilisateur de rentrer un nombre; il faut le convertir en entier car `raw_input` renvoie une cha\u00eene de caract\u00e8res"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["On imprime le r\u00e9sultat"]}, {"block": 8, "type": "heading", "linesLength": 1, "startIndex": 24, "lines": ["Exercice"]}, {"block": 9, "type": "markdown", "linesLength": 12, "startIndex": 25, "lines": ["Vous pouvez donc \u00e0 pr\u00e9sent&nbsp;:\n", " * ex\u00e9cuter le code dans ce notebook\n", " * t\u00e9l\u00e9charger ce code sur votre disque comme un fichier `fibonacci_prompt.py` \n", "   * utilisez pour cela le menu *\"File -> Download as -> python\"*\n", "   * et renommez le fichier obtenu au besoin\n", " * l'ex\u00e9cuter sous IDLE\n", " * le modifier, par exemple pour afficher les r\u00e9sultats interm\u00e9diaires \n", "   * on a laiss\u00e9 expr\u00e8s des commentaires que vous pouvez r\u00e9activer simplement\n", " * l'ex\u00e9cuter avec simplement python comme ceci\n", " \n", "     `$ python fibonacci_prompt.py`\n", "     "]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 37, "lines": ["Ce code est volontairement simple et peu robuste pour ne pas l'alourdir. Par exemple, ce programme se comporte mal si vous entrez un entier n\u00e9gatif."]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 38, "lines": ["Nous allons voir tout de suite une version l\u00e9g\u00e8rement diff\u00e9rente qui vous permet de sp\u00e9cifier la valeur d'entr\u00e9e sur la ligne de commande"]}]