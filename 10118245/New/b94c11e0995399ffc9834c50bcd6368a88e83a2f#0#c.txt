[{"block": 0, "type": "heading", "linesLength": 1, "startIndex": 0, "lines": ["Fichiers et utilitaires"]}, {"block": 1, "type": "heading", "linesLength": 1, "startIndex": 1, "lines": ["Compl\u00e9ment - niveau basique"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["Nous pr\u00e9sentons dans ces compl\u00e9ments quelques utilitaires autour des fichiers. Il ne s'agit pas d'outils li\u00e9s au type `file` \u00e0 proprement parler, mais qui sont utiles malgr\u00e9 tout dans le contexte de la manipulation de fichiers."]}, {"block": 3, "type": "heading", "linesLength": 1, "startIndex": 3, "lines": ["Le module `os.path`"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Ce module propose un certain nombre d'utilitaires \u00e0 large spectre sur les fichiers, et entre autres les choses suivantes."]}, {"block": 5, "type": "heading", "linesLength": 1, "startIndex": 5, "lines": ["Manipulations de noms de fichier"]}, {"block": 6, "type": "markdown", "linesLength": 6, "startIndex": 6, "lines": ["Pour commencer, nous vous recommandons d'utiliser le module `os.path` pour manipuler les noms de fichier, surtout si vous \u00e9crivez du code multi-plateforme. Voyez en particulier dans cette cat\u00e9gorie\n", "\n", " * `os.path.join` ajoute '/' ou '\\' entre deux morceaux de chemin, selon l'OS\n", " * `os.path.basename` trouve le nom de fichier dans un chemin\n", " * `os.path.dirname` trouve le nom du directory dans un chemin\n", " * `os.path.abspath` calcule un chemin absolu - i.e. \u00e0 partir de la racine du filesystem) "]}, {"block": 7, "type": "heading", "linesLength": 1, "startIndex": 12, "lines": ["Existence de fichier / m\u00e9tadonn\u00e9es"]}, {"block": 8, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["Les fonctions suivantes retournent des informations obtenues aupr\u00e8s de l'OS dans les m\u00e9tadonn\u00e9es associ\u00e9es aux fichiers (concr\u00e8tement, sans ouvrir le fichier)."]}, {"block": 9, "type": "markdown", "linesLength": 4, "startIndex": 14, "lines": [" * `os.path.exists` pour savoir si un chemin existe ou pas (fichier ou r\u00e9pertoire)\n", " * `os.path.isfile` (et `isdir`) pour savoir si un chemin est un fichier  (et un r\u00e9pertoire)\n", " * `os.path.getsize` pour obtenir la taille du fichier \n", " * `os.path.getatime` et aussi `getmtime` et `getctime`  pour obtenir les dates de cr\u00e9ation/modification d'un fichier"]}, {"block": 10, "type": "heading", "linesLength": 1, "startIndex": 18, "lines": ["Et autres"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 19, "lines": ["Reportez-vous \u00e0 la [documentation compl\u00e8te de `os.path`](https://docs.python.org/2/library/os.path.html) pour plus de d\u00e9tails sur ce module."]}, {"block": 12, "type": "heading", "linesLength": 1, "startIndex": 20, "lines": ["Le module `os`"]}, {"block": 13, "type": "markdown", "linesLength": 5, "startIndex": 21, "lines": ["Signalons aussi, mais cette fois du module `os`, les fonctions\n", " * `os.remove` (ou son ancien nom `os.unlink`), qui permet de supprimer un fichier,\n", " * `os.rmdir` pour supprimer un r\u00e9pertoire (mais qui doit \u00eatre vide),\n", " * `os.removedirs` pour supprimer tout un r\u00e9pertoire avec son contenu, r\u00e9cursivement si n\u00e9cessaire,\n", " * `os.rename` pour renommer un fichier"]}, {"block": 14, "type": "heading", "linesLength": 1, "startIndex": 26, "lines": ["Et autres"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["Le module `os` comporte un grand nombre d'autres fonctionnalit\u00e9s que celles relatives aux fichiers, vous pouvez consulter la [documentation compl\u00e8te de `os`](https://docs.python.org/2/library/os.html) pour une liste exhaustive."]}, {"block": 16, "type": "heading", "linesLength": 1, "startIndex": 28, "lines": ["Un petit exemple"]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 29, "lines": ["Voici un exemple simple qui utilise les deux modules `os` et `os.path` pour s'assurer qu'un fichier n'existe pas, le cr\u00e9er, acc\u00e9der sa taille et sa date de modification, puis l'effacer \u00e0 nouveau."]}, {"block": 18, "type": "heading", "linesLength": 1, "startIndex": 30, "lines": ["Le module `glob` - recherche de fichiers"]}, {"block": 19, "type": "markdown", "linesLength": 3, "startIndex": 31, "lines": ["On a parfois le besoin de chercher, par exemple, \"tous les fichiers se terminant par `.txt`\".\n", "\n", "Le module `glob` fournit des fonctions pour ce genre de besoins, comme illustr\u00e9 ici"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 34, "lines": ["Comme toujours, voyez [la documentation compl\u00e8te de `glob`](https://docs.python.org/2/library/glob.html) pour plus de pr\u00e9cisions."]}]