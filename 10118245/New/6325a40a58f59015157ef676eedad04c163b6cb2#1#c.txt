[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Compr\u00e9hensions"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Exercice - niveau interm\u00e9diaire"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["### Mise au carr\u00e9"]}, {"block": 4, "type": "code", "linesLength": 2, "startIndex": 8, "lines": ["# chargement de l'exercice\n", "from corrections.exo_carre import exo_carre"]}, {"block": 5, "type": "markdown", "linesLength": 4, "startIndex": 10, "lines": ["On vous demande \u00e0 pr\u00e9sent d'\u00e9crire une fonction dans le m\u00eame esprit que ci-dessus.\n", "Cette fois, chaque ligne contient, s\u00e9par\u00e9s par des points-virgules, une liste d'entiers, et on veut obtenir une nouvelle cha\u00eene avec les carr\u00e9s de ces entiers, s\u00e9par\u00e9s par des deux-points.\n", "\n", "\u00c0 nouveau les lignes peuvent \u00eatre remplies de mani\u00e8re approximative, avec des espaces, des tabulations, ou m\u00eame des points-virgules en trop, que ce soit au d\u00e9but, \u00e0 la fin, ou au milieu d'une ligne."]}, {"block": 6, "type": "code", "linesLength": 2, "startIndex": 14, "lines": ["# exemples\n", "exo_carre.example()"]}, {"block": 7, "type": "code", "linesLength": 3, "startIndex": 16, "lines": ["# \u00e9crivez votre code ici\n", "def carre(ligne):\n", "    \"<votre_code>\""]}, {"block": 8, "type": "code", "linesLength": 2, "startIndex": 19, "lines": ["# pour corriger\n", "exo_carre.correction(carre)"]}]