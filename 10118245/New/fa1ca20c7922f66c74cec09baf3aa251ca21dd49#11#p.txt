[{"block": 0, "type": "markdown", "linesLength": 5, "startIndex": 0, "lines": ["<style>div.title-slide {    width: 100%;    display: flex;    flex-direction: row;            /* default value; can be omitted */    flex-wrap: nowrap;              /* default value; can be omitted */    justify-content: space-between;}</style><div class=\"title-slide\">\n", "<span style=\"float:left;\">Licence CC BY-NC-ND</span>\n", "<span>Thierry Parmentelat &amp; Arnaud Legout</span>\n", "<span><img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\" /></span>\n", "</div>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["# Exercice sur les ensembles"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["## Exercice - niveau interm\u00e9diaire"]}, {"block": 3, "type": "code", "linesLength": 2, "startIndex": 7, "lines": ["# chargement de l'exercice\n", "from corrections.exo_marine_set import exo_diff"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["### Les donn\u00e9es"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["Nous reprenons le m\u00eame genre de donn\u00e9es marines en provenance de MarineTraffic que nous avons vues dans l'exercice pr\u00e9c\u00e9dent."]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 11, "lines": ["from corrections.exo_marine_set import abbreviated, extended"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["### Rappels sur les formats"]}, {"block": 8, "type": "markdown", "linesLength": 2, "startIndex": 13, "lines": ["    \u00e9tendu: [id, latitude, longitude, date_heure, nom_bateau, code_pays...]\n", "    abr\u00e9g\u00e9: [id, latitude, longitude, date_heure]"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 15, "lines": ["print(extended[0])"]}, {"block": 10, "type": "code", "linesLength": 1, "startIndex": 16, "lines": ["print(abbreviated[0])"]}, {"block": 11, "type": "markdown", "linesLength": 1, "startIndex": 17, "lines": ["### But de l'exercice"]}, {"block": 12, "type": "code", "linesLength": 2, "startIndex": 18, "lines": ["# chargement de l'exercice\n", "from corrections.exo_marine_set import exo_diff"]}, {"block": 13, "type": "markdown", "linesLength": 13, "startIndex": 20, "lines": ["Notez bien une diff\u00e9rence importante avec l'exercice pr\u00e9c\u00e9dent\u00a0: cette fois **il n'y a plus correspondance** entre les bateaux rapport\u00e9s dans les donn\u00e9es \u00e9tendues et abr\u00e9g\u00e9es.\n", "\n", "Le but de l'exercice est pr\u00e9cis\u00e9ment d'\u00e9tudier la diff\u00e9rence, et pour cela on vous demande d'\u00e9crire une fonction\n", "\n", "```python\n", "    diff(extended, abbreviated)\n", "```\n", "\n", "qui retourne un tuple \u00e0 trois \u00e9l\u00e9ments\u00a0:\n", "\n", "* l'ensemble (`set`) des **noms** des bateaux pr\u00e9sents dans `extended` mais pas dans `abbreviated`\u00a0;\n", "* l'ensemble des **noms** des bateaux pr\u00e9sents dans `extended` et dans `abbreviated`\u00a0;\n", "* l'ensemble des **id** des bateaux pr\u00e9sents dans `abbreviated` mais pas dans `extended` (par construction, les donn\u00e9es ne nous permettent pas d'obtenir les noms de ces bateaux)."]}, {"block": 14, "type": "code", "linesLength": 19, "startIndex": 33, "lines": ["# le r\u00e9sultat attendu\n", "result = exo_diff.resultat(extended, abbreviated)\n", "\n", "# combien de bateaux sont concern\u00e9s\n", "def show_result(extended, abbreviated, result):\n", "    \"\"\"\n", "    Affiche divers d\u00e9comptes sur les arguments\n", "    en entr\u00e9e et en sortie de diff\n", "    \"\"\"\n", "    print(10*'-', \"Les entr\u00e9es\")\n", "    print(f\"Dans extended: {len(extended)} entr\u00e9es\")\n", "    print(f\"Dans abbreviated: {len(abbreviated)} entr\u00e9es\")\n", "    print(10*'-', \"Le r\u00e9sultat du diff\")\n", "    extended_only, both, abbreviated_only = result\n", "    print(f\"Dans extended mais pas dans abbreviated {len(extended_only)}\")\n", "    print(f\"Dans les deux {len(both)}\")\n", "    print(f\"Dans abbreviated mais pas dans extended {len(abbreviated_only)}\")\n", "\n", "show_result(extended, abbreviated, result)"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 52, "lines": ["### Votre code"]}, {"block": 16, "type": "code", "linesLength": 2, "startIndex": 53, "lines": ["def diff(extended, abbreviated):\n", "    \"<votre_code>\""]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 55, "lines": ["### Validation"]}, {"block": 18, "type": "code", "linesLength": 1, "startIndex": 56, "lines": ["exo_diff.correction(diff, extended, abbreviated)"]}, {"block": 19, "type": "markdown", "linesLength": 1, "startIndex": 57, "lines": ["### Des fichiers de donn\u00e9es plus r\u00e9alistes"]}, {"block": 20, "type": "markdown", "linesLength": 6, "startIndex": 58, "lines": ["Comme pour l'exercice pr\u00e9c\u00e9dent, les donn\u00e9es fournies ici sont tr\u00e8s simplistes\u00a0; vous pouvez, si vous le voulez, essayer votre code avec des donn\u00e9es (un peu) plus r\u00e9alistes en chargeant des fichiers de donn\u00e9es plus complets\u00a0:\n", "\n", "* [data/marine-e2-ext.json](data/marine-e2-ext.json)\n", "* [data/marine-e2-abb.json](data/marine-e2-abb.json)\n", "\n", "Ce qui donnerait en Python\u00a0:"]}, {"block": 21, "type": "code", "linesLength": 8, "startIndex": 64, "lines": ["# load data from files\n", "import json\n", "\n", "with open(\"data/marine-e2-ext.json\", encoding=\"utf-8\") as feed:\n", "    extended_full = json.load(feed)\n", "\n", "with open(\"data/marine-e2-abb.json\", encoding=\"utf-8\") as feed:\n", "    abbreviated_full = json.load(feed)"]}, {"block": 22, "type": "code", "linesLength": 7, "startIndex": 72, "lines": ["# le r\u00e9sultat de votre fonction sur des donn\u00e9es plus vastes\n", "# attention, show_result fait des hypoth\u00e8ses sur le type de votre r\u00e9sultat\n", "# aussi si vous essayez d'ex\u00e9cuter ceci avec comme fonction diff\n", "# la version vide qui est dans le notebook original\n", "# cela peut provoquer une exception\n", "diff_full = diff(extended_full, abbreviated_full)\n", "show_result(extended_full, abbreviated_full, diff_full)"]}, {"block": 23, "type": "markdown", "linesLength": 4, "startIndex": 79, "lines": ["Je signale enfin \u00e0 propos de ces donn\u00e9es plus compl\u00e8tes que\u00a0:\n", "\n", "* on a supprim\u00e9 les entr\u00e9es correspondant \u00e0 des bateaux diff\u00e9rents mais de m\u00eame nom\u00a0; cette situation peut arriver dans la r\u00e9alit\u00e9 (c'est pourquoi d'ailleurs les bateaux ont un *id*) mais ici ce n'est pas le cas\u00a0;\n", "* il se peut par contre qu'un m\u00eame bateau fasse l'objet de plusieurs mesures dans `extended` et/ou dans `abbreviated`."]}]