[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat &amp; Arnaud Legout&nbsp;<img src=\"media/both-logos-small-alpha.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Programmation asynchrone"]}, {"block": 2, "type": "markdown", "linesLength": 4, "startIndex": 2, "lines": ["# Typologie d'applications\n", "\n", "* CPU-intensive\n", "* IO-intensive"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 6, "lines": ["# Dialogue avec un serveur"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 7, "lines": ["![d\u00e9lais dans les traitements](w8-s1-av-fig1.png) "]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 8, "lines": ["# Deux serveurs en s\u00e9quence"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["![d\u00e9lais dans les traitements](w8-s1-av-fig2.png) "]}, {"block": 7, "type": "markdown", "linesLength": 3, "startIndex": 10, "lines": ["# Processus simple\n", "\n", "![single-thread](w8-s1-av-fig3.png)"]}, {"block": 8, "type": "markdown", "linesLength": 3, "startIndex": 13, "lines": ["# Processus multi-thread\n", "\n", "![multi-thread](w8-s1-av-fig4.png)"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 16, "lines": ["# Multi-thread"]}, {"block": 10, "type": "markdown", "linesLength": 3, "startIndex": 17, "lines": ["### Avantages\n", "* facile d'acc\u00e8s \n", "* disponible en python avec [`import threading`](https://docs.python.org/3/library/threading.html#module-threading)"]}, {"block": 11, "type": "markdown", "linesLength": 2, "startIndex": 20, "lines": ["### Inconv\u00e9nients\n", "* utilisation **tr\u00e8s** d\u00e9licate"]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 22, "lines": ["# Commutations de contexte (1)"]}, {"block": 13, "type": "markdown", "linesLength": 1, "startIndex": 23, "lines": ["### Deux pages t\u00e9l\u00e9charg\u00e9es par 2 threads diff\u00e9rents"]}, {"block": 14, "type": "markdown", "linesLength": 1, "startIndex": 24, "lines": ["![2 threads](w8-s1-av-fig5.png) "]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 25, "lines": ["# Commutations de contexte (2)"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 26, "lines": ["![zoom](w8-s1-av-fig6.png) "]}, {"block": 17, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["# callbacks"]}, {"block": 18, "type": "markdown", "linesLength": 2, "startIndex": 28, "lines": ["* associer \u00e0 un \u00e9v\u00e9nement\n", "* une fonction \u00e0 ex\u00e9cuter"]}, {"block": 19, "type": "markdown", "linesLength": 2, "startIndex": 30, "lines": ["* induit un d\u00e9coupage du code en petits morceaux\n", "* logique difficile \u00e0 suivre"]}, {"block": 20, "type": "markdown", "linesLength": 1, "startIndex": 32, "lines": ["# `asyncio` "]}, {"block": 21, "type": "markdown", "linesLength": 6, "startIndex": 33, "lines": ["* notion de **coroutines**\n", "* qui s'ex\u00e9cutent en parall\u00e8le\n", "* mais dans **un seul thread**\n", "* avec du code **lisible**\n", "* en donnant du contr\u00f4le sur les changements de contexte\n", "* et sans besoin de saucissonner son code en callbacks"]}, {"block": 22, "type": "markdown", "linesLength": 1, "startIndex": 39, "lines": ["# callbacks"]}, {"block": 23, "type": "markdown", "linesLength": 11, "startIndex": 40, "lines": ["```\n", "function pong_handler(client) {\n", "    client.on('data', function (data) {\n", "        client.on('data_written', function () {\n", "            client.close()\n", "        });\n", "        client.write(data)\n", "        client.flush()\n", "    });\n", "}\n", "```"]}, {"block": 24, "type": "markdown", "linesLength": 8, "startIndex": 51, "lines": ["```\n", "async function pong_handler()\n", "{\n", "    client.write(await client.read())\n", "    await client.flush()\n", "    client.close()\n", "}\n", "```"]}, {"block": 25, "type": "markdown", "linesLength": 3, "startIndex": 59, "lines": ["<span style=\"font-size:smaller;\">\n", "Exemple tir\u00e9 de https://mdk.fr/blog/python-coroutines-with-async-and-await.html\n", "</span>"]}, {"block": 26, "type": "markdown", "linesLength": 1, "startIndex": 62, "lines": ["![avec asyncio](w8-s1-av-fig7.png)"]}]