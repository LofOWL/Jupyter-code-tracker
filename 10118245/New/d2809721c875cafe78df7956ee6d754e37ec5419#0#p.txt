[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["<span style=\"float:left;\">Licence CC BY-NC-ND</span><span style=\"float:right;\">Thierry Parmentelat&nbsp;<img src=\"../media/inria-25.png\" style=\"display:inline\"></span><br/>"]}, {"block": 1, "type": "markdown", "linesLength": 1, "startIndex": 1, "lines": ["# Note on the environment"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 2, "lines": ["See `runserver.sh` so that this example notebook has its `PYTHONPATH` set up properly in a standalone jupyter run."]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 3, "lines": ["# A sample exercice with functions"]}, {"block": 4, "type": "markdown", "linesLength": 1, "startIndex": 4, "lines": ["Let us start with a simple exercise that involves a basic one-argument function."]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 5, "lines": ["## Explain the problem"]}, {"block": 6, "type": "code", "linesLength": 3, "startIndex": 6, "lines": ["# you need to evaluate this cell\n", "# for the notebook to work properly\n", "from exercises.percentages import exo_percentages"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 9, "lines": ["You are of course expected to describe in plain text what the exercise is all about. In our case we want the student to write a function that expects a string containing only uppercase letters among `ACGT`, and return a dictionary containing their respective percentages."]}, {"block": 8, "type": "code", "linesLength": 2, "startIndex": 10, "lines": ["# an example of the expected outcome of your (correct) function\n", "exo_percentages.exemple()"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 12, "lines": ["## Tell the student to write their own code"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 13, "lines": ["As a rule of thumb, it is advisable to provide something that is syntaxically correct. This way it won't break complete evaluation of the notebook, which can come in handy when doublecheking."]}, {"block": 11, "type": "code", "linesLength": 3, "startIndex": 14, "lines": ["# write your own implementation here\n", "def percentages(adn):\n", "    return \"your-code-here\""]}, {"block": 12, "type": "markdown", "linesLength": 1, "startIndex": 17, "lines": ["## Auto correction"]}, {"block": 13, "type": "markdown", "linesLength": 4, "startIndex": 18, "lines": ["At this point you just need to insert a cell like the following, and students just need to evaluate\n", " * their code\n", " * the correction cell\n", "as many times as they want until it is all green."]}, {"block": 14, "type": "code", "linesLength": 2, "startIndex": 22, "lines": ["# validez votre code en \u00e9valuant cette cellule\n", "exo_percentages.correction(percentages)"]}, {"block": 15, "type": "markdown", "linesLength": 1, "startIndex": 24, "lines": ["# Under the hood"]}, {"block": 16, "type": "markdown", "linesLength": 1, "startIndex": 25, "lines": ["Below is what the python code in `percentages.py` looks like; once comments are trimmed down, this amounts to about a dozen lines&nbsp;:"]}, {"block": 17, "type": "code", "linesLength": 1, "startIndex": 26, "lines": ["%cat ../exercises/percentages.py"]}]