[{"block": 0, "type": "markdown", "linesLength": 8, "startIndex": 0, "lines": ["Je simule un exercice d\u00e9bile, on demande aux \u00e9tudiants d'\u00e9crire une classe `Fifo`\n", "    \n", "qui impl\u00e9mente \n", "* un constructeur `Fifo()`\n", "* une m\u00e9thode `incoming(obj)`\n", "* une m\u00e9thode `outgoing()`\n", "\n", "qui rende simplement les objets dans le m\u00eame ordre o\u00f9 ils ont \u00e9t\u00e9 rang\u00e9s"]}, {"block": 1, "type": "markdown", "linesLength": 3, "startIndex": 8, "lines": ["L'\u00e9tudiant est invit\u00e9 \u00e0 \u00e9crire son code dans la class `Fifo`;\n", "\n", "On lui propose en arrivant une cellule vide comme ceci"]}, {"block": 2, "type": "code", "linesLength": 7, "startIndex": 11, "lines": ["class Fifo(object):\n", "    def __init__(self):\n", "        pass\n", "    def incoming(self, obj):\n", "        pass\n", "    def outgoing(self):\n", "        pass"]}, {"block": 3, "type": "markdown", "linesLength": 1, "startIndex": 18, "lines": ["Il la modifie, imaginons que \u00e7a donne cela"]}, {"block": 4, "type": "code", "linesLength": 8, "startIndex": 19, "lines": ["# cette classe est cass\u00e9e expr\u00e8s ...\n", "class Fifo(object):\n", "    def __init__(self):\n", "        self.items = []\n", "    def incoming(self, obj):\n", "        self.items.append(obj)\n", "    def outgoing(self):\n", "        return self.items.pop()"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 27, "lines": ["Et voici la cellule pour corriger "]}, {"block": 6, "type": "code", "linesLength": 2, "startIndex": 28, "lines": ["from corrections.w5_fifo import exo_fifo\n", "exo_fifo.correction(Fifo)"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 30, "lines": ["Voici enfin comment la correction est \u00e9crite"]}, {"block": 8, "type": "code", "linesLength": 3, "startIndex": 31, "lines": ["from modtools import show_module\n", "import corrections.w5_fifo\n", "show_module(corrections.w5_fifo)"]}, {"block": 9, "type": "markdown", "linesLength": 4, "startIndex": 34, "lines": ["Remarquez \n", "Les lignes depuis `# @BEG@ 0 0 curve` \u00e0 `# @END@` servent \u00e0 l'outil qui extrait les corrig\u00e9s. \n", "\n", "Voir `tools/corriges.py`\n"]}, {"block": 10, "type": "markdown", "linesLength": 1, "startIndex": 38, "lines": ["*********"]}]