[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["# City Level Data\n", "\n", "https://nccd.cdc.gov/500_Cities/rdPage.aspx?rdReport=DPH_500_Cities.ComparisonReport&Locations=1759000,2507000&rdRequestForwarding=Form"]}, {"block": 1, "type": "code", "linesLength": 3, "startIndex": 3, "lines": ["import numpy as np\n", "import matplotlib.pyplot as plt\n", "%matplotlib inline"]}, {"block": 2, "type": "code", "linesLength": 17, "startIndex": 6, "lines": ["b_p = 0.164\n", "b_ci = [0.161, 0.166]\n", "b_adults = 472582\n", "b_smokers = b_p * b_adults\n", "\n", "p_p = 0.199\n", "p_ci = [0.194, 0.203]\n", "p_adults = 83925\n", "p_smokers = p_p * p_adults\n", "\n", "z_95 = 1.96\n", "\n", "b_sigma = ((b_ci[1] - b_p) / z_95) * 1\n", "p_sigma = ((p_ci[1] - p_p) / z_95) * 1\n", "\n", "print(f'Standard deviation for Boston: {b_sigma}')\n", "print(f'Standard deviation for Peoria: {p_sigma}')"]}, {"block": 3, "type": "markdown", "linesLength": 3, "startIndex": 23, "lines": ["## Difference Between Two Proportions\n", "\n", "Assume 10% of adults in each city surveyed."]}, {"block": 4, "type": "code", "linesLength": 13, "startIndex": 26, "lines": ["# Standard errors individual\n", "b_se = np.sqrt((b_p * (1 - b_p)) / (0.1 * b_adults))\n", "p_se = np.sqrt((p_p * (1 - p_p)) / (0.1 * p_adults))\n", "\n", "# Standard error combined\n", "se_diff = np.sqrt(np.square(b_se) + np.square(p_se))\n", "\n", "# Upper confidence bound for difference (two-tailed)\n", "uci = (p_p - b_p) + z_95 * se_diff\n", "# Lower confidence bound\n", "lci = (p_p - b_p) - z_95 * se_diff\n", "\n", "print(f'The 95% confidence interval for difference between smoking rates is from {round(100 * lci, 4)}% to {round(100 * uci, 4)}%')"]}, {"block": 5, "type": "markdown", "linesLength": 1, "startIndex": 39, "lines": ["# Distributions"]}, {"block": 6, "type": "code", "linesLength": 6, "startIndex": 40, "lines": ["# Sample distributions \n", "p_dist = np.random.normal(loc = p_p, scale = p_sigma, size = 100000)\n", "b_dist = np.random.normal(loc = b_p, scale = b_sigma, size = 100000)\n", "# Names\n", "b = np.repeat('boston', repeats = len(b_dist))\n", "p = np.repeat('peoria', repeats = len(p_dist))"]}, {"block": 7, "type": "markdown", "linesLength": 1, "startIndex": 46, "lines": ["Confidence interval for Boston."]}, {"block": 8, "type": "code", "linesLength": 3, "startIndex": 47, "lines": ["from scipy import stats\n", "b_ci = stats.norm.interval(0.95, loc = b_p, scale = b_sigma)\n", "b_ci"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 50, "lines": ["Confidence interval for Peoria"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 51, "lines": ["p_ci = stats.norm.interval(0.95, loc = p_p, scale = p_sigma)\n", "p_ci"]}, {"block": 11, "type": "code", "linesLength": 4, "startIndex": 53, "lines": ["import pandas as pd\n", "dist_df = pd.DataFrame({'proportion': list(b_dist) + list(p_dist)})\n", "dist_df['city'] = list(b) + list(p)\n", "dist_df.groupby('city').describe()"]}, {"block": 12, "type": "code", "linesLength": 2, "startIndex": 57, "lines": ["import matplotlib\n", "default_c = plt.rcParams['axes.prop_cycle'].by_key()['color']\n"]}, {"block": 13, "type": "code", "linesLength": 10, "startIndex": 59, "lines": ["import seaborn as sns\n", "plt.figure(figsize = (10, 8))\n", "p1 = sns.kdeplot(p_dist, label = 'Peoria')\n", "p2 = sns.kdeplot(b_dist, label = 'Boston')\n", "plt.legend(); plt.title('Distribution of Percentages');\n", "\n", "# Means and confidence intervals\n", "plt.vlines([b_p, p_p], ymin = 0, ymax = 400, colors = ['#D4CA3A', '#00BEFF']);\n", "plt.hlines([25], xmin = b_ci[0], xmax = b_ci[1], colors = ['#D4CA3A'], linestyles = '-')\n", "plt.hlines([25], xmin = p_ci[0], xmax = p_ci[1], colors = ['#00BEFF'], linestyles = '-');"]}, {"block": 14, "type": "code", "linesLength": 5, "startIndex": 69, "lines": ["plt.rcParams['font.size'] = 32\n", "plt.figure(figsize = (20, 8))\n", "sns.boxplot(x = 'proportion', y = 'city', data = dist_df);\n", "plt.xlabel('Proportion of Smokers');\n", "plt.title('Boxplot of Smoking Rates');"]}, {"block": 15, "type": "code", "linesLength": 4, "startIndex": 74, "lines": ["plt.figure(figsize = (10, 8))\n", "sns.violinplot(y = 'proportion', x = 'city', data = dist_df);\n", "plt.ylabel('Percentage of Smokers');\n", "plt.title('Violinplot of Smoking Rates');"]}, {"block": 16, "type": "markdown", "linesLength": 15, "startIndex": 78, "lines": ["# Costs\n", "\n", "* Economic Costs: https://www.cdc.gov/tobacco/data_statistics/fact_sheets/economics/econ_facts/index.htm\n", "     * $$326 billion = \\$170 billion for direct medical care and \\$156 billion in lost productivity\n", "     * Number of smokers = 37.8 million: https://www.cdc.gov/tobacco/data_statistics/fact_sheets/adult_data/cig_smoking/index.htm\n", "     * Cost per smoker = \\$326 billion / 37.8 million = \\$8624\n", "* Taxes: \n", "    * \\$1.98 / pack in Illinois: https://www.salestaxhandbook.com/illinois/tobacco\n", "    * \\$3.51 / pack in Massachusetts: https://www.mass.gov/info-details/dor-cigarette-and-tobacco-excise-tax\n", "    * Assume 1 pack / smoker / day\n", "* Number of smokers = number of adults * smoking rate\n", "     * Boston number of adults = 472582: https://www.bumc.bu.edu/inspir/files/HTML/Boston%20Population%20and%20Demographics.htm\n", "     * Peoria number of adults = 83925: https://www.infoplease.com/us/illinois/demographic-statistics-61\n", "     * Boston smoking rate = 0.164\n", "     * Peoria smoking rate = 0.199"]}, {"block": 17, "type": "code", "linesLength": 4, "startIndex": 93, "lines": ["total_cost = 326_000_000_000\n", "n_smokers = 37_800_000\n", "cost_per_smoker = total_cost / n_smokers\n", "cost_per_smoker"]}, {"block": 18, "type": "code", "linesLength": 5, "startIndex": 97, "lines": ["n_packs = 1\n", "days = 365 \n", "\n", "p_packtax = 1.98\n", "b_packtax = 3.51"]}, {"block": 19, "type": "code", "linesLength": 5, "startIndex": 102, "lines": ["p_revenue = p_smokers * p_packtax * n_packs * days\n", "b_revenue = b_smokers * b_packtax * n_packs * days\n", "\n", "print(f'Tax revenue in Peoria from smoking: ${p_revenue:,.2f}.')\n", "print(f'Tax revenue in Boston from smoking: ${b_revenue:,.2f}.')"]}, {"block": 20, "type": "code", "linesLength": 5, "startIndex": 107, "lines": ["p_cost = cost_per_smoker * p_smokers\n", "b_cost = cost_per_smoker * b_smokers\n", "\n", "print(f'Cost to Peoria from smoking: ${p_cost:,.2f}.')\n", "print(f'Cost to Boston from smoking: ${b_cost:,.2f}.')"]}, {"block": 21, "type": "markdown", "linesLength": 5, "startIndex": 112, "lines": ["# Break Even Point for Tax Per Pack\n", "\n", "We need to find the point at which cost == revenue\n", "\n", "$$\\text{tax_required} = \\frac{\\text{cost_per_smoker}}{\\text{days} * \\text{n_packs}}$$"]}, {"block": 22, "type": "code", "linesLength": 3, "startIndex": 117, "lines": ["tax_required = cost_per_smoker / (days * n_packs)\n", "\n", "print(f'Breaking even requires a tax of ${tax_required:,.2f} per pack.')"]}, {"block": 23, "type": "markdown", "linesLength": 1, "startIndex": 120, "lines": ["# Plots"]}, {"block": 24, "type": "code", "linesLength": 1, "startIndex": 121, "lines": ["fmt = plt.FormatStrFormatter(r'$%,.2f')"]}, {"block": 25, "type": "code", "linesLength": 13, "startIndex": 122, "lines": ["data = pd.DataFrame({'value': [b_cost, p_cost, b_revenue, p_revenue],\n", "                     'metric': ['cost', 'cost', 'revenue', 'revenue'],\n", "                     'city': ['Boston', 'Peoria', 'Boston', 'Peoria']})\n", "\n", "plt.figure(figsize = (10, 8))\n", "\n", "ax = sns.barplot(x = 'city', y = 'value', hue = 'metric', palette= {'cost': 'red', 'revenue': 'black'}, \n", "                 data = data)\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "plt.legend(prop = {'size': 20})\n", "plt.title('Smoking Cost vs Revenue')\n", "plt.ylabel(None)\n", "ax.yaxis.set_ticklabels(tick_labels);"]}, {"block": 26, "type": "code", "linesLength": 15, "startIndex": 135, "lines": ["tax =  np.arange(0, 25, 0.1)\n", "revenue = [b_smokers * n_packs * days * x for x in tax]\n", "cost = [b_smokers * cost_per_smoker for _ in range(len(revenue))]\n", "\n", "plt.figure(figsize = (10, 8))\n", "plt.plot(tax, revenue, label = 'revenue', color = 'black')\n", "plt.axhline(y = cost[0], label = 'cost', color = 'red')\n", "plt.plot(tax_required, cost[0], marker = '*', ms = 50, color = 'gold', label = 'break even');\n", "plt.legend(prop = {'size': 18})\n", "ax = plt.gca()\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "ax.yaxis.set_ticklabels(tick_labels);\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "plt.xlabel(\"Tax Per Pack\"); plt.ylabel(None); plt.title('Cost and Revenue vs Tax with Constant Smoking Rate');\n"]}, {"block": 27, "type": "code", "linesLength": 7, "startIndex": 150, "lines": ["decline = (p_p - b_p) / (p_packtax - b_packtax)\n", "rb_smokers = [b_adults * (b_p + (decline * (x - b_packtax))) for x in tax]\n", "rb_smokers = rb_smokers[:np.argmax(np.where(np.array(rb_smokers) > 0))]\n", "rtax =  tax[:len(rb_smokers)]\n", "\n", "rrevenue = [rb_smokers[i] * n_packs * days * x for i, x in enumerate(rtax)]\n", "rcost = [rb_smokers[i] * cost_per_smoker for i in range(len(rrevenue))]"]}, {"block": 28, "type": "code", "linesLength": 6, "startIndex": 157, "lines": ["plt.figure(figsize = (8, 6))\n", "plt.plot(rtax, rb_smokers, label = 'Number of Smokers')\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "plt.xlabel('Tax Per Pack'); plt.ylabel('Number of Smokers');\n", "plt.title('Number of Smokers vs Tax Per Pack');"]}, {"block": 29, "type": "code", "linesLength": 13, "startIndex": 163, "lines": ["plt.figure(figsize = (10, 8))\n", "\n", "plt.plot(rtax, rrevenue, label = 'Revenue', color = 'black')\n", "plt.plot(rtax, rcost, label = 'Cost', color = 'red')\n", "plt.legend(prop = {'size': 18})\n", "ax = plt.gca()\n", "tick_labels = [f'${x:,.2f}' for x in ax.yaxis.get_ticklocs()]\n", "ax.yaxis.set_ticklabels(tick_labels);\n", "tick_labels = [f'${x:,.2f}' for x in ax.xaxis.get_ticklocs()]\n", "ax.xaxis.set_ticklabels(tick_labels);\n", "\n", "plt.ylabel(None); plt.xlabel('Tax Per Pack');\n", "plt.title('Revenue and Cost Versus Tax Per Pack with Declining Smoking Rate');"]}, {"block": 30, "type": "code", "linesLength": 0, "startIndex": 176, "lines": []}]