[{"block": 0, "type": "markdown", "linesLength": 1, "startIndex": 0, "lines": ["## top"]}, {"block": 1, "type": "code", "linesLength": 2, "startIndex": 1, "lines": ["from fastai import *        # Quick accesss to most common functionality\n", "from fastai.text import *   # Quick accesss to NLP functionality"]}, {"block": 2, "type": "code", "linesLength": 2, "startIndex": 3, "lines": ["path = untar_data(URLs.IMDB)\n", "path.ls()"]}, {"block": 3, "type": "code", "linesLength": 3, "startIndex": 5, "lines": ["sd = (TextFilesList.from_folder(path)\n", "             #grap all the text files in path\n", "            .split_by_folder(valid='test'))"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 8, "lines": ["data_cls = sd.label_from_folder(classes=['neg', 'pos'])"]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 9, "lines": ["len(data_cls.valid)"]}, {"block": 6, "type": "markdown", "linesLength": 1, "startIndex": 10, "lines": ["## start"]}, {"block": 7, "type": "code", "linesLength": 2, "startIndex": 11, "lines": ["path = untar_data(URLs.IMDB_SAMPLE)\n", "path"]}, {"block": 8, "type": "code", "linesLength": 4, "startIndex": 13, "lines": ["data_lm = (TextList.from_csv(path, 'texts.csv', create_func=None, col='text')#, processor=TextProcessor())\n", "                   .random_split_by_pct()\n", "                   .label_for_lm()\n", "                   .databunch())"]}, {"block": 9, "type": "code", "linesLength": 1, "startIndex": 17, "lines": ["data_lm.show_batch()"]}, {"block": 10, "type": "code", "linesLength": 1, "startIndex": 18, "lines": ["len(data_lm.train_ds.vocab.itos), len(data_lm.valid_ds.vocab.itos)"]}, {"block": 11, "type": "code", "linesLength": 4, "startIndex": 19, "lines": ["data_clas = (TextList.from_csv(path, 'texts.csv', create_func=None, col='text', vocab=data_lm.vocab)\n", "                     .random_split_by_pct()\n", "                     .label_from_df(cols=0)\n", "                     .databunch())"]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 23, "lines": ["data_clas.show_batch()"]}, {"block": 13, "type": "code", "linesLength": 1, "startIndex": 24, "lines": ["learn = language_model_learner(data_lm, pretrained_model=URLs.WT103)"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 25, "lines": ["learn.predict('Jeremy Howard is', 4)"]}, {"block": 15, "type": "code", "linesLength": 0, "startIndex": 26, "lines": []}]