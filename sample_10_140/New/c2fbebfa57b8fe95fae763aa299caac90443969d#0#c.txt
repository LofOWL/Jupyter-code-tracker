[{"block": 0, "type": "markdown", "linesLength": 37, "startIndex": 0, "lines": ["# PmagPy Command Line Version\n", "\n", "This notebook demonstrates the use of **PmagPy** command line scripts in parallel with the PmagPy cookbook http://earthref.org/PmagPy/cookbook.   For more detailed descriptions of programs and examples of how to use them in a more sophisticated way from within a notebook, see the **\\_PmagPy\\_nb** version. \n", "\n", "\n", "### What is **PmagPy**?  \n", "\n", "**PmagPy** is a software package for analyzing paleomagnetic and rock magnetic data using Python. If you need to install Python and PmagPy locally, follow these instructions: https://earthref.org/PmagPy/cookbook/#getting_python. This notebook demonstrates the use of **PmagPy** functions on the command line. For examples of how to use PmagPy scripts in a Python environment, see the static version of [**PmagPy.ipynb**](http://pmagpy.github.io/PmagPy.html) or if you are running jupyter notebook, you can open it locally.\n", "\n", "### What are paleomagnetism and rock magnetism?  \n", "\n", "For information on the science of paleomagnetism and rock magnetism, see textbook at: https://earthref.org/MagIC/books/Tauxe/Essentials/\n", "\n", "\n", "### Running this notebook\n", "- To use this notebook (after installing Python and PmagPy), open your command line and type the following (exactly):\n", "\n", "`cd Desktop`\n", "\n", "`move_data_files.py`\n", "\n", "`cd PmagPy-data`\n", "\n", "`jupyter notebook`\n", "\n", "- This will open a browser window, and you can then click on the notebook you want to run\n", "\n", "\n", "### Get started\n", "- This notebook  is meant to function from within the PmagPy-data directory and calls are relative to that.   \n", "- To specify a working directory, many programs have the hidden command line argument -WD.  \n", "\n", "\n", "- Run the code block below (click on the cell and then click 'Run'):\n", "\n", "\n", "\n"]}, {"block": 1, "type": "code", "linesLength": 7, "startIndex": 37, "lines": ["import os\n", "import glob\n", "from IPython.display import Image\n", "import matplotlib as plt\n", "from pmagpy import pmag\n", "basemap_present, Basemap = pmag.import_basemap()\n", "from pmag_env import set_env"]}, {"block": 2, "type": "markdown", "linesLength": 1, "startIndex": 44, "lines": ["# Help"]}, {"block": 3, "type": "markdown", "linesLength": 15, "startIndex": 45, "lines": ["You can get more details about any program on your command line or in a notebook.  There are many options available for each program, all of which are listed in each program's help message.  To call up the help message, you just need to use the command line argument `-h`.  See the examples below:\n", "\n", "To get help within the notebook environment:\n", "\n", "`! program_name.py -h`\n", "\n", "To get help on the command line:\n", "\n", "`program_name.py -h`\n", "\n", "If you are running Windows, you may need to run:\n", "\n", "`program_name -h`\n", "\n", "Here's an example of calling up the help message for program **angle.py**:"]}, {"block": 4, "type": "code", "linesLength": 1, "startIndex": 60, "lines": ["!angle.py -h"]}, {"block": 5, "type": "markdown", "linesLength": 117, "startIndex": 61, "lines": ["## Guide to PmagPy\n", "\n", "- the functions in this notebook are listed alphabetically so here is a handy guide by function:\n", "- Calculations: \n", "    - [angle.py](#angle.py) : calculates the angle between two vectors\n", "    - [apwp.py](#apwp.py) : returns predicted paleolatitudes, directions and pole latitude/longitude from apparent polar wander paths of Besse and Courtillot (2002).\n", "    - [b_vdm.py](#b_vdm.py) : converts B (in microT) and (magnetic) latitude to V(A)DM (see [vdm_b.py](#vdm_b.py))\n", "    - [bootams.py](#bootams.py) : calculates bootstrap statistics for tensor data\n", "    - [cart_dir.py](#cart_dir.py) : converts cartesian coordinates (x,y,z) to declination, inclination, intensity (see [dir_cart.py](#dir_cart.py))\n", "    - [di_eq.py](#di_eq.py) : maps declination, inclinatitions to X,Y for plotting in equal area projections\n", "    - [di_geo.py](#di_geo.py) : rotates declination, inclination in specimen coordinates to geographic\n", "    - [di_rot.py](#di_rot.py) : rotates directions to a  coordinate system with D,I as center\n", "    - [di_tilt.py](#di_tilt.py) : rotates directions to stratigraphic coordinates\n", "    - [di_vgp.py](#di_vgp.py) : converts direction to Virtual Geomagnetic Pole (see [vgp_di.py](#vgp_di.py))\n", "    - [dia_vgp.py](#dia_vgp.py) : converts direction and $\\alpha_{95}$ to Virtual Geomagnetic Pole and dp,dm\n", "    - [dipole_pinc.py](#dipole_pinc.py) : calculates inclination given latitude assuming geocentric axial dipole\n", "    - [dipole_plat.py](#dipole_plat.py) : calculates latitude given inclination assuming geocentric axial dipole\n", "    - [dir_cart.py](#dir_cart.py) : converts declination, inclination, intensity to cartesian coordinates (see [cart_dir.py](#cart_dir.py))\n", "    - [eigs_s.py](#eigs_s.py) : converts eigenparameters to equivalent 6 element tensor (see [s_eigs.py](#s_eigs.py))\n", "    - [eq_di.py](#eq_di.py) : takes X,Y from equal area projection (e.g., from digitized coordinates) and  converts to declination, inclination\n", "    - [fcalc.py](#fcalc.py) : returns the value from an F table, given the degrees of freedom.\n", "    - [fisher.py](#fisher.py) : generates sets of directions drawn from Fisher distributions with vertical true mean\n", "    - [fishrot.py](#fishrot.py) : generates sets of directions drawn from Fisher distributions with arbitrary true mean\n", "    - [gaussian.py](#gaussian.py) : generates data drawn from a normal distribution\n", "    - [gobing.py](#gobing.py) : calculates Bingham statistics from a set of directions\n", "    - [gofish.py](#gofish.py) : calculates Fisher statistics from a set of directions\n", "    - [gokent.py](#gokent.py) : calculates Kent statistics from a set of directions\n", "    - [goprinc.py](#goprinc.py) : calculates principal directions statistics\n", "    - [igrf.py](#igrf.py) : calculates geomagnetic field vectors for location, age given a field model (e.g., IGRF)\n", "    - [incfish.py](#incfish.py) : estimates the true mean inclination from inclination only data\n", "    - [pca.py](#pca.py) : calculates the best-fit line or plane for demagnetization data and associated statistics\n", "    - [pt_rot.py](#pt_rot.py) : rotates point given finite rotation pole\n", "    - [scalc.py](#scalc.py) : calculates  VGP scatter\n", "    - [s_eigs.py](#s_eigs.py) : takes a 6 element tensor and calculates eigen parameters (see [eigs_s.py](#eigs_s.py))\n", "    - [s_geo.py](#s_geo.py) : rotates 6 element tensors to geographic coordinates\n", "    - [s_hext.py](#s_hext.py) : calculates Hext statistics from 6 element tensors\n", "    - [s_tilt.py](#s_tilt.py) : rotates 6 element tensors to stratigraphic coordinates\n", "    - [squish.py](#squish.py): flattens inclination data given flattening factor (see [unsquish.py](#unsquish.py))\n", "    - [sundec.py](#sundec.py) : calulates direction to sun for location, date, time and sun azimuth\n", "    - [tk03.py](#tk03.py) : generates sets of directions consistent with the TK03 field model\n", "    - [uniform.py](#uniform.py) : generates sets of uniformly distributed directions\n", "    - [unsquish.py](#unsquish.py) : unsquishes flattened inclinations, given flattening factor (see [squish.py](#squish.py))\n", "    - [vector_mean](#vector_mean) : calculates vector mean for sets of vectors (declination, inclination, intensity)\n", "    - [vdm_b.py](#vdm_b.py) : calculates intensity at given location from specified virtual dipole moment (see [b_vdm.py](#b_vdm.py))\n", "    - [vgp_di.py](#vgp_di.py) : calculates direction at given location from virtual geomagnetic pole (see [di_vgp.py](#di_vgp.py))\n", "    - [watsons_f.py](#watsons_f.py) : calculates Watson's F statistic for testing for common mean\n", "    \n", "- Plots:\n", "    - [ani_depthplot.py](#ani_depthplot.py) : plots anisotropy data against depth in stratigraphic section (Xmas tree plots)\n", "    - [aniso_magic.py](#aniso_magic.py) : makes plots of anisotropy data and bootstrapped confidences \n", "    - [biplot_magic.py](#biplot_magic.py) : plots different columns against each other in MagIC formatted data files\n", "    - [chi_magic.py](#chi_magic.py) : plots magnetic susceptibility data in MagIC format as function of field, frequency or temperature\n", "    - [common_mean.py](#common_mean.py) : graphical approach to testing two sets of directions for common mean using bootstrap\n", "    - [core_depthplot.py](#core_depthplot.py) : plots MagIC formatted data \n", "    - [curie.py](#curie.py) : makes plots of Curie Temperature data and provides estimates for Tc\n", "    - [dayplot_magic.py](#dayplot_magic.py) : makes Day et al. (1977) and other plots with hysteresis statistics\n", "    - [dmag_magic.py](#dmag_magic.py) : plots remanence against demagnetization step for MagIC formatted files\n", "    - [eqarea.py](#eqarea.py) and [eqarea_magic.py](#eqarea_magic.py) : makes equal area projections for directions\n", "    - [eqarea_ell.py](#eqarea_ell.py) : makes equal area projections for directions with specified confidence ellipses\n", "    - [find_ei.py](#find_ei.py) : finds the inclination unflattening factor that unsquishes directions to match TK03 distribution\n", "    - [fishqq.py](#fishqq.py): makes a Quantile-Quantile plot for directions against uniform and exponential distributions\n", "    - [foldtest.py](#foldtest.py) & [foldtest_magic.py](#foldtest_magic.py) : finds  tilt correction that maximizes concentration of directions, with bootstrap confidence bounds.          \n", "    - [forc_diagram.py](#forc_diagram.py): plots FORC diagrams for both conventional and irregular FORCs\n", "    - [hysteresis_magic.py](#hysteresis_magic.py) : makes plots of hysteresis data (not FORCs). \n", "    - [irm_unmix.py](#irm_unmix.py) : analyzes IRM acquisition data in terms of coercivity distributions\n", "    - [irmaq_magic.py](#irm_magic.py) : plots IRM acquistion data\n", "    - [lnp_magic.py](#lnp_magic.py) : plots lines and planes for site level data and calculates best fit mean and alpha_95\n", "    - [lowes.py](#lowes.py) : makes a plot of the Lowe's spectrum for a geomagnetic field model\n", "    - [lowrie.py](#lowrie.py) and [lowrie_magic.py](#lowrie_magic.py) : makes plots of Lowrie's (1990) 3D-IRM demagnetization experiments\n", "    - [plot_cdf.py](#plot_cdf.py) : makes a cumulative distribution plot of data\n", "    - [plotdi_a.py](#plotdi_a.py) : makes equal are plots of directions and their $\\alpha_{95}$s\n", "    - [plot_geomagia.py](#plot_geomagia.py) : makes plots from files downloaded from the  geomagia website\n", "    - [plot_magic_keys.py](#plot_magic_keys.py) : plots data from MagIC formatted data files\n", "    - [qqplot.py](#qqplot.py) : makes a Quantile-Quantile plot for data against a normal distribution\n", "    - [qqunf.py](#qqunf.py) : makes a Quantile-Quantile plot for data against a uniform distribution\n", "    - [revtest.py](#revtest.py) & [revtest_magic.py](#revtest_magic.py) : performs a bootstrap reversals test\n", "    - [thellier_magic.py](#thellier_magic.py) : makes plots of thellier-thellier data. \n", "    - [watsons_v.py](#watsons_v.py) : makes a graph for Watson's V test for common mean\n", "    - [zeq.py](#zeq.py) and [zeq_magic.py](#zeq_magic.py) : makes quicky zijderveld plots for measurement data\n", "\n", "- Maps: \n", "    - [cont_rot.py](#cont_rot.py) : makes plots of continents after rotation to specified coordinate system\n", "    - [plot_mag_map.py](#plot_mag_map.py) : makes a color contour plot of geomagnetic field models\n", "    - [plot_map_pts.py](#plot_map_pts.py) : plots points on maps\n", "    - [polemap_magic.py](#polemap_magic.py) : reads in MagIC formatted file with paleomagnetic poles and plots them\n", "    - [vgpmap_magic.py](#vgpmap_magic.py) : reads in MagIC formatted file with virtual geomagnetic poles and plots them\n", "   \n", "- Working with MagIC:\n", "    - [combine_magic.py](#combine_magic.py) : combines two MagIC formatted files of same type\n", "    - [grab_magic_key.py](#grab_magic_key.py) : prints out a single column from a MagIC format file\n", "    - [magic_select.py](#magic_select.py) : selects data from MagIC format file given conditions (e.g., method_codes contain string)\n", "    - [download_magic.py](#download_magic.py) : unpacks a contribution text file downloaded from the MagIC website\n", "    - [upload_magic.py](#upload_magic.py) : prepares a directory with a MagIC contribution for uploading to MagIC\n", "    - [Conversion scripts](#Conversion-Scripts) : convert many laboratory measurement formats to the MagIC data model 3 format\n", "        - [_2g_bin_magic.py](#_2g_bin_magic.py) : converts 2G binary files to MagIC\n", "        - [aarm_magic.py](#aarm_magic.py) : takes a MagIC formated _measurements.txt_ file with anisotropy of ARM data and calculates the tensors and stores in a MagIC formatted _specimens.txt_ file.\n", "        - [atrm_magic.py](#atrm_magic.py) : takes a MagIC formated _measurements.txt_ file with anisotropy of TRM data and calculates the tensors and stores in a MagIC formatted _specimens.txt_ file.\n", "        - [agm_magic.py](#agm_magic.py) : converts Princeton Measurements alternating gradient force magnetization (AGM) files to MagIC.\n", "        - [bgc_magic.py](#bgc_magic.py) : convert Berkeley Geochronology Center files to MagIC. \n", "        - [cit_magic.py](#cit_magic.py) : convert Cal Tech format files to MagIC.\n", "        - [generic_magic.py](#generic_magic.py) : converts generic files to MagIC. \n", "        - [huji_magic.py](#huji_magic.py) : converts Hebrew University, Jerusalem, Israel files to MagIC.\n", "        - [huji_sample_magic.py](#huji_sample_magic.py) : converts HUJI files to a MagIC format. \n", "        - [jr6_jr6_magic.py](#jr6_jr6_magic.py) : converts the AGICO JR6 spinner .jr6 files to MagIC \n", "        - [jr6_txt_magic.py](#jr6_txt_magic.py) : converts the AGICO JR6 .txt files to MagIC\n", "        - [k15_magic.py](#k15_magic.py) : converts 15 measurement anisotropy of magnetic susceptibility files to MagIC. \n", "        - [ldeo_magic.py](#ldeo_magic.py) : converts Lamont-Doherty files to MagIC.  \n", "        - [livdb_magic.py](#livdb_magic.py) : converts Liverpool files to MagIC.  \n", "        - [mst_magic.py](#mst_magic.py) : converts Curie Temperature experimental data to MagIC\n", "        - [sio_magic.py](#sio_magic.py) : converts Scripps Institution of Oceanography data files to MagIC \n", "        - [sufar4_magic.py](#sufar4_magic.py) : converts AGICO SUFAR program (ver.1.2.) ascii files to MagIC\n", "        - [tdt_magic.py](#tdt_magic.py) : converts Thellier Tool files to MagIC\n", "        - [utrecht_magic.py](#utrecht_magic.py) : converts Fort Hoofddijk, Utrecht University Robot files to MagIC\n", "        - [orientation_magic.py](#orientation_magic.py) : converts an \"orient.txt\" formatted file with field notebook information into MagIC formatted files\n", "        - [azdip_magic.py](#azdip_magic.py) : converts an \"azdip\" formatted file to a samples.txt file format\n", "- other handy scripts\n", "    - [chartmaker.py](#chartmaker.py) : script for making chart to guide IZZI lab experiment"]}, {"block": 6, "type": "markdown", "linesLength": 2, "startIndex": 178, "lines": ["## _2g_bin_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#combine_magic)"]}, {"block": 7, "type": "code", "linesLength": 1, "startIndex": 180, "lines": ["!_2g_bin_magic.py -f data_files/convert_2_magic/2G_bin_magic/mn1/mn001-1a.dat "]}, {"block": 8, "type": "markdown", "linesLength": 2, "startIndex": 181, "lines": ["## aarm_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#aarm_magic)"]}, {"block": 9, "type": "code", "linesLength": 4, "startIndex": 183, "lines": ["# with data model 3\n", "os.remove('data_files/aarm_magic/specimens.txt')\n", "!aarm_magic.py -DM 3 -WD data_files/aarm_magic/ -f new_aarm_measurements.txt\n", "!cat data_files/aarm_magic/specimens.txt | head"]}, {"block": 10, "type": "code", "linesLength": 4, "startIndex": 187, "lines": ["# with data model 2\n", "!sio_magic2.py -f data_files/aarm_magic/arm_magic_example.dat -loc Bushveld -LP AF:ANI \\\n", "    -F data_files/aarm_magic/aarm_measurements.txt -ncn 3 -ac 180 -dc 50 -1 -1\n", "!aarm_magic.py -DM 2 -f data_files/aarm_magic/aarm_measurements.txt"]}, {"block": 11, "type": "markdown", "linesLength": 2, "startIndex": 191, "lines": ["## agm_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#agm_magic)"]}, {"block": 12, "type": "code", "linesLength": 2, "startIndex": 193, "lines": ["# note: example data files are in old format\n", "!agm_magic.py -spn myspec --usr \u2018\u2018Lima Tango\u2018\u2018 -f data_files/convert_2_magic/agm_magic/agm_magic_example.agm -u cgs -old"]}, {"block": 13, "type": "markdown", "linesLength": 2, "startIndex": 195, "lines": ["## angle.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#angle)"]}, {"block": 14, "type": "code", "linesLength": 1, "startIndex": 197, "lines": ["!angle.py -f data_files/angle/angle.dat"]}, {"block": 15, "type": "markdown", "linesLength": 2, "startIndex": 198, "lines": ["## ani_depthplot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#ani_depthplot)"]}, {"block": 16, "type": "code", "linesLength": 7, "startIndex": 200, "lines": ["# OSX users with pip install should use:\n", "#!ani_depthplot_anaconda -f data_files/ani_depthplot/rmag_anisotropy.txt -fsa data_files/ani_depthplot/er_samples.txt \\\n", "#    -fb data_files/ani_depthplot/magic_measurements.txt -sav -fmt png -DM 2\n", "\n", "!ani_depthplot.py -f data_files/ani_depthplot/rmag_anisotropy.txt -fsa data_files/ani_depthplot/er_samples.txt \\\n", "    -fb data_files/ani_depthplot/magic_measurements.txt -sav -fmt png -DM 2\n", "#Image(filename='U1361A_ani_depthplot.png')"]}, {"block": 17, "type": "code", "linesLength": 6, "startIndex": 207, "lines": ["# OSX users with pip install should use:\n", "# !ani_depthplot_anaconda -DM 3 -WD data_files/ani_depthplot -sav -fmt png\n", "\n", "os.remove('U1361A_ani_depthplot.png')\n", "!ani_depthplot.py -DM 3 -WD data_files/ani_depthplot -sav -fmt png\n", "Image('U1361A_ani_depthplot.png')"]}, {"block": 18, "type": "markdown", "linesLength": 2, "startIndex": 213, "lines": ["## aniso_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#aniso_magic)"]}, {"block": 19, "type": "code", "linesLength": 1, "startIndex": 215, "lines": ["!aniso_magic.py -WD data_files/aniso_magic -crd s -f sed_specimens.txt -sav -fmt png -v -d 3 0 90 -n 300"]}, {"block": 20, "type": "code", "linesLength": 1, "startIndex": 216, "lines": ["Image(\"_g_aniso-data.png\")"]}, {"block": 21, "type": "code", "linesLength": 1, "startIndex": 217, "lines": ["Image(\"_g_aniso-conf.png\")"]}, {"block": 22, "type": "code", "linesLength": 1, "startIndex": 218, "lines": ["Image(\"_g_aniso-tcdf.png\")"]}, {"block": 23, "type": "code", "linesLength": 1, "startIndex": 219, "lines": ["Image(\"_g_aniso-vxcdf.png\")"]}, {"block": 24, "type": "code", "linesLength": 1, "startIndex": 220, "lines": ["Image(\"_g_aniso-vycdf.png\")"]}, {"block": 25, "type": "code", "linesLength": 1, "startIndex": 221, "lines": ["Image(\"_g_aniso-vzcdf.png\")"]}, {"block": 26, "type": "markdown", "linesLength": 1, "startIndex": 222, "lines": ["## aniso_magic2.py"]}, {"block": 27, "type": "code", "linesLength": 2, "startIndex": 223, "lines": ["!aniso_magic2.py -f data_files/aniso_magic/dike_anisotropy.txt -gtc 110 2 -par -v -crd g \\\n", "   -F data_files/aniso_magic/rmag_results.txt -fmt png -sav -n 300"]}, {"block": 28, "type": "code", "linesLength": 1, "startIndex": 225, "lines": ["Image(filename='Scripps Beach_g_TY__aniso-tcdf_.png')"]}, {"block": 29, "type": "code", "linesLength": 1, "startIndex": 226, "lines": ["Image(filename='Scripps Beach_g_TY__aniso-data_.png')"]}, {"block": 30, "type": "code", "linesLength": 1, "startIndex": 227, "lines": ["Image(filename='Scripps Beach_g_TY__aniso-conf_.png')"]}, {"block": 31, "type": "markdown", "linesLength": 2, "startIndex": 228, "lines": ["## apwp.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#apwp)"]}, {"block": 32, "type": "code", "linesLength": 1, "startIndex": 230, "lines": ["!apwp.py -f data_files/apwp/apwp_example.dat"]}, {"block": 33, "type": "markdown", "linesLength": 2, "startIndex": 231, "lines": ["## atrm_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#atrm_magic)"]}, {"block": 34, "type": "code", "linesLength": 3, "startIndex": 233, "lines": ["os.remove('data_files/atrm_magic/specimens.txt')\n", "!atrm_magic.py -WD data_files/atrm_magic -f new_atrm_measurements.txt\n", "!cat data_files/atrm_magic/specimens.txt | head"]}, {"block": 35, "type": "code", "linesLength": 6, "startIndex": 236, "lines": ["# with MagIC 2\n", "!sio_magic2.py -f data_files/atrm_magic/atrm_magic_example.dat -loc Africa -LP T:ANI\\\n", "    -F data_files/atrm_magic/atrm_measurements.txt -ncn 1 -dc 40 -1 -1\n", "    \n", "!atrm_magic.py -DM 2 -f data_files/atrm_magic/atrm_measurements.txt\\\n", "   -Fa data_files/atrm_magic/trm_anisotropy.txt -Fr data_files/atrm_magic/atrm_results.txt"]}, {"block": 36, "type": "markdown", "linesLength": 2, "startIndex": 242, "lines": ["## azdip_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#azdip_magic)"]}, {"block": 37, "type": "code", "linesLength": 5, "startIndex": 244, "lines": ["# MagIC 3\n", "!azdip_magic.py -f data_files/azdip_magic/azdip_magic_example.dat -ncn 1\\\n", "   -mcd FS-FD:SO-POM -loc \"Northern Iceland\" -DM 3 -WD data_files/azdip_magic\n", "        \n", "!cat data_files/azdip_magic/samples.txt | head"]}, {"block": 38, "type": "code", "linesLength": 5, "startIndex": 249, "lines": ["# MagIC 2.5\n", "!azdip_magic.py -f data_files/azdip_magic/azdip_magic_example.dat -ncn 1\\\n", "   -mcd FS-FD:SO-POM -loc \"Northern Iceland\" -Fsa data_files/azdip_magic/er_samples.txt -DM 2\n", "        \n", "! cat data_files/azdip_magic/er_samples.txt | head"]}, {"block": 39, "type": "markdown", "linesLength": 2, "startIndex": 254, "lines": ["## bgc_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#bgc_magic)"]}, {"block": 40, "type": "code", "linesLength": 1, "startIndex": 256, "lines": ["!bgc_magic.py -f data_files/convert_2_magic/BGC_magic/15HHA1-2A"]}, {"block": 41, "type": "markdown", "linesLength": 2, "startIndex": 257, "lines": ["## b_vdm.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#b_vdm)"]}, {"block": 42, "type": "code", "linesLength": 1, "startIndex": 259, "lines": ["!b_vdm.py -f data_files/b_vdm/b_vdm_example.dat"]}, {"block": 43, "type": "markdown", "linesLength": 2, "startIndex": 260, "lines": ["## bootams.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#bootams)"]}, {"block": 44, "type": "code", "linesLength": 1, "startIndex": 262, "lines": ["!bootams.py -par   -f data_files/bootams/bootams_example.dat -n 300"]}, {"block": 45, "type": "code", "linesLength": 1, "startIndex": 263, "lines": ["!bootams.py  -f data_files/bootams/bootams_example.dat -n 300"]}, {"block": 46, "type": "markdown", "linesLength": 2, "startIndex": 264, "lines": ["## cart_dir.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#cart_dir)"]}, {"block": 47, "type": "code", "linesLength": 1, "startIndex": 266, "lines": ["!cart_dir.py -f data_files/cart_dir/cart_dir_example.dat"]}, {"block": 48, "type": "markdown", "linesLength": 2, "startIndex": 267, "lines": ["## chartmaker.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#chartmaker)"]}, {"block": 49, "type": "markdown", "linesLength": 1, "startIndex": 269, "lines": ["You can't do chartmaker from within the notebook.  And chi_magic.py is still a bit buggy (problem with legend and 4th plot still shows up.)"]}, {"block": 50, "type": "markdown", "linesLength": 2, "startIndex": 270, "lines": ["## chi_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#chi_magic)"]}, {"block": 51, "type": "code", "linesLength": 1, "startIndex": 272, "lines": ["!chi_magic.py -f data_files/chi_magic/measurements.txt -fmt png -sav"]}, {"block": 52, "type": "code", "linesLength": 1, "startIndex": 273, "lines": ["Image('IRM-OldBlue-1892_temperature.png')"]}, {"block": 53, "type": "code", "linesLength": 1, "startIndex": 274, "lines": ["!chi_magic2.py -f data_files/chi_magic/chi_magic_example.dat -fmt png -sav"]}, {"block": 54, "type": "code", "linesLength": 1, "startIndex": 275, "lines": ["Image(filename='IRM-OldBlue-1892_1.png')"]}, {"block": 55, "type": "code", "linesLength": 1, "startIndex": 276, "lines": ["Image(filename='IRM-OldBlue-1892_3.png')"]}, {"block": 56, "type": "code", "linesLength": 1, "startIndex": 277, "lines": ["Image(filename='IRM-OldBlue-1892_2.png')"]}, {"block": 57, "type": "markdown", "linesLength": 2, "startIndex": 278, "lines": ["## cit_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#cit_magic)"]}, {"block": 58, "type": "code", "linesLength": 2, "startIndex": 280, "lines": ["!cit_magic.py  -f data_files/convert_2_magic/cit_magic/PI47/PI47-.sam -loc \"Slate Islands\" \\\n", "    -spc 1 -ncn 2 -mcd \"FS-FD:SO-MAG\" -A "]}, {"block": 59, "type": "markdown", "linesLength": 5, "startIndex": 282, "lines": ["## combine_magic.py\n", "\n", " MagIC tables have many columns only some of which are used in a particular instance. So combining files of the same type must be done carefully to ensure that the right data come under the right headings. The program combine_magic.py can be used to combine any number of MagIC files from a given type.\n", "\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#combine_magic)"]}, {"block": 60, "type": "code", "linesLength": 1, "startIndex": 287, "lines": ["!combine_magic.py -WD data_files/combine_magic -F measurements.txt -f af_measurements.txt therm_measurements.txt "]}, {"block": 61, "type": "markdown", "linesLength": 1, "startIndex": 288, "lines": ["## common_mean.py\n"]}, {"block": 62, "type": "code", "linesLength": 2, "startIndex": 289, "lines": ["!common_mean.py -f data_files/common_mean/common_mean_ex_file1.dat\\\n", "   -f2 data_files/common_mean/common_mean_ex_file2.dat -sav -fmt png"]}, {"block": 63, "type": "code", "linesLength": 1, "startIndex": 291, "lines": ["Image(filename='CD_X.png')"]}, {"block": 64, "type": "code", "linesLength": 1, "startIndex": 292, "lines": ["Image(filename='CD_Y.png')"]}, {"block": 65, "type": "code", "linesLength": 1, "startIndex": 293, "lines": ["Image(filename='CD_Z.png')"]}, {"block": 66, "type": "markdown", "linesLength": 2, "startIndex": 294, "lines": ["## cont_rot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#cont_rot)"]}, {"block": 67, "type": "code", "linesLength": 2, "startIndex": 296, "lines": ["!cont_rot.py -con af:sam -prj ortho\\\n", "    -eye -20 0 -sym k-  1 -age 180 -res l  -fmt png -sav"]}, {"block": 68, "type": "code", "linesLength": 5, "startIndex": 298, "lines": ["if basemap_present:\n", "    image = Image(filename=\"Cont_rot.png\")\n", "else: \n", "    image = None\n", "image"]}, {"block": 69, "type": "markdown", "linesLength": 2, "startIndex": 303, "lines": ["## core_depthplot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#core_depthplot)"]}, {"block": 70, "type": "code", "linesLength": 9, "startIndex": 305, "lines": ["# OSX users with pip install should use:\n", "#!core_depthplot_anaconda -fsa data_files/core_depthplot/er_samples.txt -LP AF 15 \\\n", "#    -f data_files/core_depthplot/magic_measurements.txt -log \\\n", "#    -d 50 150 -ts gts12 23 34 -D -fmt png -sav -DM 2\n", "\n", "# test with MagIC 2.5\n", "!core_depthplot.py -fsa data_files/core_depthplot/er_samples.txt -LP AF 15 \\\n", "    -f data_files/core_depthplot/magic_measurements.txt -log \\\n", "    -d 50 150 -ts gts12 23 34 -D -fmt png -sav -DM 2"]}, {"block": 71, "type": "code", "linesLength": 1, "startIndex": 314, "lines": ["Image(filename='DSDP Site 522_m__LT-AF-Z_core-depthplot.png')"]}, {"block": 72, "type": "code", "linesLength": 13, "startIndex": 315, "lines": ["# OSX users with pip install should use:\n", "\n", "#!core_depthplot_anaconda -DM 3 -fsa ./data_files/core_depthplot/samples.txt -LP AF 15 \\\n", "#    -f ./data_files/core_depthplot/measurements.txt -log \\\n", "#    -d 50 150 -ts gts12 23 34 -D -fmt png -sav -DM 3 -ID ./data_files/core_depthplot\n", "\n", "try:\n", "    os.remove('DSDP Site 522_m__LT-AF-Z_core-depthplot.png')\n", "except FileNotFoundError:\n", "    pass\n", "!core_depthplot.py -DM 3 -fsa ./data_files/core_depthplot/samples.txt -LP AF 15 \\\n", "    -f ./data_files/core_depthplot/measurements.txt -log \\\n", "    -d 50 150 -ts gts12 23 34 -D -fmt png -sav -DM 3 -ID ./data_files/core_depthplot"]}, {"block": 73, "type": "code", "linesLength": 1, "startIndex": 328, "lines": ["Image('DSDP Site 522_m__LT-AF-Z_core-depthplot.png')"]}, {"block": 74, "type": "code", "linesLength": 12, "startIndex": 329, "lines": ["# OSX users with pip install should use:\n", "#!core_depthplot_anaconda -DM 3 -fa ./data_files/core_depthplot/ages.txt -LP AF 15 \\\n", "#    -f ./data_files/core_depthplot/measurements.txt -log \\\n", "#     -ts gts12 23 34 -D -fmt png -sav -DM 3 -ID ./data_files/core_depthplot\n", "\n", "try:\n", "    os.remove('DSDP Site 522_m__LT-AF-Z_core-depthplot.png')\n", "except FileNotFoundError:\n", "    pass\n", "!core_depthplot.py -DM 3 -fa ./data_files/core_depthplot/ages.txt -LP AF 15 \\\n", "    -f ./data_files/core_depthplot/measurements.txt -log \\\n", "     -ts gts12 23 34 -D -fmt png -sav -DM 3 -ID ./data_files/core_depthplot # not a meaningful option with age -d 50 150"]}, {"block": 75, "type": "code", "linesLength": 1, "startIndex": 341, "lines": ["Image('DSDP Site 522_m__LT-AF-Z_core-depthplot.png')"]}, {"block": 76, "type": "markdown", "linesLength": 2, "startIndex": 342, "lines": ["## curie.py \n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#curie)"]}, {"block": 77, "type": "code", "linesLength": 1, "startIndex": 344, "lines": ["!curie.py -f data_files/curie/curie_example.dat -w 10 -fmt png -sav"]}, {"block": 78, "type": "code", "linesLength": 1, "startIndex": 345, "lines": ["Image(filename='M_T.png')"]}, {"block": 79, "type": "markdown", "linesLength": 2, "startIndex": 346, "lines": ["## dayplot_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#dayplot_magic)"]}, {"block": 80, "type": "code", "linesLength": 1, "startIndex": 348, "lines": ["!dayplot_magic.py -WD data_files/dayplot_magic -f specimens.txt -sav -fmt png"]}, {"block": 81, "type": "code", "linesLength": 1, "startIndex": 349, "lines": ["Image(\"_day.png\")"]}, {"block": 82, "type": "markdown", "linesLength": 1, "startIndex": 350, "lines": ["## dayplot_magic2.py"]}, {"block": 83, "type": "code", "linesLength": 2, "startIndex": 351, "lines": ["!dayplot_magic2.py -WD data_files/dayplot_magic/ -f dayplot_magic_example.dat \\\n", "    -fmt png -sav"]}, {"block": 84, "type": "code", "linesLength": 1, "startIndex": 353, "lines": ["Image(filename='unknown_day.png')"]}, {"block": 85, "type": "markdown", "linesLength": 1, "startIndex": 354, "lines": ["## demag_gui.py"]}, {"block": 86, "type": "markdown", "linesLength": 1, "startIndex": 355, "lines": ["Use demag_gui.py from the command line or from within pmag_gui.py (Pmag GUI)."]}, {"block": 87, "type": "markdown", "linesLength": 2, "startIndex": 356, "lines": ["## di_eq.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#di_eq)"]}, {"block": 88, "type": "code", "linesLength": 1, "startIndex": 358, "lines": ["!di_eq.py -f data_files/di_eq/di_eq_example.dat"]}, {"block": 89, "type": "markdown", "linesLength": 2, "startIndex": 359, "lines": ["## di_geo.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#di_geo)"]}, {"block": 90, "type": "code", "linesLength": 2, "startIndex": 361, "lines": ["!di_geo.py -f data_files/di_geo/di_geo_example.dat -F data_files/di_geo/di_geo.out\n", "!cat data_files/di_geo/di_geo.out | head"]}, {"block": 91, "type": "markdown", "linesLength": 2, "startIndex": 363, "lines": ["## di_rot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#di_rot)"]}, {"block": 92, "type": "code", "linesLength": 2, "startIndex": 365, "lines": ["!eqarea.py -f data_files/di_rot/di_rot_example.txt -fmt png -sav\n", "Image(filename='di_rot_example_eq.png')"]}, {"block": 93, "type": "code", "linesLength": 2, "startIndex": 367, "lines": ["!di_rot.py -f data_files/di_rot/di_rot_example.txt -F data_files/di_rot/dirot.out -D 359.3 -I 42.1\n", "!eqarea.py -f data_files/di_rot/dirot.out -fmt png -sav"]}, {"block": 94, "type": "code", "linesLength": 1, "startIndex": 369, "lines": ["Image(filename='dirot_eq.png')"]}, {"block": 95, "type": "markdown", "linesLength": 2, "startIndex": 370, "lines": ["## di_tilt.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#di_tilt)"]}, {"block": 96, "type": "code", "linesLength": 1, "startIndex": 372, "lines": ["!di_tilt.py < data_files/di_tilt/di_tilt_example.dat"]}, {"block": 97, "type": "markdown", "linesLength": 2, "startIndex": 373, "lines": ["## di_vgp.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#di_vgp)"]}, {"block": 98, "type": "code", "linesLength": 1, "startIndex": 375, "lines": ["!di_vgp.py -f data_files/di_vgp/di_vgp_example.dat"]}, {"block": 99, "type": "markdown", "linesLength": 2, "startIndex": 376, "lines": ["## dipole_pinc.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#dipole_pinc)"]}, {"block": 100, "type": "code", "linesLength": 1, "startIndex": 378, "lines": ["!dipole_pinc.py -f data_files/dipole_pinc/dipole_pinc_example.dat"]}, {"block": 101, "type": "markdown", "linesLength": 2, "startIndex": 379, "lines": ["## dipole_plat.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#dipole_plat)"]}, {"block": 102, "type": "code", "linesLength": 1, "startIndex": 381, "lines": ["!dipole_plat.py -f data_files/dipole_plat/dipole_plat_example.dat"]}, {"block": 103, "type": "markdown", "linesLength": 2, "startIndex": 382, "lines": ["## dir_cart.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#dir_cart)"]}, {"block": 104, "type": "code", "linesLength": 1, "startIndex": 384, "lines": ["!dir_cart.py -f data_files/dir_cart/dir_cart_example.dat"]}, {"block": 105, "type": "markdown", "linesLength": 2, "startIndex": 385, "lines": ["## dmag_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#dmag_magic)"]}, {"block": 106, "type": "code", "linesLength": 1, "startIndex": 387, "lines": ["!dmag_magic.py -WD data_files/3_0/McMurdo -fsp specimens.txt -obj spc -sav -fmt \"png\" -LT T"]}, {"block": 107, "type": "code", "linesLength": 1, "startIndex": 388, "lines": ["Image(filename=\"mc01a_LT-T-Z.png\")"]}, {"block": 108, "type": "code", "linesLength": 1, "startIndex": 389, "lines": ["Image(\"mc141c1_LT-T-Z.png\")"]}, {"block": 109, "type": "code", "linesLength": 2, "startIndex": 390, "lines": ["!dmag_magic.py -WD data_files/3_0/McMurdo -fsp specimens.txt \\\n", "-fsa samples.txt -obj sit -sav -fmt \"png\" -LT T"]}, {"block": 110, "type": "code", "linesLength": 1, "startIndex": 392, "lines": ["Image(filename=\"mc01_LT-T-Z.png\")"]}, {"block": 111, "type": "markdown", "linesLength": 1, "startIndex": 393, "lines": ["## dmag_magic2.py"]}, {"block": 112, "type": "code", "linesLength": 1, "startIndex": 394, "lines": ["!dmag_magic2.py -f data_files/dmag_magic/dmag_magic_example.dat -LT AF -fmt png -sav"]}, {"block": 113, "type": "code", "linesLength": 1, "startIndex": 395, "lines": ["Image(filename='McMurdo_LT-AF-Z.png')"]}, {"block": 114, "type": "markdown", "linesLength": 2, "startIndex": 396, "lines": ["## download_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#download_magic)"]}, {"block": 115, "type": "code", "linesLength": 1, "startIndex": 398, "lines": ["!download_magic.py -WD data_files/download_magic -f data_files/download_magic/magic_contribution_16503.txt "]}, {"block": 116, "type": "markdown", "linesLength": 2, "startIndex": 399, "lines": ["## eigs_s.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#eigs_s)"]}, {"block": 117, "type": "code", "linesLength": 1, "startIndex": 401, "lines": ["!eigs_s.py -f data_files/eigs_s/eigs_s_example.dat"]}, {"block": 118, "type": "markdown", "linesLength": 2, "startIndex": 402, "lines": ["## eq_di.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#eq_di)"]}, {"block": 119, "type": "code", "linesLength": 2, "startIndex": 404, "lines": ["!eq_di.py -f data_files/eq_di/eq_di_example.dat > data_files/eq_di/eq_di.out\n", "!eqarea.py -f data_files/eq_di/eq_di.out -fmt png -sav"]}, {"block": 120, "type": "code", "linesLength": 1, "startIndex": 406, "lines": ["Image(filename='eq_di_eq.png')"]}, {"block": 121, "type": "markdown", "linesLength": 2, "startIndex": 407, "lines": ["## eqarea.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#eqarea)"]}, {"block": 122, "type": "code", "linesLength": 1, "startIndex": 409, "lines": ["!eqarea.py -f data_files/eqarea/fishrot.out -fmt png -sav"]}, {"block": 123, "type": "code", "linesLength": 1, "startIndex": 410, "lines": ["Image(filename='fishrot_eq.png')"]}, {"block": 124, "type": "markdown", "linesLength": 2, "startIndex": 411, "lines": ["## eqarea_ell.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#eqarea_ell)"]}, {"block": 125, "type": "code", "linesLength": 1, "startIndex": 413, "lines": ["!eqarea_ell.py -f data_files/eqarea_ell/tk03.out -ell B -fmt png -sav"]}, {"block": 126, "type": "code", "linesLength": 1, "startIndex": 414, "lines": ["Image(filename='data_files-eqarea_ell-tk03.out_eq.png')"]}, {"block": 127, "type": "markdown", "linesLength": 2, "startIndex": 415, "lines": ["## eqarea_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#eqarea_magic)"]}, {"block": 128, "type": "code", "linesLength": 1, "startIndex": 417, "lines": ["!eqarea_magic.py -WD data_files/3_0/McMurdo -f sites.txt -sav -fmt \"png\""]}, {"block": 129, "type": "code", "linesLength": 1, "startIndex": 418, "lines": ["Image(filename=\"all_McMurdo_g_eqarea.png\")"]}, {"block": 130, "type": "code", "linesLength": 2, "startIndex": 419, "lines": ["!download_magic.py -WD data_files/nrm_specimens_magic \\\n", "-f data_files/nrm_specimens_magic/magic_contribution_15143.txt -DM 3"]}, {"block": 131, "type": "code", "linesLength": 3, "startIndex": 421, "lines": ["# plot by specimen\n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/nrm_specimens.txt -crd g -fmt png -sav -obj spc\n", "Image('Snake_River_sr42_sr42b_sr42b1_g_eqarea.png')"]}, {"block": 132, "type": "code", "linesLength": 15, "startIndex": 424, "lines": ["# plotting all with no sites file\n", "\n", "# get rid of any png files lying around\n", "for fname in glob.glob(\"*.png\"):\n", "    os.remove(fname)\n", "\n", "# temporarily hide sites file\n", "try:\n", "    os.rename('data_files/nrm_specimens_magic/sites.txt', 'data_files/nrm_specimens_magic/temp.txt')\n", "except FileNotFoundError:\n", "    pass\n", "    \n", "# run eqarea_magic    \n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/nrm_specimens.txt -crd g -fmt png -sav -obj all\n", "Image('all_g_eqarea.png')\n"]}, {"block": 133, "type": "code", "linesLength": 6, "startIndex": 439, "lines": ["# plotting by sample with no sites file\n", "# get rid of any png files lying around\n", "for fname in glob.glob(\"*.png\"):\n", "    os.remove(fname)\n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/nrm_specimens.txt -crd g -fmt png -sav -obj sam\n", "Image('sr42_sr42b_g_eqarea.png')"]}, {"block": 134, "type": "code", "linesLength": 4, "startIndex": 445, "lines": ["# can't get site data with no site or sample file, will fail gracefully\n", "!mv data_files/nrm_specimens_magic/samples.txt data_files/nrm_specimens_magic/temp_samples.txt\n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/nrm_specimens.txt -crd g -fmt png -sav -obj sit\n", "!mv  data_files/nrm_specimens_magic/temp_samples.txt data_files/nrm_specimens_magic/samples.txt"]}, {"block": 135, "type": "code", "linesLength": 10, "startIndex": 449, "lines": ["# plotting by sample\n", "# get rid of any png files lying around\n", "for fname in glob.glob(\"*.png\"):\n", "    os.remove(fname)\n", "try:\n", "    os.rename('data_files/nrm_specimens_magic/temp.txt', 'data_files/nrm_specimens_magic/sites.txt')\n", "except FileNotFoundError:\n", "    pass\n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/nrm_specimens.txt -crd g -fmt png -sav -obj sam\n", "Image('Snake_River_sr42_sr42b_g_eqarea.png')"]}, {"block": 136, "type": "code", "linesLength": 5, "startIndex": 459, "lines": ["# plotting all\n", "for fname in glob.glob(\"*.png\"):\n", "    os.remove(fname)\n", "!eqarea_magic.py -WD data_files/nrm_specimens_magic/ -f nrm_specimens.txt -crd g -fmt png -sav -obj all\n", "Image('all_Snake_River_g_eqarea.png')"]}, {"block": 137, "type": "code", "linesLength": 5, "startIndex": 464, "lines": ["# using unknown option for -obj, will default to plotting all instead\n", "for fname in glob.glob(\"*.png\"):\n", "    os.remove(fname)\n", "!eqarea_magic.py -f data_files/nrm_specimens_magic/samples.txt -crd g -fmt png -sav -obj loc  # will use 'all'\n", "Image('all_Snake_River_g_eqarea.png')"]}, {"block": 138, "type": "markdown", "linesLength": 1, "startIndex": 469, "lines": ["## eqarea_magic2.py"]}, {"block": 139, "type": "code", "linesLength": 2, "startIndex": 470, "lines": ["!eqarea_magic2.py -obj loc -crd g -f data_files/eqarea_magic/pmag_results.txt\\\n", "    -ell Be -fmt png -sav"]}, {"block": 140, "type": "code", "linesLength": 1, "startIndex": 472, "lines": ["Image(filename='Snake_River_gu_eqarea.png')"]}, {"block": 141, "type": "markdown", "linesLength": 2, "startIndex": 473, "lines": ["## find_ei.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#find_ei)"]}, {"block": 142, "type": "code", "linesLength": 1, "startIndex": 475, "lines": ["!find_ei.py -f data_files/find_EI/find_EI_example.dat -fmt png -sav -n 300"]}, {"block": 143, "type": "code", "linesLength": 1, "startIndex": 476, "lines": ["Image(filename='findEI_ei.png')"]}, {"block": 144, "type": "code", "linesLength": 1, "startIndex": 477, "lines": ["Image(filename='findEI_cdf.png')"]}, {"block": 145, "type": "code", "linesLength": 1, "startIndex": 478, "lines": ["Image(filename='findEI_eq.png')"]}, {"block": 146, "type": "code", "linesLength": 1, "startIndex": 479, "lines": ["Image(filename='findEI_v2.png')"]}, {"block": 147, "type": "markdown", "linesLength": 2, "startIndex": 480, "lines": ["## fisher.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#fisher)"]}, {"block": 148, "type": "code", "linesLength": 1, "startIndex": 482, "lines": ["!fisher.py -k 30 -n 10"]}, {"block": 149, "type": "markdown", "linesLength": 2, "startIndex": 483, "lines": ["## fishqq.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#fishqq)"]}, {"block": 150, "type": "code", "linesLength": 1, "startIndex": 485, "lines": ["!fishqq.py -f data_files/fishqq/fishqq_example.txt -fmt png -sav"]}, {"block": 151, "type": "code", "linesLength": 1, "startIndex": 486, "lines": ["Image(filename='data_files-fishqq-fishqq_example.txt_unf1.png')"]}, {"block": 152, "type": "code", "linesLength": 1, "startIndex": 487, "lines": ["Image(filename='data_files-fishqq-fishqq_example.txt_exp1.png')"]}, {"block": 153, "type": "markdown", "linesLength": 2, "startIndex": 488, "lines": ["## fishrot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#fishrot)"]}, {"block": 154, "type": "code", "linesLength": 1, "startIndex": 490, "lines": ["!fishrot.py -n 5 -D 33 -I 41 -k 50"]}, {"block": 155, "type": "markdown", "linesLength": 2, "startIndex": 491, "lines": ["## foldtest.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#foldtest)"]}, {"block": 156, "type": "code", "linesLength": 1, "startIndex": 493, "lines": ["!foldtest.py -f data_files/foldtest/foldtest_example.dat -fmt png -sav -n 300"]}, {"block": 157, "type": "code", "linesLength": 1, "startIndex": 494, "lines": ["Image(filename='foldtest_ta.png')"]}, {"block": 158, "type": "code", "linesLength": 1, "startIndex": 495, "lines": ["Image(filename='foldtest_st.png')"]}, {"block": 159, "type": "code", "linesLength": 1, "startIndex": 496, "lines": ["Image(filename='foldtest_ge.png')"]}, {"block": 160, "type": "markdown", "linesLength": 2, "startIndex": 497, "lines": ["## foldtest_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#foldtest_magic)"]}, {"block": 161, "type": "code", "linesLength": 1, "startIndex": 499, "lines": ["!foldtest_magic.py -f data_files/foldtest_magic/sites.txt -fmt png -sav -DM 3 -n 300 -exc"]}, {"block": 162, "type": "code", "linesLength": 1, "startIndex": 500, "lines": ["Image(filename='foldtest_ge.png')"]}, {"block": 163, "type": "code", "linesLength": 1, "startIndex": 501, "lines": ["!download_magic.py -WD data_files/foldtest_magic -f data_files/foldtest_magic/magic_contribution_11087.txt"]}, {"block": 164, "type": "code", "linesLength": 2, "startIndex": 502, "lines": ["!foldtest_magic.py -f data_files/foldtest_magic/pmag_sites.txt \\\n", "    -fsi data_files/foldtest_magic/er_sites.txt -fmt png -sav -DM 2 -n 300"]}, {"block": 165, "type": "code", "linesLength": 1, "startIndex": 504, "lines": ["Image(filename='foldtest_ge.png')"]}, {"block": 166, "type": "code", "linesLength": 1, "startIndex": 505, "lines": ["Image(filename='foldtest_st.png')"]}, {"block": 167, "type": "code", "linesLength": 1, "startIndex": 506, "lines": ["Image(filename='foldtest_ta.png')"]}, {"block": 168, "type": "markdown", "linesLength": 2, "startIndex": 507, "lines": ["## forc_diagram.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#forc_diagram)"]}, {"block": 169, "type": "code", "linesLength": 2, "startIndex": 509, "lines": ["!forc_diagram.py -f data_files/forc_diagram/conventional_example.forc -sf 3 -sav -fmt png\n", "Image('forc.png')"]}, {"block": 170, "type": "markdown", "linesLength": 2, "startIndex": 511, "lines": ["## gaussian.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#gaussian)"]}, {"block": 171, "type": "code", "linesLength": 2, "startIndex": 513, "lines": ["!gaussian.py -s 3 -n 1000 -m 10. -F data_files/gaussian/gaussian.out\n", "!histplot.py -f data_files/gaussian/gaussian.out -fmt png -sav"]}, {"block": 172, "type": "code", "linesLength": 1, "startIndex": 515, "lines": ["Image(filename='hist.png')"]}, {"block": 173, "type": "markdown", "linesLength": 2, "startIndex": 516, "lines": ["## generic_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#generic_magic)"]}, {"block": 174, "type": "code", "linesLength": 1, "startIndex": 518, "lines": ["!generic_magic.py -f data_files/convert_2_magic/generic_magic/generic_magic_example.txt -exp PI"]}, {"block": 175, "type": "markdown", "linesLength": 2, "startIndex": 519, "lines": ["## gobing.py \n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#gobing)"]}, {"block": 176, "type": "code", "linesLength": 1, "startIndex": 521, "lines": ["!gobing.py -f data_files/gobing/gobing_example.txt"]}, {"block": 177, "type": "markdown", "linesLength": 2, "startIndex": 522, "lines": ["## gofish.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#gofish)"]}, {"block": 178, "type": "code", "linesLength": 1, "startIndex": 524, "lines": ["!gofish.py -f data_files/gofish/fishrot.out"]}, {"block": 179, "type": "markdown", "linesLength": 2, "startIndex": 525, "lines": ["## gokent.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#gokent)"]}, {"block": 180, "type": "code", "linesLength": 1, "startIndex": 527, "lines": ["!gokent.py -f data_files/gokent/gokent_example.txt"]}, {"block": 181, "type": "markdown", "linesLength": 2, "startIndex": 528, "lines": ["## goprinc.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#goprinc)"]}, {"block": 182, "type": "code", "linesLength": 1, "startIndex": 530, "lines": ["!goprinc.py -f data_files/goprinc/tk03.out"]}, {"block": 183, "type": "markdown", "linesLength": 2, "startIndex": 531, "lines": ["## grab_magic_key.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#grab_magic_key)"]}, {"block": 184, "type": "code", "linesLength": 1, "startIndex": 533, "lines": ["!grab_magic_key.py -f data_files/download_magic/sites.txt -key lat"]}, {"block": 185, "type": "markdown", "linesLength": 6, "startIndex": 534, "lines": ["## histplot.py \n", "\n", "see [\\[gaussian.py\\]](#gaussian.py)\n", "\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#histplot)\n", "\n"]}, {"block": 186, "type": "markdown", "linesLength": 2, "startIndex": 540, "lines": ["## huji_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#huji_magic)"]}, {"block": 187, "type": "code", "linesLength": 1, "startIndex": 542, "lines": ["!huji_magic.py -f data_files/convert_2_magic/HUJI_magic/Massada_AF_HUJI_new_format.txt -LP T"]}, {"block": 188, "type": "markdown", "linesLength": 2, "startIndex": 543, "lines": ["## huji_sample_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#huji_sample_magic)"]}, {"block": 189, "type": "code", "linesLength": 1, "startIndex": 545, "lines": ["!huji_sample_magic.py -f data_files/convert_2_magic/HUJI_magic/magdelkrum_datafile.txt"]}, {"block": 190, "type": "markdown", "linesLength": 2, "startIndex": 546, "lines": ["## hysteresis_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#hysteresis_magic)"]}, {"block": 191, "type": "code", "linesLength": 3, "startIndex": 548, "lines": ["# for MagIC data model 3:\n", "!hysteresis_magic.py -WD data_files/hysteresis_magic/ -f measurements.txt \\\n", "    -spc IS06a-1  -fmt png -sav"]}, {"block": 192, "type": "code", "linesLength": 1, "startIndex": 551, "lines": ["Image(filename='IS06a-1_hyst.png')"]}, {"block": 193, "type": "code", "linesLength": 1, "startIndex": 552, "lines": ["Image('IS06a-1_deltaM.png')"]}, {"block": 194, "type": "code", "linesLength": 3, "startIndex": 553, "lines": ["# For MagIC data model 2:\n", "!hysteresis_magic2.py -WD data_files/hysteresis_magic/ -f hysteresis_magic_example.dat \\\n", "    -spc IS06a-1  -fmt png -sav"]}, {"block": 195, "type": "code", "linesLength": 1, "startIndex": 556, "lines": ["Image(filename='_IS06a-1_hyst.png')"]}, {"block": 196, "type": "code", "linesLength": 2, "startIndex": 557, "lines": ["!hysteresis_magic.py -WD data_files/hysteresis_magic/ -f measurements.txt \\\n", "    -spc IS06a-1  -fmt png -sav"]}, {"block": 197, "type": "code", "linesLength": 1, "startIndex": 559, "lines": ["Image(filename='IS06a-1_hyst.png')"]}, {"block": 198, "type": "markdown", "linesLength": 1, "startIndex": 560, "lines": ["## iodp_dscr_magic.py\n"]}, {"block": 199, "type": "code", "linesLength": 1, "startIndex": 561, "lines": ["!iodp_dscr_magic.py -f data_files/convert_2_magic/IODP_srm_magic/IODP_LIMS_SRMdiscrete_344_1414A.csv"]}, {"block": 200, "type": "markdown", "linesLength": 1, "startIndex": 562, "lines": ["## iodp_jr6_magic.py"]}, {"block": 201, "type": "code", "linesLength": 1, "startIndex": 563, "lines": ["!iodp_jr6_magic.py -f data_files/convert_2_magic/IODP_jr6_magic/test.jr6"]}, {"block": 202, "type": "markdown", "linesLength": 1, "startIndex": 564, "lines": ["## iodp_srm_magic.py"]}, {"block": 203, "type": "code", "linesLength": 1, "startIndex": 565, "lines": ["!iodp_srm_magic.py -f data_files/convert_2_magic/iodp_srm_magic/SRM_318_U1359_B_A.csv"]}, {"block": 204, "type": "markdown", "linesLength": 2, "startIndex": 566, "lines": ["## igrf.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#igrf)\n"]}, {"block": 205, "type": "code", "linesLength": 1, "startIndex": 568, "lines": ["!igrf.py -ages -3000 1950 50 -loc 33 -117 -mod pfm9k -plt -fmt png -sav"]}, {"block": 206, "type": "code", "linesLength": 1, "startIndex": 569, "lines": ["Image(filename='igrf.png')"]}, {"block": 207, "type": "markdown", "linesLength": 1, "startIndex": 570, "lines": ["## install_etopo.py\n"]}, {"block": 208, "type": "code", "linesLength": 1, "startIndex": 571, "lines": ["!install_etopo.py"]}, {"block": 209, "type": "markdown", "linesLength": 2, "startIndex": 572, "lines": ["## incfish.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#incfish)"]}, {"block": 210, "type": "code", "linesLength": 1, "startIndex": 574, "lines": ["!incfish.py -f data_files/incfish/incfish_example_inc.dat"]}, {"block": 211, "type": "markdown", "linesLength": 2, "startIndex": 575, "lines": ["## irmaq_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#irmaq_magic)"]}, {"block": 212, "type": "code", "linesLength": 28, "startIndex": 577, "lines": ["!sio_magic.py -f data_files/irmaq_magic/U1359A_IRM_coil2.txt -LP I -V 2 \\\n", "    -WD data_files/irmaq_magic/ -F U1359A_IRM_coil2.magic -loc U1359A -spc 0 -ncn 5 \\\n", "    -Fsp coil2_specimens.txt -Fsa coil2_samples.txt -Fsi coil2_sites.txt -Flo coil2_locations.txt\n", "    \n", "!sio_magic.py -f data_files/irmaq_magic/U1359A_IRM_coil3.txt -LP I -V 3 \\\n", "    -WD data_files/irmaq_magic/ -F U1359A_IRM_coil3.magic -loc U1359A -spc 0 -ncn 5 \\\n", "    -Fsp coil3_specimens.txt -Fsa coil3_samples.txt -Fsi coil3_sites.txt -Flo coil3_locations.txt\n", "\n", "!combine_magic.py -F data_files/irmaq_magic/measurements.txt \\\n", "    -f data_files/irmaq_magic/U1359A_IRM_coil2.magic \\\n", "    data_files/irmaq_magic/U1359A_IRM_coil3.magic -dm 3\n", "    \n", "!combine_magic.py -F measurements.txt -WD data_files/irmaq_magic \\\n", "    -f U1359A_IRM_coil2.magic U1359A_IRM_coil3.magic -dm 3\n", "    \n", "!combine_magic.py -F specimens.txt -WD data_files/irmaq_magic \\\n", "    -f coil2_specimens.txt coil3_specimens.txt\n", "    \n", "!combine_magic.py -F samples.txt -WD data_files/irmaq_magic \\\n", "    -f coil2_samples.txt coil3_samples.txt\n", "    \n", "!combine_magic.py -F sites.txt -WD data_files/irmaq_magic \\\n", "    -f coil2_sites.txt coil3_sites.txt\n", "    \n", "!combine_magic.py -F locations.txt -WD data_files/irmaq_magic \\\n", "    -f coil2_locations.txt coil3_locations.txt\n", "    \n", "    "]}, {"block": 213, "type": "code", "linesLength": 1, "startIndex": 605, "lines": ["!irmaq_magic.py -f data_files/irmaq_magic/measurements.txt -fmt png -sav -DM 3"]}, {"block": 214, "type": "code", "linesLength": 1, "startIndex": 606, "lines": ["Image(\"U1359A_LP-IRM.png\")"]}, {"block": 215, "type": "markdown", "linesLength": 1, "startIndex": 607, "lines": ["## irmaq_magic.py (data model 2)"]}, {"block": 216, "type": "code", "linesLength": 7, "startIndex": 608, "lines": ["!sio_magic2.py -f data_files/irmaq_magic/U1359A_IRM_coil2.txt -LP I -V 2 \\\n", "    -F data_files/irmaq_magic/U1359A_IRM_coil2.magic -loc U1359A -spc 0 -ncn 5\n", "!sio_magic2.py -f data_files/irmaq_magic/U1359A_IRM_coil3.txt -LP I -V 3 \\\n", "    -F data_files/irmaq_magic/U1359A_IRM_coil3.magic -loc U1359A -spc 0 -ncn 5\n", "!combine_magic.py -F data_files/irmaq_magic/magic_measurements.txt \\\n", "    -f data_files/irmaq_magic/U1359A_IRM_coil2.magic \\\n", "    data_files/irmaq_magic/U1359A_IRM_coil3.magic -dm 2"]}, {"block": 217, "type": "code", "linesLength": 1, "startIndex": 615, "lines": ["!irmaq_magic.py -f data_files/irmaq_magic/magic_measurements.txt -fmt png -sav -DM 2"]}, {"block": 218, "type": "code", "linesLength": 1, "startIndex": 616, "lines": ["Image(filename='U1359A_LP-IRM.png')"]}, {"block": 219, "type": "markdown", "linesLength": 2, "startIndex": 617, "lines": ["## jr6_jr6_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#jr6_jr6_magic)"]}, {"block": 220, "type": "code", "linesLength": 1, "startIndex": 619, "lines": ["!jr6_jr6_magic.py -f data_files/convert_2_magic/JR6_magic/AF.jr6"]}, {"block": 221, "type": "markdown", "linesLength": 2, "startIndex": 620, "lines": ["## jr6_txt_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#jr6_txt_magic)"]}, {"block": 222, "type": "code", "linesLength": 1, "startIndex": 622, "lines": ["!jr6_txt_magic.py -f data_files/convert_2_magic/JR6_magic/AF.txt"]}, {"block": 223, "type": "markdown", "linesLength": 2, "startIndex": 623, "lines": ["## k15_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#k15_magic)"]}, {"block": 224, "type": "code", "linesLength": 1, "startIndex": 625, "lines": ["!k15_magic.py -WD data_files/k15_magic  -spc 0 -f data_files/k15_s/k15_example.dat -loc \"Troodos Ophiolite\" "]}, {"block": 225, "type": "code", "linesLength": 1, "startIndex": 626, "lines": ["!k15_s.py -f data_files/k15_s/k15_example.dat"]}, {"block": 226, "type": "markdown", "linesLength": 2, "startIndex": 627, "lines": ["## kly4s_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#kly4s_magic)"]}, {"block": 227, "type": "code", "linesLength": 1, "startIndex": 629, "lines": ["!kly4s_magic.py -f data_files/convert_2_magic/kly4s_magic/KLY4S_magic_example.dat"]}, {"block": 228, "type": "markdown", "linesLength": 2, "startIndex": 630, "lines": ["## ldeo_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#ldeo_magic)"]}, {"block": 229, "type": "code", "linesLength": 1, "startIndex": 632, "lines": ["!ldeo_magic.py -f data_files/convert_2_magic/LDEO_magic/ldeo_magic_example.dat"]}, {"block": 230, "type": "markdown", "linesLength": 2, "startIndex": 633, "lines": ["# livdb_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#livdb_magic)"]}, {"block": 231, "type": "code", "linesLength": 2, "startIndex": 635, "lines": ["# is a GUI and doesn't work in a notebook\n", "# see _PmagPy-nb.ipynb for how to use convert.livdb"]}, {"block": 232, "type": "markdown", "linesLength": 2, "startIndex": 637, "lines": ["# lnp_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#lnp_magic)"]}, {"block": 233, "type": "code", "linesLength": 1, "startIndex": 639, "lines": ["!lnp_magic.py -f data_files/lnp_magic/specimens.txt -crd g -fmt png -sav -fsa data_files/lnp_magic/samples.txt"]}, {"block": 234, "type": "code", "linesLength": 1, "startIndex": 640, "lines": ["Image(filename='sv01_g_eqarea.png')"]}, {"block": 235, "type": "code", "linesLength": 1, "startIndex": 641, "lines": ["os.remove('sv01_g_eqarea.png')"]}, {"block": 236, "type": "code", "linesLength": 1, "startIndex": 642, "lines": ["!download_magic.py  -WD data_files/lnp_magic -ID data_files/lnp_magic -f zmab0001193tmp02.txt"]}, {"block": 237, "type": "code", "linesLength": 1, "startIndex": 643, "lines": ["!lnp_magic.py -f data_files/lnp_magic/pmag_specimens.txt -crd g -fmt png -sav -DM 2"]}, {"block": 238, "type": "code", "linesLength": 1, "startIndex": 644, "lines": ["Image(filename='sv01_g_eqarea.png')"]}, {"block": 239, "type": "markdown", "linesLength": 1, "startIndex": 645, "lines": ["lowes.py doesn't work from within a notebook. yet."]}, {"block": 240, "type": "markdown", "linesLength": 2, "startIndex": 646, "lines": ["## lowrie.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#lowrie)"]}, {"block": 241, "type": "code", "linesLength": 1, "startIndex": 648, "lines": ["!lowrie.py -f data_files/lowrie/lowrie_example.dat -fmt png -sav"]}, {"block": 242, "type": "code", "linesLength": 1, "startIndex": 649, "lines": ["Image(filename='lowrie__318-U1359A-002H-1-W-109_.png')"]}, {"block": 243, "type": "markdown", "linesLength": 2, "startIndex": 650, "lines": ["# lowrie_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#lowrie_magic)"]}, {"block": 244, "type": "code", "linesLength": 1, "startIndex": 652, "lines": ["!lowrie_magic.py -f data_files/lowrie_magic/measurements.txt -fmt png -sav"]}, {"block": 245, "type": "code", "linesLength": 1, "startIndex": 653, "lines": ["Image(\"lowrie__318-U1361A-008H-6-W-83a_.png\")"]}, {"block": 246, "type": "code", "linesLength": 1, "startIndex": 654, "lines": ["!lowrie_magic.py -f data_files/lowrie_magic/lowrie_magic_example.dat -fmt png -sav -DM 2"]}, {"block": 247, "type": "code", "linesLength": 1, "startIndex": 655, "lines": ["Image(filename='lowrie__318-U1359A-002H-1-W-109_.png')"]}, {"block": 248, "type": "markdown", "linesLength": 2, "startIndex": 656, "lines": ["## magic_select.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#magic_select)"]}, {"block": 249, "type": "code", "linesLength": 2, "startIndex": 658, "lines": ["!magic_select.py -f data_files/magic_select/pmag_specimens.txt \\\n", "    -key magic_method_codes LP-DIR-AF has -F data_files/magic_select/AF_specimens.txt"]}, {"block": 250, "type": "markdown", "linesLength": 2, "startIndex": 660, "lines": ["## mini_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#mini_magic)"]}, {"block": 251, "type": "code", "linesLength": 1, "startIndex": 662, "lines": ["!mini_magic.py -WD data_files/convert_2_magic/mini_magic -f Peru_rev1.txt"]}, {"block": 252, "type": "markdown", "linesLength": 2, "startIndex": 663, "lines": ["## mst_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#mst_magic)"]}, {"block": 253, "type": "code", "linesLength": 1, "startIndex": 665, "lines": ["!mst_magic.py -f data_files/convert_2_magic/MsT_magic/curie_example.dat -spn specimen_name"]}, {"block": 254, "type": "markdown", "linesLength": 2, "startIndex": 666, "lines": ["## mk_redo.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#mk_redo)"]}, {"block": 255, "type": "code", "linesLength": 1, "startIndex": 668, "lines": ["!mk_redo.py -WD data_files/mk_redo"]}, {"block": 256, "type": "code", "linesLength": 1, "startIndex": 669, "lines": ["!cat data_files/mk_redo/thellier_redo | head"]}, {"block": 257, "type": "code", "linesLength": 1, "startIndex": 670, "lines": ["!cat data_files/mk_redo/zeq_redo | head"]}, {"block": 258, "type": "markdown", "linesLength": 2, "startIndex": 671, "lines": ["## orientation_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#orientation_magic)"]}, {"block": 259, "type": "code", "linesLength": 6, "startIndex": 673, "lines": ["try:\n", "    os.remove('data_files/orientation_magic/samples.txt')\n", "except FileNotFoundError:\n", "    pass\n", "!orientation_magic.py -WD data_files/orientation_magic -f orient_example.txt -gmt 13\n", "!cat data_files/orientation_magic/samples.txt | head"]}, {"block": 260, "type": "markdown", "linesLength": 2, "startIndex": 679, "lines": ["## pca.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#pca)"]}, {"block": 261, "type": "code", "linesLength": 1, "startIndex": 681, "lines": ["!pca.py -dir L 1 10 -f data_files/pca/pca_example.txt"]}, {"block": 262, "type": "markdown", "linesLength": 2, "startIndex": 682, "lines": ["## pmd_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#pmd_magic)"]}, {"block": 263, "type": "code", "linesLength": 1, "startIndex": 684, "lines": ["!pmd_magic.py -f data_files/convert_2_magic/PMD_magic/PMD/ss0207a.pmd"]}, {"block": 264, "type": "markdown", "linesLength": 1, "startIndex": 685, "lines": ["# plotxy.py"]}, {"block": 265, "type": "code", "linesLength": 1, "startIndex": 686, "lines": ["!plotxy.py -f data_files/plotXY/plotXY_example.txt -fmt png -sav"]}, {"block": 266, "type": "code", "linesLength": 1, "startIndex": 687, "lines": ["Image(filename='plotXY.png')"]}, {"block": 267, "type": "markdown", "linesLength": 2, "startIndex": 688, "lines": ["## plot_cdf.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#plot_cdf)"]}, {"block": 268, "type": "code", "linesLength": 1, "startIndex": 690, "lines": ["!plot_cdf.py -f data_files/plot_cdf/gaussian.out -fmt png -sav"]}, {"block": 269, "type": "code", "linesLength": 1, "startIndex": 691, "lines": ["Image(filename='CDF_.png')"]}, {"block": 270, "type": "markdown", "linesLength": 1, "startIndex": 692, "lines": ["plot_geomagia.py doesn't work on the command line - see \\_PmagPy\\_nb example.  "]}, {"block": 271, "type": "markdown", "linesLength": 2, "startIndex": 693, "lines": ["## plot_magmap.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#plot_magmap)"]}, {"block": 272, "type": "code", "linesLength": 1, "startIndex": 695, "lines": ["!plot_magmap.py -el B -fmt png -sav"]}, {"block": 273, "type": "code", "linesLength": 1, "startIndex": 696, "lines": ["Image('igrf2016.0.png')"]}, {"block": 274, "type": "markdown", "linesLength": 2, "startIndex": 697, "lines": ["## plot_map_pts.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#plot_map_pts)"]}, {"block": 275, "type": "code", "linesLength": 2, "startIndex": 699, "lines": ["!plot_map_pts.py -f data_files/plot_map_pts/uniform.out -B -R \\\n", "    -prj ortho -eye 30 0 -etp -sym wo 10 -fmt png -sav"]}, {"block": 276, "type": "code", "linesLength": 5, "startIndex": 701, "lines": ["if basemap_present:\n", "    image = Image(filename='Map_PTS.png')\n", "else:\n", "    image = None\n", "image"]}, {"block": 277, "type": "markdown", "linesLength": 2, "startIndex": 706, "lines": ["## plotdi_a.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#plotdi_a)"]}, {"block": 278, "type": "code", "linesLength": 1, "startIndex": 708, "lines": ["!plotdi_a.py -f data_files/plotdi_a/plotdi_a_example.dat -fmt png -sav"]}, {"block": 279, "type": "code", "linesLength": 1, "startIndex": 709, "lines": ["Image(filename='eq.png')"]}, {"block": 280, "type": "markdown", "linesLength": 1, "startIndex": 710, "lines": ["## pmag_results_extract.py"]}, {"block": 281, "type": "code", "linesLength": 1, "startIndex": 711, "lines": ["!pmag_results_extract.py -WD data_files/pmag_results_extract -f pmag_results.txt"]}, {"block": 282, "type": "markdown", "linesLength": 2, "startIndex": 712, "lines": ["## polemap_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#polemap_magic)"]}, {"block": 283, "type": "code", "linesLength": 1, "startIndex": 714, "lines": ["!polemap_magic.py -WD data_files/polemap_magic -sav -fmt png"]}, {"block": 284, "type": "code", "linesLength": 6, "startIndex": 715, "lines": ["if basemap_present:\n", "    image = Image(filename=\"Skaistgirys Carbonates_Cismon Section_Monte Raparo_POLE_map.png\")\n", "else:\n", "    image = None\n", "\n", "image"]}, {"block": 285, "type": "markdown", "linesLength": 2, "startIndex": 721, "lines": ["## pt_rot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#pt_rot)"]}, {"block": 286, "type": "code", "linesLength": 2, "startIndex": 723, "lines": ["!awk '{print $1,$2}' data_files/pt_rot/pt_rot.input > data_files/pt_rot/lon_lat\n", "!plot_map_pts.py -prj moll -f data_files/pt_rot/lon_lat -sym g^ 10 -R -B -eye 0 0 -fmt png -sav"]}, {"block": 287, "type": "code", "linesLength": 5, "startIndex": 725, "lines": ["if basemap_present:\n", "    image = Image(filename='Map_PTS.png')\n", "else:\n", "    image = None\n", "image"]}, {"block": 288, "type": "code", "linesLength": 2, "startIndex": 730, "lines": ["!cat data_files/pt_rot/pt_rot.input\n", "!pt_rot.py -f data_files/pt_rot/pt_rot.input > data_files/pt_rot/pt_rot.out"]}, {"block": 289, "type": "code", "linesLength": 1, "startIndex": 732, "lines": ["!plot_map_pts.py -prj moll -f data_files/pt_rot/pt_rot.out -sym ro 10 -R -B -eye 0 0 -fmt png -sav"]}, {"block": 290, "type": "code", "linesLength": 5, "startIndex": 733, "lines": ["if basemap_present:\n", "    image = Image(filename='Map_PTS.png')\n", "else:\n", "    image = None\n", "image"]}, {"block": 291, "type": "markdown", "linesLength": 1, "startIndex": 738, "lines": ["Something still weird about pt_rot.py (the -ff option). "]}, {"block": 292, "type": "code", "linesLength": 1, "startIndex": 739, "lines": ["!pt_rot.py -ff data_files/pt_rot/nam_180-200.txt data_files/pt_rot/nam_panA.frp > data_files/pt_rot/pt_rot_panA.out\n"]}, {"block": 293, "type": "code", "linesLength": 1, "startIndex": 740, "lines": ["!plot_map_pts.py -f data_files/pt_rot/pt_rot_panA.out -prj ortho -eye 60 90 -sym ro 10 -B -R -fmt png -sav"]}, {"block": 294, "type": "code", "linesLength": 5, "startIndex": 741, "lines": ["if basemap_present:\n", "    image = Image(filename='Map_PTS.png')\n", "else:\n", "    image = None\n", "image"]}, {"block": 295, "type": "markdown", "linesLength": 2, "startIndex": 746, "lines": ["## qqplot.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#pt_rot)"]}, {"block": 296, "type": "code", "linesLength": 1, "startIndex": 748, "lines": ["!qqplot.py -f data_files/qqplot/gauss.out -fmt png -sav"]}, {"block": 297, "type": "code", "linesLength": 1, "startIndex": 749, "lines": ["Image(filename='qq.png')"]}, {"block": 298, "type": "markdown", "linesLength": 1, "startIndex": 750, "lines": ["## quick_hyst.py"]}, {"block": 299, "type": "code", "linesLength": 3, "startIndex": 751, "lines": ["!quick_hyst.py -WD data_files/3_0/McMurdo -spc mc04c-1 -fmt png\n", "\n", "Image(\"McMurdo_mc04c_mc04c_mc04c-1_hyst.png\")"]}, {"block": 300, "type": "markdown", "linesLength": 1, "startIndex": 754, "lines": ["## quick_hyst2.py"]}, {"block": 301, "type": "code", "linesLength": 1, "startIndex": 755, "lines": ["!quick_hyst2.py -f data_files/hysteresis_magic/hysteresis_magic_example.dat -fmt png -sav"]}, {"block": 302, "type": "code", "linesLength": 1, "startIndex": 756, "lines": ["Image(filename='IS06_IS06a_IS06a-1_hyst.png')"]}, {"block": 303, "type": "markdown", "linesLength": 2, "startIndex": 757, "lines": ["## revtest.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#revtest)"]}, {"block": 304, "type": "code", "linesLength": 1, "startIndex": 759, "lines": ["!revtest.py -f data_files/revtest/revtest_example.txt -fmt png -sav"]}, {"block": 305, "type": "code", "linesLength": 1, "startIndex": 760, "lines": ["Image(filename='REV_X.png')"]}, {"block": 306, "type": "code", "linesLength": 1, "startIndex": 761, "lines": ["Image(filename='REV_Y.png')"]}, {"block": 307, "type": "code", "linesLength": 1, "startIndex": 762, "lines": ["Image(filename='REV_Z.png')"]}, {"block": 308, "type": "markdown", "linesLength": 2, "startIndex": 763, "lines": ["## revtest_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#revtest_magic)"]}, {"block": 309, "type": "code", "linesLength": 1, "startIndex": 765, "lines": ["!revtest_magic.py -f data_files/revtest_magic/sites.txt -fmt png -sav -DM 3 -exc"]}, {"block": 310, "type": "code", "linesLength": 1, "startIndex": 766, "lines": ["Image(\"Rev_Y.png\")"]}, {"block": 311, "type": "code", "linesLength": 1, "startIndex": 767, "lines": ["!revtest_magic.py -f data_files/revtest_magic/revtest_magic_example.txt -fmt png -sav -DM 2"]}, {"block": 312, "type": "code", "linesLength": 1, "startIndex": 768, "lines": ["Image(filename='REV_X.png')"]}, {"block": 313, "type": "markdown", "linesLength": 2, "startIndex": 769, "lines": ["## s_eigs.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#s_eigs)"]}, {"block": 314, "type": "code", "linesLength": 1, "startIndex": 771, "lines": ["!s_eigs.py -f data_files/s_eigs/s_eigs_example.dat"]}, {"block": 315, "type": "markdown", "linesLength": 2, "startIndex": 772, "lines": ["## s_geo.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#s_geo)"]}, {"block": 316, "type": "code", "linesLength": 1, "startIndex": 774, "lines": ["!s_geo.py -f data_files/s_geo/s_geo_example.dat"]}, {"block": 317, "type": "markdown", "linesLength": 2, "startIndex": 775, "lines": ["## s_hext.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#s_hext)"]}, {"block": 318, "type": "code", "linesLength": 1, "startIndex": 777, "lines": ["!s_geo.py -f data_files/s_geo/s_geo_example.dat | s_hext.py"]}, {"block": 319, "type": "markdown", "linesLength": 2, "startIndex": 778, "lines": ["## sio_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#sio_magic)"]}, {"block": 320, "type": "markdown", "linesLength": 1, "startIndex": 780, "lines": ["See [irmaq_magic.py](#irmaq_magic.py)"]}, {"block": 321, "type": "markdown", "linesLength": 2, "startIndex": 781, "lines": ["## s_tilt.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#s_tilt)"]}, {"block": 322, "type": "code", "linesLength": 1, "startIndex": 783, "lines": ["!s_tilt.py -f data_files/s_tilt/s_tilt_example.dat"]}, {"block": 323, "type": "markdown", "linesLength": 2, "startIndex": 784, "lines": ["## s_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#s_magic)"]}, {"block": 324, "type": "code", "linesLength": 1, "startIndex": 786, "lines": ["!s_magic.py -WD data_files/convert_2_magic/s_magic -f s_magic_example.dat "]}, {"block": 325, "type": "markdown", "linesLength": 2, "startIndex": 787, "lines": ["## scalc.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#scalc)"]}, {"block": 326, "type": "code", "linesLength": 1, "startIndex": 789, "lines": ["!scalc.py -f data_files/scalc/scalc_example.txt"]}, {"block": 327, "type": "code", "linesLength": 1, "startIndex": 790, "lines": ["!scalc.py < data_files/scalc/scalc_example.txt"]}, {"block": 328, "type": "code", "linesLength": 1, "startIndex": 791, "lines": ["!scalc.py -f data_files/scalc/scalc_example.txt -v"]}, {"block": 329, "type": "code", "linesLength": 1, "startIndex": 792, "lines": ["!scalc.py -f data_files/scalc/scalc_example.txt -v -b"]}, {"block": 330, "type": "markdown", "linesLength": 2, "startIndex": 793, "lines": ["## scalc_magic.py \n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#scalc_magic)"]}, {"block": 331, "type": "code", "linesLength": 1, "startIndex": 795, "lines": ["!scalc_magic.py -f data_files/scalc_magic/sites.txt -c 30"]}, {"block": 332, "type": "code", "linesLength": 1, "startIndex": 796, "lines": ["!scalc_magic.py -f data_files/scalc_magic/pmag_results.txt -c 30 -dm 2"]}, {"block": 333, "type": "markdown", "linesLength": 3, "startIndex": 797, "lines": ["## site_edit.py \n", "\n", "This program requires user interaction and can only be used on the command line. "]}, {"block": 334, "type": "markdown", "linesLength": 3, "startIndex": 800, "lines": ["## specimens_results_magic.py\n", "\n", "This program has been superceded by Pmag GUI and is not maintained.  "]}, {"block": 335, "type": "markdown", "linesLength": 2, "startIndex": 803, "lines": ["## stats.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#stats)"]}, {"block": 336, "type": "code", "linesLength": 1, "startIndex": 805, "lines": ["!stats.py -f data_files/gaussian/gauss.out"]}, {"block": 337, "type": "markdown", "linesLength": 2, "startIndex": 806, "lines": ["## strip_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#strip_magic)"]}, {"block": 338, "type": "code", "linesLength": 1, "startIndex": 808, "lines": ["!strip_magic.py -f data_files/strip_magic/pmag_results.txt -x age -y lat -fmt png -sav -DM 2"]}, {"block": 339, "type": "code", "linesLength": 1, "startIndex": 809, "lines": ["Image(filename='strat.png')"]}, {"block": 340, "type": "code", "linesLength": 2, "startIndex": 810, "lines": ["!rm strat.png\n", "!strip_magic.py -f data_files/strip_magic/sites_with_vgps.txt -x age -y lat -fmt png -sav -DM 3"]}, {"block": 341, "type": "code", "linesLength": 1, "startIndex": 812, "lines": ["Image(filename='strat.png')"]}, {"block": 342, "type": "markdown", "linesLength": 2, "startIndex": 813, "lines": ["## sundec.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#sundec)"]}, {"block": 343, "type": "code", "linesLength": 1, "startIndex": 815, "lines": ["!sundec.py -f data_files/sundec/sundec_example.dat"]}, {"block": 344, "type": "markdown", "linesLength": 4, "startIndex": 816, "lines": ["## thellier_magic.py \n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#thellier_magic)\n", "\n", "This program is no longer maintained - try Thellier GUI instead.  "]}, {"block": 345, "type": "markdown", "linesLength": 3, "startIndex": 820, "lines": ["## thellier_magic_redo.py\n", "\n", "The function of this program has been incorporated into Thellier GUI so you should use that instead.  "]}, {"block": 346, "type": "markdown", "linesLength": 2, "startIndex": 823, "lines": ["## tk03.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#tk03)"]}, {"block": 347, "type": "code", "linesLength": 2, "startIndex": 825, "lines": ["!tk03.py -lat 30 > data_files/tk03/tk03.out\n", "!eqarea.py -f data_files/tk03/tk03.out -fmt png -sav"]}, {"block": 348, "type": "code", "linesLength": 1, "startIndex": 827, "lines": ["Image(filename='tk03_eq.png')"]}, {"block": 349, "type": "markdown", "linesLength": 2, "startIndex": 828, "lines": ["## trmaq_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#trmaq_magic)"]}, {"block": 350, "type": "code", "linesLength": 2, "startIndex": 830, "lines": ["!trmaq_magic.py -ft data_files/3_0/McMurdo/specimens.txt \\\n", "    -f data_files/3_0/McMurdo/measurements.txt -sav -fmt png"]}, {"block": 351, "type": "code", "linesLength": 1, "startIndex": 832, "lines": ["Image(\"mc117b1_TRM.png\")"]}, {"block": 352, "type": "code", "linesLength": 3, "startIndex": 833, "lines": ["!rm mc117b1_TRM.png\n", "!trmaq_magic.py -ft data_files/2_5/McMurdo/pmag_specimens.txt \\\n", "    -f data_files/2_5/McMurdo/magic_measurements.txt -sav -fmt png -DM 2"]}, {"block": 353, "type": "code", "linesLength": 1, "startIndex": 836, "lines": ["Image(\"mc117b1_TRM.png\")"]}, {"block": 354, "type": "markdown", "linesLength": 2, "startIndex": 837, "lines": ["## uniform.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#uniform)"]}, {"block": 355, "type": "code", "linesLength": 1, "startIndex": 839, "lines": ["!uniform.py -n 50"]}, {"block": 356, "type": "code", "linesLength": 2, "startIndex": 840, "lines": ["!uniform.py -n 50 > data_files/uniform/uniform.out\n", "!eqarea.py -f data_files/uniform/uniform.out -fmt png -sav"]}, {"block": 357, "type": "code", "linesLength": 1, "startIndex": 842, "lines": ["Image(filename='uniform_eq.png')"]}, {"block": 358, "type": "markdown", "linesLength": 3, "startIndex": 843, "lines": ["## update_measurements.txt \n", "\n", "This program has been superceded by Pmag GUI, so you should use that."]}, {"block": 359, "type": "markdown", "linesLength": 4, "startIndex": 846, "lines": ["## upload_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#upload_magic)\n", "\n", "program has been superceded by Pmag GUI, so you should use that."]}, {"block": 360, "type": "markdown", "linesLength": 2, "startIndex": 850, "lines": ["## utrecht_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#utrecht_magic)"]}, {"block": 361, "type": "code", "linesLength": 1, "startIndex": 852, "lines": ["!utrecht_magic.py -f data_files/convert_2_magic/UTRECHT_magic/Utrecht_Example.af"]}, {"block": 362, "type": "markdown", "linesLength": 2, "startIndex": 853, "lines": ["## vdm_b.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#vdm_b)"]}, {"block": 363, "type": "code", "linesLength": 1, "startIndex": 855, "lines": ["!vdm_b.py -f data_files/vdm_b/vdm_b_example.dat"]}, {"block": 364, "type": "code", "linesLength": 1, "startIndex": 856, "lines": ["!cat data_files/b_vdm/b_vdm_example.dat"]}, {"block": 365, "type": "markdown", "linesLength": 2, "startIndex": 857, "lines": ["## vector_mean.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#vector_mean)"]}, {"block": 366, "type": "code", "linesLength": 1, "startIndex": 859, "lines": ["!vector_mean.py -f data_files/vector_mean/vector_mean_example.dat"]}, {"block": 367, "type": "markdown", "linesLength": 2, "startIndex": 860, "lines": ["## vgp_di.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#vgp_di)"]}, {"block": 368, "type": "code", "linesLength": 1, "startIndex": 862, "lines": ["!vgp_di.py -f data_files/vgp_di/vgp_di_example.dat"]}, {"block": 369, "type": "markdown", "linesLength": 2, "startIndex": 863, "lines": ["## vgpmap_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#vgpmap_magic)"]}, {"block": 370, "type": "code", "linesLength": 1, "startIndex": 865, "lines": ["!vgpmap_magic.py -WD data_files/3_0/McMurdo -f sites.txt -crd g -prj ortho -eye 60 0  -sym ko 10 -fmt png -S -sav"]}, {"block": 371, "type": "code", "linesLength": 5, "startIndex": 866, "lines": ["if basemap_present:\n", "    image = Image(\"McMurdo_VGP_map.png\")\n", "else:\n", "    image = None\n", "image"]}, {"block": 372, "type": "markdown", "linesLength": 1, "startIndex": 871, "lines": ["## vgpmap_magic2.py"]}, {"block": 373, "type": "code", "linesLength": 2, "startIndex": 872, "lines": ["!vgpmap_magic2.py -f data_files/vgpmap_magic/pmag_results.txt \\\n", "    -crd g -prj ortho -eye 60 0 -etp -sym wo 10 -fmt png -sav"]}, {"block": 374, "type": "code", "linesLength": 5, "startIndex": 874, "lines": ["if basemap_present:\n", "    image = Image(filename='Snake_River_VGP_map.png')\n", "else:\n", "    image = None\n", "image"]}, {"block": 375, "type": "markdown", "linesLength": 2, "startIndex": 879, "lines": ["## watsons_f.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#watsons_f)"]}, {"block": 376, "type": "code", "linesLength": 2, "startIndex": 881, "lines": ["!watsons_f.py -f data_files/watsons_f/watsons_f_example_file1.dat \\\n", "-f2 data_files/watsons_f/watsons_f_example_file2.dat"]}, {"block": 377, "type": "markdown", "linesLength": 2, "startIndex": 883, "lines": ["## watsons_v.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#watsons_v)"]}, {"block": 378, "type": "code", "linesLength": 2, "startIndex": 885, "lines": ["!watsons_v.py -f data_files/watsons_f/watsons_f_example_file1.dat \\\n", "-f2 data_files/watsons_f/watsons_f_example_file2.dat -fmt png -sav"]}, {"block": 379, "type": "code", "linesLength": 1, "startIndex": 887, "lines": ["Image(filename=\"watsons_v_watsons_f_example_file1_watsons_f_example_file2.png\")"]}, {"block": 380, "type": "markdown", "linesLength": 4, "startIndex": 888, "lines": ["## zeq.py \n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#zeq)\n", "\n", "This program requires interaction and can only be run from the command line. "]}, {"block": 381, "type": "markdown", "linesLength": 4, "startIndex": 892, "lines": ["## zeq_magic.py\n", "[\\[notebook version\\]](http://pmagpy.github.io/PmagPy.html#zeq_magic)\n", "\n", "##### Note: This program is no longer maintained.  It has been superceded by demag_gui.py"]}, {"block": 382, "type": "code", "linesLength": 2, "startIndex": 896, "lines": ["!zeq_magic.py -WD data_files/3_0/McMurdo -spc mc01a -fmt png\n", "Image('mc01a_eqarea.png')"]}, {"block": 383, "type": "markdown", "linesLength": 1, "startIndex": 898, "lines": ["# cleanup the directory"]}, {"block": 384, "type": "code", "linesLength": 64, "startIndex": 899, "lines": ["import os\n", "import glob\n", "import shutil\n", "\n", "\n", "glob_list = ['data_files/irmaq_magic/*.magic', '*.magic', '*.png', '*.jpg',\n", "            'data_files/convert_2_magic/mini_magic/s*.txt', 'data_files/convert_2_magic/s_magic/*.txt',\n", "            'data_files/irmaq_magic/coil*.txt', 'rmag_*.txt', 'data_files/orientation_magic/s*.txt',\n", "            'data_files/mk_redo/*redo*', 'data_files/nrm_specimens_magic/s*.txt', 'data_files/irmaq_magic/s*.txt',\n", "            'data_files/download_magic/pmag_s*.txt']\n", "for pattern in glob_list:\n", "    for fname in glob.glob(pattern):\n", "        os.remove(fname)\n", "    \n", "    \n", "files_to_remove = [\"data_files/aarm_magic/aarm_measurements.txt\", \"data_files/irmaq_magic/magic_measurements.txt\",\n", "                  \"data_files/download_magic/er_ages.txt\", \"data_files/download_magic/er_citations.txt\",\n", "                  \"data_files/azdip_magic/er_samples.txt\", \"data_files/azdip_magic/samples.txt\",\n", "                  \"data_files/convert_2_magic/mini_magic/locations.txt\", \n", "                  \"data_files/convert_2_magic/mini_magic/measurements.txt\", \"measurements.txt\", 'specimens.txt',\n", "                  'sites.txt', 'locations.txt', 'stored.json', 'data_files/nrm_specimens_magic/criteria.txt',\n", "                  'data_files/download_magic/er_locations.txt', 'data_files/download_magic/pmag_results.txt',\n", "                  'data_files/nrm_specimens_magic/measurements.txt', 'data_files/nrm_specimens_magic/locations.txt',\n", "                  'data_files/nrm_specimens_magic/contribution.txt', 'data_files/nrm_specimens_magic/ages.txt', \n", "                  'data_files/irmaq_magic/locations.txt', 'data_files/download_magic/specimens.txt', \n", "                  'data_files/download_magic/samples.txt', 'data_files/download_magic/locations.txt', \n", "                  'data_files/download_magic/contribution.txt', 'data_files/download_magic/criteria.txt',\n", "                  'data_files/download_magic/ages.txt', 'data_files/download_magic/measurements.txt']\n", "for fname in files_to_remove:\n", "    try:\n", "        os.remove(fname)\n", "    except FileNotFoundError:\n", "        pass\n", "for dtype in ['specimens.txt', 'samples.txt', 'sites.txt', 'locations.txt']:\n", "    try:\n", "        os.remove(dtype)\n", "    except FileNotFoundError:\n", "        pass\n", "    for fname in os.listdir():\n", "        if fname.endswith(dtype):\n", "            os.remove(fname)\n", "            \n", "            \n", "            \n", "# remove all MagIC-generated files from a given directory\n", "\n", "def remove_magic_files(directory):\n", "    magic_files = ['specimens.txt', 'samples.txt', 'sites.txt', 'locations.txt', 'measurements.txt', \n", "                   'contribution.txt', 'ages.txt']\n", "    dir_files = os.listdir(directory)\n", "    for dtype in magic_files:\n", "        try:\n", "            os.remove(dtype)\n", "        except FileNotFoundError:\n", "            pass\n", "        for fname in dir_files:\n", "            if fname.endswith(dtype):\n", "                try:\n", "                    os.remove(os.path.join(directory, fname))\n", "                except FileNotFoundError:\n", "                    pass\n", "    for full_fname in glob.glob(os.path.join(directory, '*.magic')):\n", "        os.remove(full_fname)\n", "        \n"]}]