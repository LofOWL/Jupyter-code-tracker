[{"block": 0, "type": "markdown", "linesLength": 3, "startIndex": 0, "lines": ["<i>Copyright (c) Microsoft Corporation. All rights reserved.</i>\n", "\n", "<i>Licensed under the MIT License.</i>"]}, {"block": 1, "type": "markdown", "linesLength": 23, "startIndex": 3, "lines": ["# Submit an Existing Notebook to AzureML\n", "## Introduction to Azure Machine Learning  \n", "The **[Azure Machine Learning service (AzureML)](https://docs.microsoft.com/azure/machine-learning/service/overview-what-is-azure-ml)** provides a cloud-based environment you can use to prep data, train, test, deploy, manage, and track machine learning models. By using Azure Machine Learning service, you can start training on your local machine and then scale out to the cloud. With many available compute targets, like [Azure Machine Learning Compute](https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-set-up-training-targets#amlcompute) and [Azure Databricks](https://docs.microsoft.com/en-us/azure/azure-databricks/what-is-azure-databricks), and with [advanced hyperparameter tuning services](https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-tune-hyperparameters), you can build better models faster by using the power of the cloud.\n", "\n", "Data scientists and AI developers use the main [Azure Machine Learning Python SDK](https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py) to build and run machine learning workflows with the Azure Machine Learning service. You can interact with the service in any Python environment, including Jupyter Notebooks or your favorite Python IDE. The Azure Machine Learning SDK allows you the choice of using local or cloud compute resources, while managing and maintaining the complete data science workflow from the cloud.\n", "![AzureML Workflow](https://docs.microsoft.com/en-us/azure/machine-learning/service/media/overview-what-is-azure-ml/aml.png)\n", "\n", "This noteboook provides a scaffold to directly submit an existing notebook to AzureML compute targets. Now a user doesn't have to rewrite the training script, instead, just by replacing file name, now user can submit notebook directly.\n", "\n", "### Advantages of using AzureML:\n", "- Manage cloud resources for monitoring, logging, and organizing your machine learning experiments.\n", "- Train models either locally or by using cloud resources, including GPU-accelerated model training.\n", "- Easy to scale out when dataset grows - by just creating and pointing to new compute target\n", "\n", "### Prerequisities\n", "   - **Azure Subscription**\n", "     - If you don\u2019t have an Azure subscription, create a free account before you begin. Try the\u00a0[free or paid version of Azure Machine Learning service\u00a0today](https://azure.microsoft.com/en-us/free/services/machine-learning/).\n", "     - You get credits to spend on Azure services, which will easily cover the cost of running this example notebook. After they're used up, you can keep the account and use\u00a0[free Azure services](https://azure.microsoft.com/en-us/free/). Your credit card is never charged unless you explicitly change your settings and ask to be charged. Or\u00a0[activate MSDN subscriber benefits](https://azure.microsoft.com/en-us/pricing/member-offers/credit-for-visual-studio-subscribers/), which give you credits every month that you can use for paid Azure services.\n", "\n", "# Setup environment\n", "\n", "### Install azure.contrib.notebook package\n", "We need notebook_run_config from azureml.contrib.notebook to run this notebook. Since azureml.contrib.notebook contains experimental components, it's not included in generated .yaml file by default."]}, {"block": 2, "type": "code", "linesLength": 1, "startIndex": 26, "lines": ["#!pip install \"azureml.contrib.notebook>=1.0.21.1\""]}, {"block": 3, "type": "code", "linesLength": 13, "startIndex": 27, "lines": ["import os\n", "import azureml.core\n", "from azureml.core import Workspace\n", "from os import path, makedirs\n", "import shutil\n", "from azureml.core import Experiment\n", "from azureml.widgets import RunDetails\n", "from azureml.core.runconfig import RunConfiguration\n", "from azureml.contrib.notebook.notebook_run_config import NotebookRunConfig, PapermillExecutionHandler\n", "from azureml.core.runconfig import DEFAULT_CPU_IMAGE\n", "from azureml.core.conda_dependencies import CondaDependencies\n", "\n", "print(\"azureml.core version: {}\".format(azureml.core.VERSION))"]}, {"block": 4, "type": "markdown", "linesLength": 5, "startIndex": 40, "lines": ["### Connect to an AzureML workspace\n", "\n", "An [AzureML Workspace](https://docs.microsoft.com/en-us/python/api/azureml-core/azureml.core.workspace.workspace?view=azure-ml-py) is an Azure resource that organizes and coordinates the actions of many other Azure resources to assist in executing and sharing machine learning workflows. In particular, an Azure ML Workspace coordinates storage, databases, and compute resources providing added functionality for machine learning experimentation, deployment, inferencing, and the monitoring of deployed models.\n", "\n", "**If you are trying to create or connect to a workspace for the first time in this environment, uncomment and run the below cell. ** It will load code necessary to create workspace. After code is loaded, run the cell again to create the workspace. It will create `aml_config\\config.json` file which contains workspace configuration for future notebook runs. See [this tutorial](https://docs.microsoft.com/en-us/azure/machine-learning/service/setup-create-workspace#portal) to locate information such as subscription id."]}, {"block": 5, "type": "code", "linesLength": 1, "startIndex": 45, "lines": ["# %load ../../scripts/create_workspace.py"]}, {"block": 6, "type": "code", "linesLength": 1, "startIndex": 46, "lines": ["ws = Workspace.from_config()"]}, {"block": 7, "type": "markdown", "linesLength": 8, "startIndex": 47, "lines": ["This example uses run-based AzureML Compute, which requires minimum setup. Alternatively, you can use persistent compute target (cpu or gpu cluster) or remote virtual machines. For more details, see [How to set up training targets](https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-set-up-training-targets).\n", "\n", "Cost-wise, according to Azure [Pricing calculator](https://azure.microsoft.com/en-us/pricing/calculator/), with example VM size `STANDARD_D2_V2`, it costs a few dollars to run this notebook, which is well covered by Azure new subscription credit. For billing and pricing questions, please contact [Azure support](https://azure.microsoft.com/en-us/support/options/).\n", "\n", "**Note**:\n", "- See list of all available VM sizes [here](https://docs.microsoft.com/en-us/azure/templates/Microsoft.Compute/2018-10-01/virtualMachines?toc=%2Fen-us%2Fazure%2Fazure-resource-manager%2Ftoc.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#hardwareprofile-object).\n", "- As with other Azure services, there are limits on certain resources (for eg. AmlCompute quota) associated with the Azure Machine Learning service. Please read [these instructions](https://docs.microsoft.com/en-us/azure/azure-supportability/resource-manager-core-quotas-request) on the default limits and how to request more quota.\n", "\n"]}, {"block": 8, "type": "code", "linesLength": 27, "startIndex": 55, "lines": ["import papermill\n", "NOTEBOOK_NAME = 'sar_movielens.ipynb'\n", "EXPERIMENT_NAME = 'sdk-papermill'\n", "exp_directory = 'test_dir' + EXPERIMENT_NAME\n", "# create experiment directory\n", "if not path.exists(exp_directory):\n", "    makedirs(exp_directory)\n", "notebook_path = path.join(exp_directory, NOTEBOOK_NAME)\n", "shutil.copy(NOTEBOOK_NAME, notebook_path)\n", "        \n", "exp = Experiment(workspace=ws, name=EXPERIMENT_NAME)\n", "\n", "run_config_aml = RunConfiguration()\n", "run_config_aml.target = \"amlcompute\" # possible to use different compute targets\n", "run_config_aml.amlcompute.vm_size = 'STANDARD_D2_V2'\n", "run_config_aml.environment.docker.enabled = True\n", "run_config_aml.environment.docker.base_image = DEFAULT_CPU_IMAGE\n", "run_config_aml.environment.python.user_managed_dependencies = False\n", "run_config_aml.auto_prepare_environment = True\n", "run_config_aml.environment.python.conda_dependencies = CondaDependencies.create(python_version='3.6.2')\n", "run_config_aml.environment.python.conda_dependencies.add_pip_package('sklearn')\n", "\n", "cfg = NotebookRunConfig(source_directory='../../',\n", "                            notebook='notebooks/00_quick_start/' + NOTEBOOK_NAME,\n", "                            output_notebook='outputs/out.ipynb',\n", "                            parameters={\"MOVIELENS_DATA_SIZE\": \"100k\", \"TOP_K\": 10},\n", "                            run_config=run_config_aml)\n"]}, {"block": 9, "type": "markdown", "linesLength": 1, "startIndex": 82, "lines": ["`exp.submit()` will submit source_directory folder and designate notebook to run"]}, {"block": 10, "type": "code", "linesLength": 2, "startIndex": 83, "lines": ["run = exp.submit(cfg)\n", "run"]}, {"block": 11, "type": "markdown", "linesLength": 9, "startIndex": 85, "lines": ["Above cell should output similar table as below\n", "![Experiment submit output](https://recodatasets.blob.core.windows.net/images/aml_papermill_cell_output.jpg)\n", "After clicking \"Link to Azure Portal\", experiment run details tab looks like this\n", "![Azure Portal Experiment](https://recodatasets.blob.core.windows.net/images/aml_papermill_portal.jpg)\n", "Experiment output is out.ipynb. You can download and view this file locally.\n", "![Output file](https://recodatasets.blob.core.windows.net/images/aml_papermill_outputs_tab.jpg)\n", "#### Jupyter widget\n", "\n", "You can use a Jupyter widget to monitor the progress of the run. Like the run submission, the widget is asynchronous and provides live updates every 10-15 seconds until the job completes."]}, {"block": 12, "type": "code", "linesLength": 1, "startIndex": 94, "lines": ["RunDetails(run).show()"]}, {"block": 13, "type": "code", "linesLength": 0, "startIndex": 95, "lines": []}]